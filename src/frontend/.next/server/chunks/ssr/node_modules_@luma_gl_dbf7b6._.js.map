{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"webgl-constants.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/constants/src/webgl-constants.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\n/* eslint-disable key-spacing, max-len, no-inline-comments, camelcase */\r\n\r\n/**\r\n * Standard WebGL, WebGL2 and extension constants (OpenGL constants)\r\n * @note (Most) of these constants are also defined on the WebGLRenderingContext interface.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Constants\r\n * @privateRemarks Locally called `GLEnum` instead of `GL`, because `babel-plugin-inline-webl-constants`\r\n *  both depends on and processes this module, but shouldn't replace these declarations.\r\n */\r\n// eslint-disable-next-line no-shadow\r\nenum GLEnum {\r\n  // Clearing buffers\r\n  // Constants passed to clear() to clear buffer masks.\r\n\r\n  /** Passed to clear to clear the current depth buffer. */\r\n  DEPTH_BUFFER_BIT = 0x00000100,\r\n  /** Passed to clear to clear the current stencil buffer. */\r\n  STENCIL_BUFFER_BIT = 0x00000400,\r\n  /** Passed to clear to clear the current color buffer. */\r\n  COLOR_BUFFER_BIT = 0x00004000,\r\n\r\n  // Rendering primitives\r\n  // Constants passed to drawElements() or drawArrays() to specify what kind of primitive to render.\r\n\r\n  /** Passed to drawElements or drawArrays to draw single points. */\r\n  POINTS = 0x0000,\r\n  /** Passed to drawElements or drawArrays to draw lines. Each vertex connects to the one after it. */\r\n  LINES = 0x0001,\r\n  /** Passed to drawElements or drawArrays to draw lines. Each set of two vertices is treated as a separate line segment. */\r\n  LINE_LOOP = 0x0002,\r\n  /** Passed to drawElements or drawArrays to draw a connected group of line segments from the first vertex to the last. */\r\n  LINE_STRIP = 0x0003,\r\n  /** Passed to drawElements or drawArrays to draw triangles. Each set of three vertices creates a separate triangle. */\r\n  TRIANGLES = 0x0004,\r\n  /** Passed to drawElements or drawArrays to draw a connected group of triangles. */\r\n  TRIANGLE_STRIP = 0x0005,\r\n  /** Passed to drawElements or drawArrays to draw a connected group of triangles. Each vertex connects to the previous and the first vertex in the fan. */\r\n  TRIANGLE_FAN = 0x0006,\r\n\r\n  // Blending modes\r\n  // Constants passed to blendFunc() or blendFuncSeparate() to specify the blending mode (for both, RBG and alpha, or separately).\r\n  /** Passed to blendFunc or blendFuncSeparate to turn off a component. */\r\n  ZERO = 0,\r\n  /** Passed to blendFunc or blendFuncSeparate to turn on a component. */\r\n  ONE = 1,\r\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by the source elements color. */\r\n  SRC_COLOR = 0x0300,\r\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source elements color. */\r\n  ONE_MINUS_SRC_COLOR = 0x0301,\r\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by the source's alpha. */\r\n  SRC_ALPHA = 0x0302,\r\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the source's alpha. */\r\n  ONE_MINUS_SRC_ALPHA = 0x0303,\r\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's alpha. */\r\n  DST_ALPHA = 0x0304,\r\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's alpha. */\r\n  ONE_MINUS_DST_ALPHA = 0x0305,\r\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by the destination's color. */\r\n  DST_COLOR = 0x0306,\r\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by one minus the destination's color. */\r\n  ONE_MINUS_DST_COLOR = 0x0307,\r\n  /** Passed to blendFunc or blendFuncSeparate to multiply a component by the minimum of source's alpha or one minus the destination's alpha. */\r\n  SRC_ALPHA_SATURATE = 0x0308,\r\n  /** Passed to blendFunc or blendFuncSeparate to specify a constant color blend function. */\r\n  CONSTANT_COLOR = 0x8001,\r\n  /** Passed to blendFunc or blendFuncSeparate to specify one minus a constant color blend function. */\r\n  ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n  /** Passed to blendFunc or blendFuncSeparate to specify a constant alpha blend function. */\r\n  CONSTANT_ALPHA = 0x8003,\r\n  /** Passed to blendFunc or blendFuncSeparate to specify one minus a constant alpha blend function. */\r\n  ONE_MINUS_CONSTANT_ALPHA = 0x8004,\r\n\r\n  // Blending equations\r\n  // Constants passed to blendEquation() or blendEquationSeparate() to control\r\n  // how the blending is calculated (for both, RBG and alpha, or separately).\r\n\r\n  /** Passed to blendEquation or blendEquationSeparate to set an addition blend function. */\r\n  /** Passed to blendEquation or blendEquationSeparate to specify a subtraction blend function (source - destination). */\r\n  /** Passed to blendEquation or blendEquationSeparate to specify a reverse subtraction blend function (destination - source). */\r\n  FUNC_ADD = 0x8006,\r\n  FUNC_SUBTRACT = 0x800a,\r\n  FUNC_REVERSE_SUBTRACT = 0x800b,\r\n\r\n  // Getting GL parameter information\r\n  // Constants passed to getParameter() to specify what information to return.\r\n\r\n  /** Passed to getParameter to get the current RGB blend function. */\r\n  BLEND_EQUATION = 0x8009,\r\n  /** Passed to getParameter to get the current RGB blend function. Same as BLEND_EQUATION */\r\n  BLEND_EQUATION_RGB = 0x8009,\r\n  /** Passed to getParameter to get the current alpha blend function. Same as BLEND_EQUATION */\r\n  BLEND_EQUATION_ALPHA = 0x883d,\r\n  /** Passed to getParameter to get the current destination RGB blend function. */\r\n  BLEND_DST_RGB = 0x80c8,\r\n  /** Passed to getParameter to get the current destination RGB blend function. */\r\n  BLEND_SRC_RGB = 0x80c9,\r\n  /** Passed to getParameter to get the current destination alpha blend function. */\r\n  BLEND_DST_ALPHA = 0x80ca,\r\n  /** Passed to getParameter to get the current source alpha blend function. */\r\n  BLEND_SRC_ALPHA = 0x80cb,\r\n\r\n  /** Passed to getParameter to return a the current blend color. */\r\n  BLEND_COLOR = 0x8005,\r\n  /** Passed to getParameter to get the array buffer binding. */\r\n  ARRAY_BUFFER_BINDING = 0x8894,\r\n  /** Passed to getParameter to get the current element array buffer. */\r\n  ELEMENT_ARRAY_BUFFER_BINDING = 0x8895,\r\n  /** Passed to getParameter to get the current lineWidth (set by the lineWidth method). */\r\n  LINE_WIDTH = 0x0b21,\r\n  /** Passed to getParameter to get the current size of a point drawn with gl.POINTS */\r\n  ALIASED_POINT_SIZE_RANGE = 0x846d,\r\n  /** Passed to getParameter to get the range of available widths for a line. Returns a length-2 array with the lo value at 0, and hight at 1. */\r\n  ALIASED_LINE_WIDTH_RANGE = 0x846e,\r\n  /** Passed to getParameter to get the current value of cullFace. Should return FRONT, BACK, or FRONT_AND_BACK */\r\n  CULL_FACE_MODE = 0x0b45,\r\n  /** Passed to getParameter to determine the current value of frontFace. Should return CW or CCW. */\r\n  FRONT_FACE = 0x0b46,\r\n  /** Passed to getParameter to return a length-2 array of floats giving the current depth range. */\r\n  DEPTH_RANGE = 0x0b70,\r\n  /** Passed to getParameter to determine if the depth write mask is enabled. */\r\n\r\n  DEPTH_WRITEMASK = 0x0b72,\r\n  /** Passed to getParameter to determine the current depth clear value. */\r\n  DEPTH_CLEAR_VALUE = 0x0b73,\r\n  /** Passed to getParameter to get the current depth function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL. */\r\n  DEPTH_FUNC = 0x0b74,\r\n  /** Passed to getParameter to get the value the stencil will be cleared to. */\r\n  STENCIL_CLEAR_VALUE = 0x0b91,\r\n  /** Passed to getParameter to get the current stencil function. Returns NEVER, ALWAYS, LESS, EQUAL, LEQUAL, GREATER, GEQUAL, or NOTEQUAL. */\r\n  STENCIL_FUNC = 0x0b92,\r\n  /** Passed to getParameter to get the current stencil fail function. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP. */\r\n  STENCIL_FAIL = 0x0b94,\r\n  /** Passed to getParameter to get the current stencil fail function should the depth buffer test fail. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP. */\r\n  STENCIL_PASS_DEPTH_FAIL = 0x0b95,\r\n  /** Passed to getParameter to get the current stencil fail function should the depth buffer test pass. Should return KEEP, REPLACE, INCR, DECR, INVERT, INCR_WRAP, or DECR_WRAP. */\r\n  STENCIL_PASS_DEPTH_PASS = 0x0b96,\r\n  /** Passed to getParameter to get the reference value used for stencil tests. */\r\n  STENCIL_REF = 0x0b97,\r\n  STENCIL_VALUE_MASK = 0x0b93,\r\n  STENCIL_WRITEMASK = 0x0b98,\r\n  STENCIL_BACK_FUNC = 0x8800,\r\n  STENCIL_BACK_FAIL = 0x8801,\r\n  STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,\r\n  STENCIL_BACK_PASS_DEPTH_PASS = 0x8803,\r\n  STENCIL_BACK_REF = 0x8ca3,\r\n  STENCIL_BACK_VALUE_MASK = 0x8ca4,\r\n  STENCIL_BACK_WRITEMASK = 0x8ca5,\r\n\r\n  /** An Int32Array with four elements for the current viewport dimensions. */\r\n  VIEWPORT = 0x0ba2,\r\n  /** An Int32Array with four elements for the current scissor box dimensions. */\r\n  SCISSOR_BOX = 0x0c10,\r\n  COLOR_CLEAR_VALUE = 0x0c22,\r\n  COLOR_WRITEMASK = 0x0c23,\r\n  UNPACK_ALIGNMENT = 0x0cf5,\r\n  PACK_ALIGNMENT = 0x0d05,\r\n  MAX_TEXTURE_SIZE = 0x0d33,\r\n  MAX_VIEWPORT_DIMS = 0x0d3a,\r\n  SUBPIXEL_BITS = 0x0d50,\r\n  RED_BITS = 0x0d52,\r\n  GREEN_BITS = 0x0d53,\r\n  BLUE_BITS = 0x0d54,\r\n  ALPHA_BITS = 0x0d55,\r\n  DEPTH_BITS = 0x0d56,\r\n  STENCIL_BITS = 0x0d57,\r\n  POLYGON_OFFSET_UNITS = 0x2a00,\r\n  POLYGON_OFFSET_FACTOR = 0x8038,\r\n  TEXTURE_BINDING_2D = 0x8069,\r\n  SAMPLE_BUFFERS = 0x80a8,\r\n  SAMPLES = 0x80a9,\r\n  SAMPLE_COVERAGE_VALUE = 0x80aa,\r\n  SAMPLE_COVERAGE_INVERT = 0x80ab,\r\n  COMPRESSED_TEXTURE_FORMATS = 0x86a3,\r\n  VENDOR = 0x1f00,\r\n  RENDERER = 0x1f01,\r\n  VERSION = 0x1f02,\r\n  IMPLEMENTATION_COLOR_READ_TYPE = 0x8b9a,\r\n  IMPLEMENTATION_COLOR_READ_FORMAT = 0x8b9b,\r\n  BROWSER_DEFAULT_WEBGL = 0x9244,\r\n\r\n  // Buffers\r\n  // Constants passed to bufferData(), bufferSubData(), bindBuffer(), or\r\n  // getBufferParameter().\r\n\r\n  /** Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and not change often. */\r\n  STATIC_DRAW = 0x88e4,\r\n  /** Passed to bufferData as a hint about whether the contents of the buffer are likely to not be used often. */\r\n  STREAM_DRAW = 0x88e0,\r\n  /** Passed to bufferData as a hint about whether the contents of the buffer are likely to be used often and change often. */\r\n  DYNAMIC_DRAW = 0x88e8,\r\n  /** Passed to bindBuffer or bufferData to specify the type of buffer being used. */\r\n  ARRAY_BUFFER = 0x8892,\r\n  /** Passed to bindBuffer or bufferData to specify the type of buffer being used. */\r\n  ELEMENT_ARRAY_BUFFER = 0x8893,\r\n  /** Passed to getBufferParameter to get a buffer's size. */\r\n  BUFFER_SIZE = 0x8764,\r\n  /** Passed to getBufferParameter to get the hint for the buffer passed in when it was created. */\r\n  BUFFER_USAGE = 0x8765,\r\n\r\n  // Vertex attributes\r\n  // Constants passed to getVertexAttrib().\r\n\r\n  /** Passed to getVertexAttrib to read back the current vertex attribute. */\r\n  CURRENT_VERTEX_ATTRIB = 0x8626,\r\n  VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622,\r\n  VERTEX_ATTRIB_ARRAY_SIZE = 0x8623,\r\n  VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,\r\n  VERTEX_ATTRIB_ARRAY_TYPE = 0x8625,\r\n  VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886a,\r\n  VERTEX_ATTRIB_ARRAY_POINTER = 0x8645,\r\n  VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889f,\r\n\r\n  // Culling\r\n  // Constants passed to cullFace().\r\n\r\n  /** Passed to enable/disable to turn on/off culling. Can also be used with getParameter to find the current culling method. */\r\n  CULL_FACE = 0x0b44,\r\n  /** Passed to cullFace to specify that only front faces should be culled. */\r\n  FRONT = 0x0404,\r\n  /** Passed to cullFace to specify that only back faces should be culled. */\r\n  BACK = 0x0405,\r\n  /** Passed to cullFace to specify that front and back faces should be culled. */\r\n  FRONT_AND_BACK = 0x0408,\r\n\r\n  // Enabling and disabling\r\n  // Constants passed to enable() or disable().\r\n\r\n  /** Passed to enable/disable to turn on/off blending. Can also be used with getParameter to find the current blending method. */\r\n  BLEND = 0x0be2,\r\n  /** Passed to enable/disable to turn on/off the depth test. Can also be used with getParameter to query the depth test. */\r\n  DEPTH_TEST = 0x0b71,\r\n  /** Passed to enable/disable to turn on/off dithering. Can also be used with getParameter to find the current dithering method. */\r\n  DITHER = 0x0bd0,\r\n  /** Passed to enable/disable to turn on/off the polygon offset. Useful for rendering hidden-line images, decals, and or solids with highlighted edges. Can also be used with getParameter to query the scissor test. */\r\n  POLYGON_OFFSET_FILL = 0x8037,\r\n  /** Passed to enable/disable to turn on/off the alpha to coverage. Used in multi-sampling alpha channels. */\r\n  SAMPLE_ALPHA_TO_COVERAGE = 0x809e,\r\n  /** Passed to enable/disable to turn on/off the sample coverage. Used in multi-sampling. */\r\n  SAMPLE_COVERAGE = 0x80a0,\r\n  /** Passed to enable/disable to turn on/off the scissor test. Can also be used with getParameter to query the scissor test. */\r\n  SCISSOR_TEST = 0x0c11,\r\n  /** Passed to enable/disable to turn on/off the stencil test. Can also be used with getParameter to query the stencil test. */\r\n  STENCIL_TEST = 0x0b90,\r\n\r\n  // Errors\r\n  // Constants returned from getError().\r\n\r\n  /** Returned from getError(). */\r\n  NO_ERROR = 0,\r\n  /** Returned from getError(). */\r\n  INVALID_ENUM = 0x0500,\r\n  /** Returned from getError(). */\r\n  INVALID_VALUE = 0x0501,\r\n  /** Returned from getError(). */\r\n  INVALID_OPERATION = 0x0502,\r\n  /** Returned from getError(). */\r\n  OUT_OF_MEMORY = 0x0505,\r\n  /** Returned from getError(). */\r\n  CONTEXT_LOST_WEBGL = 0x9242,\r\n\r\n  // Front face directions\r\n  // Constants passed to frontFace().\r\n\r\n  /** Passed to frontFace to specify the front face of a polygon is drawn in the clockwise direction */\r\n  CW = 0x0900,\r\n  /** Passed to frontFace to specify the front face of a polygon is drawn in the counter clockwise direction */\r\n  CCW = 0x0901,\r\n\r\n  // Hints\r\n  // Constants passed to hint()\r\n\r\n  /** There is no preference for this behavior. */\r\n  DONT_CARE = 0x1100,\r\n  /** The most efficient behavior should be used. */\r\n  FASTEST = 0x1101,\r\n  /** The most correct or the highest quality option should be used. */\r\n  NICEST = 0x1102,\r\n  /** Hint for the quality of filtering when generating mipmap images with WebGLRenderingContext.generateMipmap(). */\r\n  GENERATE_MIPMAP_HINT = 0x8192,\r\n\r\n  // Data types\r\n\r\n  BYTE = 0x1400,\r\n  UNSIGNED_BYTE = 0x1401,\r\n  SHORT = 0x1402,\r\n  UNSIGNED_SHORT = 0x1403,\r\n  INT = 0x1404,\r\n  UNSIGNED_INT = 0x1405,\r\n  FLOAT = 0x1406,\r\n  DOUBLE = 0x140a,\r\n\r\n  // Pixel formats\r\n\r\n  DEPTH_COMPONENT = 0x1902,\r\n  ALPHA = 0x1906,\r\n  RGB = 0x1907,\r\n  RGBA = 0x1908,\r\n  LUMINANCE = 0x1909,\r\n  LUMINANCE_ALPHA = 0x190a,\r\n\r\n  // Pixel types\r\n\r\n  // UNSIGNED_BYTE = 0x1401,\r\n  UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n  UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n  UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n\r\n  // Shaders\r\n  // Constants passed to createShader() or getShaderParameter()\r\n\r\n  /** Passed to createShader to define a fragment shader. */\r\n  FRAGMENT_SHADER = 0x8b30,\r\n  /** Passed to createShader to define a vertex shader */\r\n  VERTEX_SHADER = 0x8b31,\r\n  /** Passed to getShaderParameter to get the status of the compilation. Returns false if the shader was not compiled. You can then query getShaderInfoLog to find the exact error */\r\n  COMPILE_STATUS = 0x8b81,\r\n  /** Passed to getShaderParameter to determine if a shader was deleted via deleteShader. Returns true if it was, false otherwise. */\r\n  DELETE_STATUS = 0x8b80,\r\n  /** Passed to getProgramParameter after calling linkProgram to determine if a program was linked correctly. Returns false if there were errors. Use getProgramInfoLog to find the exact error. */\r\n  LINK_STATUS = 0x8b82,\r\n  /** Passed to getProgramParameter after calling validateProgram to determine if it is valid. Returns false if errors were found. */\r\n  VALIDATE_STATUS = 0x8b83,\r\n  /** Passed to getProgramParameter after calling attachShader to determine if the shader was attached correctly. Returns false if errors occurred. */\r\n  ATTACHED_SHADERS = 0x8b85,\r\n  /** Passed to getProgramParameter to get the number of attributes active in a program. */\r\n  ACTIVE_ATTRIBUTES = 0x8b89,\r\n  /** Passed to getProgramParameter to get the number of uniforms active in a program. */\r\n  ACTIVE_UNIFORMS = 0x8b86,\r\n  /** The maximum number of entries possible in the vertex attribute list. */\r\n  MAX_VERTEX_ATTRIBS = 0x8869,\r\n  MAX_VERTEX_UNIFORM_VECTORS = 0x8dfb,\r\n  MAX_VARYING_VECTORS = 0x8dfc,\r\n  MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8b4d,\r\n  MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8b4c,\r\n  /** Implementation dependent number of maximum texture units. At least 8. */\r\n  MAX_TEXTURE_IMAGE_UNITS = 0x8872,\r\n  MAX_FRAGMENT_UNIFORM_VECTORS = 0x8dfd,\r\n  SHADER_TYPE = 0x8b4f,\r\n  SHADING_LANGUAGE_VERSION = 0x8b8c,\r\n  CURRENT_PROGRAM = 0x8b8d,\r\n\r\n  // Depth or stencil tests\r\n  // Constants passed to depthFunc() or stencilFunc().\r\n\r\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will never pass, i.e., nothing will be drawn. */\r\n  NEVER = 0x0200,\r\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than the stored value. */\r\n  LESS = 0x0201,\r\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is equals to the stored value. */\r\n  EQUAL = 0x0202,\r\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is less than or equal to the stored value. */\r\n  LEQUAL = 0x0203,\r\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than the stored value. */\r\n  GREATER = 0x0204,\r\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is not equal to the stored value. */\r\n  NOTEQUAL = 0x0205,\r\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will pass if the new depth value is greater than or equal to the stored value. */\r\n  GEQUAL = 0x0206,\r\n  /** Passed to depthFunction or stencilFunction to specify depth or stencil tests will always pass, i.e., pixels will be drawn in the order they are drawn. */\r\n  ALWAYS = 0x0207,\r\n\r\n  // Stencil actions\r\n  // Constants passed to stencilOp().\r\n\r\n  KEEP = 0x1e00,\r\n  REPLACE = 0x1e01,\r\n  INCR = 0x1e02,\r\n  DECR = 0x1e03,\r\n  INVERT = 0x150a,\r\n  INCR_WRAP = 0x8507,\r\n  DECR_WRAP = 0x8508,\r\n\r\n  // Textures\r\n  // Constants passed to texParameteri(),\r\n  // texParameterf(), bindTexture(), texImage2D(), and others.\r\n\r\n  NEAREST = 0x2600,\r\n  LINEAR = 0x2601,\r\n  NEAREST_MIPMAP_NEAREST = 0x2700,\r\n  LINEAR_MIPMAP_NEAREST = 0x2701,\r\n  NEAREST_MIPMAP_LINEAR = 0x2702,\r\n  LINEAR_MIPMAP_LINEAR = 0x2703,\r\n  /** The texture magnification function is used when the pixel being textured maps to an area less than or equal to one texture element. It sets the texture magnification function to either GL_NEAREST or GL_LINEAR (see below). GL_NEAREST is generally faster than GL_LINEAR, but it can produce textured images with sharper edges because the transition between texture elements is not as smooth. Default: GL_LINEAR.  */\r\n  TEXTURE_MAG_FILTER = 0x2800,\r\n  /** The texture minifying function is used whenever the pixel being textured maps to an area greater than one texture element. There are six defined minifying functions. Two of them use the nearest one or nearest four texture elements to compute the texture value. The other four use mipmaps. Default: GL_NEAREST_MIPMAP_LINEAR */\r\n  TEXTURE_MIN_FILTER = 0x2801,\r\n  /** Sets the wrap parameter for texture coordinate  to either GL_CLAMP_TO_EDGE, GL_MIRRORED_REPEAT, or GL_REPEAT. G */\r\n  TEXTURE_WRAP_S = 0x2802,\r\n  /** Sets the wrap parameter for texture coordinate  to either GL_CLAMP_TO_EDGE, GL_MIRRORED_REPEAT, or GL_REPEAT. G */\r\n  TEXTURE_WRAP_T = 0x2803,\r\n  TEXTURE_2D = 0x0de1,\r\n  TEXTURE = 0x1702,\r\n  TEXTURE_CUBE_MAP = 0x8513,\r\n  TEXTURE_BINDING_CUBE_MAP = 0x8514,\r\n  TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n  TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n  TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n  TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n  TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n  TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851a,\r\n  MAX_CUBE_MAP_TEXTURE_SIZE = 0x851c,\r\n  // TEXTURE0 - 31 0x84C0 - 0x84DF A texture unit.\r\n  TEXTURE0 = 0x84c0,\r\n  ACTIVE_TEXTURE = 0x84e0,\r\n  REPEAT = 0x2901,\r\n  CLAMP_TO_EDGE = 0x812f,\r\n  MIRRORED_REPEAT = 0x8370,\r\n\r\n  // Emulation\r\n  TEXTURE_WIDTH = 0x1000,\r\n  TEXTURE_HEIGHT = 0x1001,\r\n\r\n  // Uniform types\r\n\r\n  FLOAT_VEC2 = 0x8b50,\r\n  FLOAT_VEC3 = 0x8b51,\r\n  FLOAT_VEC4 = 0x8b52,\r\n  INT_VEC2 = 0x8b53,\r\n  INT_VEC3 = 0x8b54,\r\n  INT_VEC4 = 0x8b55,\r\n  BOOL = 0x8b56,\r\n  BOOL_VEC2 = 0x8b57,\r\n  BOOL_VEC3 = 0x8b58,\r\n  BOOL_VEC4 = 0x8b59,\r\n  FLOAT_MAT2 = 0x8b5a,\r\n  FLOAT_MAT3 = 0x8b5b,\r\n  FLOAT_MAT4 = 0x8b5c,\r\n  SAMPLER_2D = 0x8b5e,\r\n  SAMPLER_CUBE = 0x8b60,\r\n\r\n  // Shader precision-specified types\r\n\r\n  LOW_FLOAT = 0x8df0,\r\n  MEDIUM_FLOAT = 0x8df1,\r\n  HIGH_FLOAT = 0x8df2,\r\n  LOW_INT = 0x8df3,\r\n  MEDIUM_INT = 0x8df4,\r\n  HIGH_INT = 0x8df5,\r\n\r\n  // Framebuffers and renderbuffers\r\n\r\n  FRAMEBUFFER = 0x8d40,\r\n  RENDERBUFFER = 0x8d41,\r\n  RGBA4 = 0x8056,\r\n  RGB5_A1 = 0x8057,\r\n  RGB565 = 0x8d62,\r\n  DEPTH_COMPONENT16 = 0x81a5,\r\n  STENCIL_INDEX = 0x1901,\r\n  STENCIL_INDEX8 = 0x8d48,\r\n  DEPTH_STENCIL = 0x84f9,\r\n  RENDERBUFFER_WIDTH = 0x8d42,\r\n  RENDERBUFFER_HEIGHT = 0x8d43,\r\n  RENDERBUFFER_INTERNAL_FORMAT = 0x8d44,\r\n  RENDERBUFFER_RED_SIZE = 0x8d50,\r\n  RENDERBUFFER_GREEN_SIZE = 0x8d51,\r\n  RENDERBUFFER_BLUE_SIZE = 0x8d52,\r\n  RENDERBUFFER_ALPHA_SIZE = 0x8d53,\r\n  RENDERBUFFER_DEPTH_SIZE = 0x8d54,\r\n  RENDERBUFFER_STENCIL_SIZE = 0x8d55,\r\n  FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8cd0,\r\n  FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8cd1,\r\n  FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8cd2,\r\n  FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8cd3,\r\n  COLOR_ATTACHMENT0 = 0x8ce0,\r\n  DEPTH_ATTACHMENT = 0x8d00,\r\n  STENCIL_ATTACHMENT = 0x8d20,\r\n  DEPTH_STENCIL_ATTACHMENT = 0x821a,\r\n  NONE = 0,\r\n  FRAMEBUFFER_COMPLETE = 0x8cd5,\r\n  FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8cd6,\r\n  FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8cd7,\r\n  FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8cd9,\r\n  FRAMEBUFFER_UNSUPPORTED = 0x8cdd,\r\n  FRAMEBUFFER_BINDING = 0x8ca6,\r\n  RENDERBUFFER_BINDING = 0x8ca7,\r\n  READ_FRAMEBUFFER = 0x8ca8,\r\n  DRAW_FRAMEBUFFER = 0x8ca9,\r\n  MAX_RENDERBUFFER_SIZE = 0x84e8,\r\n  INVALID_FRAMEBUFFER_OPERATION = 0x0506,\r\n\r\n  // Pixel storage modes\r\n  // Constants passed to pixelStorei().\r\n\r\n  UNPACK_FLIP_Y_WEBGL = 0x9240,\r\n  UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241,\r\n  UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243,\r\n\r\n  // Additional constants defined WebGL 2\r\n  // These constants are defined on the WebGL2RenderingContext interface.\r\n  // All WebGL 1 constants are also available in a WebGL 2 context.\r\n\r\n  // Getting GL parameter information\r\n  // Constants passed to getParameter()\r\n  // to specify what information to return.\r\n\r\n  READ_BUFFER = 0x0c02,\r\n  UNPACK_ROW_LENGTH = 0x0cf2,\r\n  UNPACK_SKIP_ROWS = 0x0cf3,\r\n  UNPACK_SKIP_PIXELS = 0x0cf4,\r\n  PACK_ROW_LENGTH = 0x0d02,\r\n  PACK_SKIP_ROWS = 0x0d03,\r\n  PACK_SKIP_PIXELS = 0x0d04,\r\n  TEXTURE_BINDING_3D = 0x806a,\r\n  UNPACK_SKIP_IMAGES = 0x806d,\r\n  UNPACK_IMAGE_HEIGHT = 0x806e,\r\n  MAX_3D_TEXTURE_SIZE = 0x8073,\r\n  MAX_ELEMENTS_VERTICES = 0x80e8,\r\n  MAX_ELEMENTS_INDICES = 0x80e9,\r\n  MAX_TEXTURE_LOD_BIAS = 0x84fd,\r\n  MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8b49,\r\n  MAX_VERTEX_UNIFORM_COMPONENTS = 0x8b4a,\r\n  MAX_ARRAY_TEXTURE_LAYERS = 0x88ff,\r\n  MIN_PROGRAM_TEXEL_OFFSET = 0x8904,\r\n  MAX_PROGRAM_TEXEL_OFFSET = 0x8905,\r\n  MAX_VARYING_COMPONENTS = 0x8b4b,\r\n  FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8b8b,\r\n  RASTERIZER_DISCARD = 0x8c89,\r\n  VERTEX_ARRAY_BINDING = 0x85b5,\r\n  MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122,\r\n  MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125,\r\n  MAX_SERVER_WAIT_TIMEOUT = 0x9111,\r\n  MAX_ELEMENT_INDEX = 0x8d6b,\r\n\r\n  // Textures\r\n  // Constants passed to texParameteri(),\r\n  // texParameterf(), bindTexture(), texImage2D(), and others.\r\n\r\n  RED = 0x1903,\r\n  RGB8 = 0x8051,\r\n  RGBA8 = 0x8058,\r\n  RGB10_A2 = 0x8059,\r\n  TEXTURE_3D = 0x806f,\r\n  /** Sets the wrap parameter for texture coordinate  to either GL_CLAMP_TO_EDGE, GL_MIRRORED_REPEAT, or GL_REPEAT. G */\r\n  TEXTURE_WRAP_R = 0x8072,\r\n  TEXTURE_MIN_LOD = 0x813a,\r\n  TEXTURE_MAX_LOD = 0x813b,\r\n  TEXTURE_BASE_LEVEL = 0x813c,\r\n  TEXTURE_MAX_LEVEL = 0x813d,\r\n  TEXTURE_COMPARE_MODE = 0x884c,\r\n  TEXTURE_COMPARE_FUNC = 0x884d,\r\n  SRGB = 0x8c40,\r\n  SRGB8 = 0x8c41,\r\n  SRGB8_ALPHA8 = 0x8c43,\r\n  COMPARE_REF_TO_TEXTURE = 0x884e,\r\n  RGBA32F = 0x8814,\r\n  RGB32F = 0x8815,\r\n  RGBA16F = 0x881a,\r\n  RGB16F = 0x881b,\r\n  TEXTURE_2D_ARRAY = 0x8c1a,\r\n  TEXTURE_BINDING_2D_ARRAY = 0x8c1d,\r\n  R11F_G11F_B10F = 0x8c3a,\r\n  RGB9_E5 = 0x8c3d,\r\n  RGBA32UI = 0x8d70,\r\n  RGB32UI = 0x8d71,\r\n  RGBA16UI = 0x8d76,\r\n  RGB16UI = 0x8d77,\r\n  RGBA8UI = 0x8d7c,\r\n  RGB8UI = 0x8d7d,\r\n  RGBA32I = 0x8d82,\r\n  RGB32I = 0x8d83,\r\n  RGBA16I = 0x8d88,\r\n  RGB16I = 0x8d89,\r\n  RGBA8I = 0x8d8e,\r\n  RGB8I = 0x8d8f,\r\n  RED_INTEGER = 0x8d94,\r\n  RGB_INTEGER = 0x8d98,\r\n  RGBA_INTEGER = 0x8d99,\r\n  R8 = 0x8229,\r\n  RG8 = 0x822b,\r\n  R16F = 0x822d,\r\n  R32F = 0x822e,\r\n  RG16F = 0x822f,\r\n  RG32F = 0x8230,\r\n  R8I = 0x8231,\r\n  R8UI = 0x8232,\r\n  R16I = 0x8233,\r\n  R16UI = 0x8234,\r\n  R32I = 0x8235,\r\n  R32UI = 0x8236,\r\n  RG8I = 0x8237,\r\n  RG8UI = 0x8238,\r\n  RG16I = 0x8239,\r\n  RG16UI = 0x823a,\r\n  RG32I = 0x823b,\r\n  RG32UI = 0x823c,\r\n  R8_SNORM = 0x8f94,\r\n  RG8_SNORM = 0x8f95,\r\n  RGB8_SNORM = 0x8f96,\r\n  RGBA8_SNORM = 0x8f97,\r\n  RGB10_A2UI = 0x906f,\r\n\r\n  /* covered by extension\r\n  COMPRESSED_R11_EAC  = 0x9270,\r\n  COMPRESSED_SIGNED_R11_EAC = 0x9271,\r\n  COMPRESSED_RG11_EAC = 0x9272,\r\n  COMPRESSED_SIGNED_RG11_EAC  = 0x9273,\r\n  COMPRESSED_RGB8_ETC2  = 0x9274,\r\n  COMPRESSED_SRGB8_ETC2 = 0x9275,\r\n  COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2  = 0x9276,\r\n  COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC  = 0x9277,\r\n  COMPRESSED_RGBA8_ETC2_EAC = 0x9278,\r\n  COMPRESSED_SRGB8_ALPHA8_ETC2_EAC  = 0x9279,\r\n  */\r\n  TEXTURE_IMMUTABLE_FORMAT = 0x912f,\r\n  TEXTURE_IMMUTABLE_LEVELS = 0x82df,\r\n\r\n  // Pixel types\r\n\r\n  UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n  UNSIGNED_INT_10F_11F_11F_REV = 0x8c3b,\r\n  UNSIGNED_INT_5_9_9_9_REV = 0x8c3e,\r\n  FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dad,\r\n  UNSIGNED_INT_24_8 = 0x84fa,\r\n  HALF_FLOAT = 0x140b,\r\n  RG = 0x8227,\r\n  RG_INTEGER = 0x8228,\r\n  INT_2_10_10_10_REV = 0x8d9f,\r\n\r\n  // Queries\r\n\r\n  CURRENT_QUERY = 0x8865,\r\n  /** Returns a GLuint containing the query result. */\r\n  QUERY_RESULT = 0x8866,\r\n  /** Whether query result is available. */\r\n  QUERY_RESULT_AVAILABLE = 0x8867,\r\n  /** Occlusion query (if drawing passed depth test)  */\r\n  ANY_SAMPLES_PASSED = 0x8c2f,\r\n  /** Occlusion query less accurate/faster version */\r\n  ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8d6a,\r\n\r\n  // Draw buffers\r\n\r\n  MAX_DRAW_BUFFERS = 0x8824,\r\n  DRAW_BUFFER0 = 0x8825,\r\n  DRAW_BUFFER1 = 0x8826,\r\n  DRAW_BUFFER2 = 0x8827,\r\n  DRAW_BUFFER3 = 0x8828,\r\n  DRAW_BUFFER4 = 0x8829,\r\n  DRAW_BUFFER5 = 0x882a,\r\n  DRAW_BUFFER6 = 0x882b,\r\n  DRAW_BUFFER7 = 0x882c,\r\n  DRAW_BUFFER8 = 0x882d,\r\n  DRAW_BUFFER9 = 0x882e,\r\n  DRAW_BUFFER10 = 0x882f,\r\n  DRAW_BUFFER11 = 0x8830,\r\n  DRAW_BUFFER12 = 0x8831,\r\n  DRAW_BUFFER13 = 0x8832,\r\n  DRAW_BUFFER14 = 0x8833,\r\n  DRAW_BUFFER15 = 0x8834,\r\n  MAX_COLOR_ATTACHMENTS = 0x8cdf,\r\n  COLOR_ATTACHMENT1 = 0x8ce1,\r\n  COLOR_ATTACHMENT2 = 0x8ce2,\r\n  COLOR_ATTACHMENT3 = 0x8ce3,\r\n  COLOR_ATTACHMENT4 = 0x8ce4,\r\n  COLOR_ATTACHMENT5 = 0x8ce5,\r\n  COLOR_ATTACHMENT6 = 0x8ce6,\r\n  COLOR_ATTACHMENT7 = 0x8ce7,\r\n  COLOR_ATTACHMENT8 = 0x8ce8,\r\n  COLOR_ATTACHMENT9 = 0x8ce9,\r\n  COLOR_ATTACHMENT10 = 0x8cea,\r\n  COLOR_ATTACHMENT11 = 0x8ceb,\r\n  COLOR_ATTACHMENT12 = 0x8cec,\r\n  COLOR_ATTACHMENT13 = 0x8ced,\r\n  COLOR_ATTACHMENT14 = 0x8cee,\r\n  COLOR_ATTACHMENT15 = 0x8cef,\r\n\r\n  // Samplers\r\n\r\n  SAMPLER_3D = 0x8b5f,\r\n  SAMPLER_2D_SHADOW = 0x8b62,\r\n  SAMPLER_2D_ARRAY = 0x8dc1,\r\n  SAMPLER_2D_ARRAY_SHADOW = 0x8dc4,\r\n  SAMPLER_CUBE_SHADOW = 0x8dc5,\r\n  INT_SAMPLER_2D = 0x8dca,\r\n  INT_SAMPLER_3D = 0x8dcb,\r\n  INT_SAMPLER_CUBE = 0x8dcc,\r\n  INT_SAMPLER_2D_ARRAY = 0x8dcf,\r\n  UNSIGNED_INT_SAMPLER_2D = 0x8dd2,\r\n  UNSIGNED_INT_SAMPLER_3D = 0x8dd3,\r\n  UNSIGNED_INT_SAMPLER_CUBE = 0x8dd4,\r\n  UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8dd7,\r\n  MAX_SAMPLES = 0x8d57,\r\n  SAMPLER_BINDING = 0x8919,\r\n\r\n  // Buffers\r\n\r\n  PIXEL_PACK_BUFFER = 0x88eb,\r\n  PIXEL_UNPACK_BUFFER = 0x88ec,\r\n  PIXEL_PACK_BUFFER_BINDING = 0x88ed,\r\n  PIXEL_UNPACK_BUFFER_BINDING = 0x88ef,\r\n  COPY_READ_BUFFER = 0x8f36,\r\n  COPY_WRITE_BUFFER = 0x8f37,\r\n  COPY_READ_BUFFER_BINDING = 0x8f36,\r\n  COPY_WRITE_BUFFER_BINDING = 0x8f37,\r\n\r\n  // Data types\r\n\r\n  FLOAT_MAT2x3 = 0x8b65,\r\n  FLOAT_MAT2x4 = 0x8b66,\r\n  FLOAT_MAT3x2 = 0x8b67,\r\n  FLOAT_MAT3x4 = 0x8b68,\r\n  FLOAT_MAT4x2 = 0x8b69,\r\n  FLOAT_MAT4x3 = 0x8b6a,\r\n  UNSIGNED_INT_VEC2 = 0x8dc6,\r\n  UNSIGNED_INT_VEC3 = 0x8dc7,\r\n  UNSIGNED_INT_VEC4 = 0x8dc8,\r\n  UNSIGNED_NORMALIZED = 0x8c17,\r\n  SIGNED_NORMALIZED = 0x8f9c,\r\n\r\n  // Vertex attributes\r\n\r\n  VERTEX_ATTRIB_ARRAY_INTEGER = 0x88fd,\r\n  VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88fe,\r\n\r\n  // Transform feedback\r\n\r\n  TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8c7f,\r\n  MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8c80,\r\n  TRANSFORM_FEEDBACK_VARYINGS = 0x8c83,\r\n  TRANSFORM_FEEDBACK_BUFFER_START = 0x8c84,\r\n  TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8c85,\r\n  TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8c88,\r\n  MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8c8a,\r\n  MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8c8b,\r\n  INTERLEAVED_ATTRIBS = 0x8c8c,\r\n  SEPARATE_ATTRIBS = 0x8c8d,\r\n  TRANSFORM_FEEDBACK_BUFFER = 0x8c8e,\r\n  TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8c8f,\r\n  TRANSFORM_FEEDBACK = 0x8e22,\r\n  TRANSFORM_FEEDBACK_PAUSED = 0x8e23,\r\n  TRANSFORM_FEEDBACK_ACTIVE = 0x8e24,\r\n  TRANSFORM_FEEDBACK_BINDING = 0x8e25,\r\n\r\n  // Framebuffers and renderbuffers\r\n\r\n  FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210,\r\n  FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211,\r\n  FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212,\r\n  FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213,\r\n  FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214,\r\n  FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215,\r\n  FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216,\r\n  FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217,\r\n  FRAMEBUFFER_DEFAULT = 0x8218,\r\n  // DEPTH_STENCIL_ATTACHMENT  = 0x821A,\r\n  // DEPTH_STENCIL = 0x84F9,\r\n  DEPTH24_STENCIL8 = 0x88f0,\r\n  DRAW_FRAMEBUFFER_BINDING = 0x8ca6,\r\n  READ_FRAMEBUFFER_BINDING = 0x8caa,\r\n  RENDERBUFFER_SAMPLES = 0x8cab,\r\n  FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8cd4,\r\n  FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8d56,\r\n\r\n  // Uniforms\r\n\r\n  UNIFORM_BUFFER = 0x8a11,\r\n  UNIFORM_BUFFER_BINDING = 0x8a28,\r\n  UNIFORM_BUFFER_START = 0x8a29,\r\n  UNIFORM_BUFFER_SIZE = 0x8a2a,\r\n  MAX_VERTEX_UNIFORM_BLOCKS = 0x8a2b,\r\n  MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8a2d,\r\n  MAX_COMBINED_UNIFORM_BLOCKS = 0x8a2e,\r\n  MAX_UNIFORM_BUFFER_BINDINGS = 0x8a2f,\r\n  MAX_UNIFORM_BLOCK_SIZE = 0x8a30,\r\n  MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8a31,\r\n  MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8a33,\r\n  UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8a34,\r\n  ACTIVE_UNIFORM_BLOCKS = 0x8a36,\r\n  UNIFORM_TYPE = 0x8a37,\r\n  UNIFORM_SIZE = 0x8a38,\r\n  UNIFORM_BLOCK_INDEX = 0x8a3a,\r\n  UNIFORM_OFFSET = 0x8a3b,\r\n  UNIFORM_ARRAY_STRIDE = 0x8a3c,\r\n  UNIFORM_MATRIX_STRIDE = 0x8a3d,\r\n  UNIFORM_IS_ROW_MAJOR = 0x8a3e,\r\n  UNIFORM_BLOCK_BINDING = 0x8a3f,\r\n  UNIFORM_BLOCK_DATA_SIZE = 0x8a40,\r\n  UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8a42,\r\n  UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8a43,\r\n  UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8a44,\r\n  UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46,\r\n\r\n  // Sync objects\r\n\r\n  OBJECT_TYPE = 0x9112,\r\n  SYNC_CONDITION = 0x9113,\r\n  SYNC_STATUS = 0x9114,\r\n  SYNC_FLAGS = 0x9115,\r\n  SYNC_FENCE = 0x9116,\r\n  SYNC_GPU_COMMANDS_COMPLETE = 0x9117,\r\n  UNSIGNALED = 0x9118,\r\n  SIGNALED = 0x9119,\r\n  ALREADY_SIGNALED = 0x911a,\r\n  TIMEOUT_EXPIRED = 0x911b,\r\n  CONDITION_SATISFIED = 0x911c,\r\n  WAIT_FAILED = 0x911d,\r\n  SYNC_FLUSH_COMMANDS_BIT = 0x00000001,\r\n\r\n  // Miscellaneous constants\r\n\r\n  COLOR = 0x1800,\r\n  DEPTH = 0x1801,\r\n  STENCIL = 0x1802,\r\n  MIN = 0x8007,\r\n  MAX = 0x8008,\r\n  DEPTH_COMPONENT24 = 0x81a6,\r\n  STREAM_READ = 0x88e1,\r\n  STREAM_COPY = 0x88e2,\r\n  STATIC_READ = 0x88e5,\r\n  STATIC_COPY = 0x88e6,\r\n  DYNAMIC_READ = 0x88e9,\r\n  DYNAMIC_COPY = 0x88ea,\r\n  DEPTH_COMPONENT32F = 0x8cac,\r\n  DEPTH32F_STENCIL8 = 0x8cad,\r\n  INVALID_INDEX = 0xffffffff,\r\n  TIMEOUT_IGNORED = -1,\r\n  MAX_CLIENT_WAIT_TIMEOUT_WEBGL = 0x9247,\r\n\r\n  // Constants defined in WebGL extensions\r\n\r\n  // WEBGL_debug_renderer_info\r\n\r\n  /** Passed to getParameter to get the vendor string of the graphics driver. */\r\n  UNMASKED_VENDOR_WEBGL = 0x9245,\r\n  /** Passed to getParameter to get the renderer string of the graphics driver. */\r\n  UNMASKED_RENDERER_WEBGL = 0x9246,\r\n\r\n  // EXT_texture_filter_anisotropic\r\n\r\n  /** Returns the maximum available anisotropy. */\r\n  MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84ff,\r\n  /** Passed to texParameter to set the desired maximum anisotropy for a texture. */\r\n  TEXTURE_MAX_ANISOTROPY_EXT = 0x84fe,\r\n\r\n  // EXT_texture_norm16 - https://khronos.org/registry/webgl/extensions/EXT_texture_norm16/\r\n\r\n  R16_EXT = 0x822a,\r\n  RG16_EXT = 0x822c,\r\n  RGB16_EXT = 0x8054,\r\n  RGBA16_EXT = 0x805b,\r\n  R16_SNORM_EXT = 0x8f98,\r\n  RG16_SNORM_EXT = 0x8f99,\r\n  RGB16_SNORM_EXT = 0x8f9a,\r\n  RGBA16_SNORM_EXT = 0x8f9b,\r\n\r\n  // WEBGL_compressed_texture_s3tc (BC1, BC2, BC3)\r\n\r\n  /** A DXT1-compressed image in an RGB image format. */\r\n  COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83f0,\r\n  /** A DXT1-compressed image in an RGB image format with a simple on/off alpha value. */\r\n  COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83f1,\r\n  /** A DXT3-compressed image in an RGBA image format. Compared to a 32-bit RGBA texture, it offers 4:1 compression. */\r\n  COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83f2,\r\n  /** A DXT5-compressed image in an RGBA image format. It also provides a 4:1 compression, but differs to the DXT3 compression in how the alpha compression is done. */\r\n  COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83f3,\r\n\r\n  // WEBGL_compressed_texture_s3tc_srgb (BC1, BC2, BC3 -  SRGB)\r\n\r\n  COMPRESSED_SRGB_S3TC_DXT1_EXT = 0x8c4c,\r\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT = 0x8c4d,\r\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT = 0x8c4e,\r\n  COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT = 0x8c4f,\r\n\r\n  // WEBGL_compressed_texture_rgtc (BC4, BC5)\r\n\r\n  COMPRESSED_RED_RGTC1_EXT = 0x8dbb,\r\n  COMPRESSED_SIGNED_RED_RGTC1_EXT = 0x8dbc,\r\n  COMPRESSED_RED_GREEN_RGTC2_EXT = 0x8dbd,\r\n  COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT = 0x8dbe,\r\n\r\n  // WEBGL_compressed_texture_bptc (BC6, BC7)\r\n\r\n  COMPRESSED_RGBA_BPTC_UNORM_EXT = 0x8e8c,\r\n  COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT = 0x8e8d,\r\n  COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT = 0x8e8e,\r\n  COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT = 0x8e8f,\r\n\r\n  // WEBGL_compressed_texture_es3\r\n\r\n  /** One-channel (red) unsigned format compression. */\r\n  COMPRESSED_R11_EAC = 0x9270,\r\n  /** One-channel (red) signed format compression. */\r\n  COMPRESSED_SIGNED_R11_EAC = 0x9271,\r\n  /** Two-channel (red and green) unsigned format compression. */\r\n  COMPRESSED_RG11_EAC = 0x9272,\r\n  /** Two-channel (red and green) signed format compression. */\r\n  COMPRESSED_SIGNED_RG11_EAC = 0x9273,\r\n  /** Compresses RGB8 data with no alpha channel. */\r\n  COMPRESSED_RGB8_ETC2 = 0x9274,\r\n  /** Compresses RGBA8 data. The RGB part is encoded the same as RGB_ETC2, but the alpha part is encoded separately. */\r\n  COMPRESSED_RGBA8_ETC2_EAC = 0x9275,\r\n  /** Compresses sRGB8 data with no alpha channel. */\r\n  COMPRESSED_SRGB8_ETC2 = 0x9276,\r\n  /** Compresses sRGBA8 data. The sRGB part is encoded the same as SRGB_ETC2, but the alpha part is encoded separately. */\r\n  COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9277,\r\n  /** Similar to RGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent. */\r\n  COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9278,\r\n  /** Similar to SRGB8_ETC, but with ability to punch through the alpha channel, which means to make it completely opaque or transparent. */\r\n  COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9279,\r\n\r\n  // WEBGL_compressed_texture_pvrtc\r\n\r\n  /** RGB compression in 4-bit mode. One block for each 4×4 pixels. */\r\n  COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8c00,\r\n  /** RGBA compression in 4-bit mode. One block for each 4×4 pixels. */\r\n  COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8c02,\r\n  /** RGB compression in 2-bit mode. One block for each 8×4 pixels. */\r\n  COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8c01,\r\n  /** RGBA compression in 2-bit mode. One block for each 8×4 pixels. */\r\n  COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8c03,\r\n\r\n  // WEBGL_compressed_texture_etc1\r\n\r\n  /** Compresses 24-bit RGB data with no alpha channel. */\r\n  COMPRESSED_RGB_ETC1_WEBGL = 0x8d64,\r\n\r\n  // WEBGL_compressed_texture_atc\r\n\r\n  COMPRESSED_RGB_ATC_WEBGL = 0x8c92,\r\n  COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL = 0x8c92,\r\n  COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL = 0x87ee,\r\n\r\n  // WEBGL_compressed_texture_astc\r\n\r\n  COMPRESSED_RGBA_ASTC_4x4_KHR = 0x93b0,\r\n  COMPRESSED_RGBA_ASTC_5x4_KHR = 0x93b1,\r\n  COMPRESSED_RGBA_ASTC_5x5_KHR = 0x93b2,\r\n  COMPRESSED_RGBA_ASTC_6x5_KHR = 0x93b3,\r\n  COMPRESSED_RGBA_ASTC_6x6_KHR = 0x93b4,\r\n  COMPRESSED_RGBA_ASTC_8x5_KHR = 0x93b5,\r\n  COMPRESSED_RGBA_ASTC_8x6_KHR = 0x93b6,\r\n  COMPRESSED_RGBA_ASTC_8x8_KHR = 0x93b7,\r\n  COMPRESSED_RGBA_ASTC_10x5_KHR = 0x93b8,\r\n  COMPRESSED_RGBA_ASTC_10x6_KHR = 0x93b9,\r\n  COMPRESSED_RGBA_ASTC_10x8_KHR = 0x93ba,\r\n  COMPRESSED_RGBA_ASTC_10x10_KHR = 0x93bb,\r\n  COMPRESSED_RGBA_ASTC_12x10_KHR = 0x93bc,\r\n  COMPRESSED_RGBA_ASTC_12x12_KHR = 0x93bd,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR = 0x93d0,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR = 0x93d1,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR = 0x93d2,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR = 0x93d3,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR = 0x93d4,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR = 0x93d5,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR = 0x93d6,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR = 0x93d7,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR = 0x93d8,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR = 0x93d9,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR = 0x93da,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR = 0x93db,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR = 0x93dc,\r\n  COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR = 0x93dd,\r\n\r\n  // EXT_disjoint_timer_query\r\n\r\n  /** The number of bits used to hold the query result for the given target. */\r\n  QUERY_COUNTER_BITS_EXT = 0x8864,\r\n  /** The currently active query. */\r\n  CURRENT_QUERY_EXT = 0x8865,\r\n  /** The query result. */\r\n  QUERY_RESULT_EXT = 0x8866,\r\n  /** A Boolean indicating whether or not a query result is available. */\r\n  QUERY_RESULT_AVAILABLE_EXT = 0x8867,\r\n  /** Elapsed time (in nanoseconds). */\r\n  TIME_ELAPSED_EXT = 0x88bf,\r\n  /** The current time. */\r\n  TIMESTAMP_EXT = 0x8e28,\r\n  /** A Boolean indicating whether or not the GPU performed any disjoint operation (lost context) */\r\n  GPU_DISJOINT_EXT = 0x8fbb,\r\n\r\n  // KHR_parallel_shader_compile https://registry.khronos.org/webgl/extensions/KHR_parallel_shader_compile\r\n\r\n  /** a non-blocking poll operation, so that compile/link status availability can be queried without potentially incurring stalls */\r\n  COMPLETION_STATUS_KHR = 0x91b1,\r\n\r\n  // EXT_depth_clamp https://registry.khronos.org/webgl/extensions/EXT_depth_clamp/\r\n\r\n  /** Disables depth clipping */\r\n  DEPTH_CLAMP_EXT = 0x864f,\r\n\r\n  // WEBGL_provoking_vertex https://registry.khronos.org/webgl/extensions/WEBGL_provoking_vertex/\r\n\r\n  /** Values of first vertex in primitive are used for flat shading */\r\n  FIRST_VERTEX_CONVENTION_WEBGL = 0x8e4d,\r\n  /** Values of first vertex in primitive are used for flat shading */\r\n  LAST_VERTEX_CONVENTION_WEBGL = 0x8e4e, // default\r\n  /** Controls which vertex in primitive is used for flat shading */\r\n  PROVOKING_VERTEX_WEBL = 0x8e4f,\r\n\r\n  // WEBGL_polygon_mode https://registry.khronos.org/webgl/extensions/WEBGL_polygon_mode/\r\n\r\n  POLYGON_MODE_WEBGL = 0x0b40,\r\n  POLYGON_OFFSET_LINE_WEBGL = 0x2a02,\r\n  LINE_WEBGL = 0x1b01,\r\n  FILL_WEBGL = 0x1b02,\r\n\r\n  // WEBGL_clip_cull_distance https://registry.khronos.org/webgl/extensions/WEBGL_clip_cull_distance/\r\n\r\n  /** Max clip distances */\r\n  MAX_CLIP_DISTANCES_WEBGL = 0x0d32,\r\n  /** Max cull distances */\r\n  MAX_CULL_DISTANCES_WEBGL = 0x82f9,\r\n  /** Max clip and cull distances */\r\n  MAX_COMBINED_CLIP_AND_CULL_DISTANCES_WEBGL = 0x82fa,\r\n\r\n  /** Enable gl_ClipDistance[0] and gl_CullDistance[0] */\r\n  CLIP_DISTANCE0_WEBGL = 0x3000,\r\n  /** Enable gl_ClipDistance[1] and gl_CullDistance[1] */\r\n  CLIP_DISTANCE1_WEBGL = 0x3001,\r\n  /** Enable gl_ClipDistance[2] and gl_CullDistance[2] */\r\n  CLIP_DISTANCE2_WEBGL = 0x3002,\r\n  /** Enable gl_ClipDistance[3] and gl_CullDistance[3] */\r\n  CLIP_DISTANCE3_WEBGL = 0x3003,\r\n  /** Enable gl_ClipDistance[4] and gl_CullDistance[4] */\r\n  CLIP_DISTANCE4_WEBGL = 0x3004,\r\n  /** Enable gl_ClipDistance[5] and gl_CullDistance[5] */\r\n  CLIP_DISTANCE5_WEBGL = 0x3005,\r\n  /** Enable gl_ClipDistance[6] and gl_CullDistance[6] */\r\n  CLIP_DISTANCE6_WEBGL = 0x3006,\r\n  /** Enable gl_ClipDistance[7] and gl_CullDistance[7] */\r\n  CLIP_DISTANCE7_WEBGL = 0x3007,\r\n\r\n  /** EXT_polygon_offset_clamp https://registry.khronos.org/webgl/extensions/EXT_polygon_offset_clamp/ */\r\n  POLYGON_OFFSET_CLAMP_EXT = 0x8e1b,\r\n\r\n  /** EXT_clip_control https://registry.khronos.org/webgl/extensions/EXT_clip_control/ */\r\n  LOWER_LEFT_EXT = 0x8ca1,\r\n  UPPER_LEFT_EXT = 0x8ca2,\r\n\r\n  NEGATIVE_ONE_TO_ONE_EXT = 0x935e,\r\n  ZERO_TO_ONE_EXT = 0x935f,\r\n\r\n  CLIP_ORIGIN_EXT = 0x935c,\r\n  CLIP_DEPTH_MODE_EXT = 0x935d,\r\n\r\n  /** WEBGL_blend_func_extended https://registry.khronos.org/webgl/extensions/WEBGL_blend_func_extended/ */\r\n  SRC1_COLOR_WEBGL = 0x88f9,\r\n  SRC1_ALPHA_WEBGL = 0x8589,\r\n  ONE_MINUS_SRC1_COLOR_WEBGL = 0x88fa,\r\n  ONE_MINUS_SRC1_ALPHA_WEBGL = 0x88fb,\r\n  MAX_DUAL_SOURCE_DRAW_BUFFERS_WEBGL = 0x88fc,\r\n\r\n  /** EXT_texture_mirror_clamp_to_edge https://registry.khronos.org/webgl/extensions/EXT_texture_mirror_clamp_to_edge/ */\r\n  MIRROR_CLAMP_TO_EDGE_EXT = 0x8743\r\n}\r\n\r\nexport {GLEnum as GL};\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 770, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 776, "column": 0}, "map": {"version":3,"file":"request-animation-frame.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/animation-loop/request-animation-frame.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\n/* global window, setTimeout, clearTimeout */\r\n\r\n/** Node.js polyfill for requestAnimationFrame */\r\n// / <reference types=\"@types/node\" />\r\nexport function requestAnimationFramePolyfill(callback: (time?: any) => void): any {\r\n  return typeof window !== 'undefined' && window.requestAnimationFrame\r\n    ? window.requestAnimationFrame(callback)\r\n    : setTimeout(callback, 1000 / 60);\r\n}\r\n\r\n/** Node.js polyfill for cancelAnimationFrame */\r\nexport function cancelAnimationFramePolyfill(timerId: any): void {\r\n  return typeof window !== 'undefined' && window.cancelAnimationFrame\r\n    ? window.cancelAnimationFrame(timerId)\r\n    : clearTimeout(timerId);\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAEpC,2CAAA,EAA6C,CAE7C,+CAAA,EAAiD,CACjD,sCAAsC;;;;;AAChC,SAAU,6BAA6B,CAAC,QAA8B;IAC1E,OAAO,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,qBAAqB,GAChE,MAAM,CAAC,qBAAqB,CAAC,QAAQ,CAAC,GACtC,UAAU,CAAC,QAAQ,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC;AACtC,CAAC;AAGK,SAAU,4BAA4B,CAAC,OAAY;IACvD,OAAO,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,oBAAoB,GAC/D,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,GACpC,YAAY,CAAC,OAAO,CAAC,CAAC;AAC5B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 790, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 796, "column": 0}, "map": {"version":3,"file":"animation-loop.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/animation-loop/animation-loop.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {luma, Device} from '@luma.gl/core';\r\nimport {\r\n  requestAnimationFramePolyfill,\r\n  cancelAnimationFramePolyfill\r\n} from './request-animation-frame';\r\nimport {Timeline} from '../animation/timeline';\r\nimport {AnimationProps} from './animation-props';\r\nimport {Stats, Stat} from '@probe.gl/stats';\r\n\r\nlet statIdCounter = 0;\r\n\r\n/** AnimationLoop properties */\r\nexport type AnimationLoopProps = {\r\n  device: Device | Promise<Device>;\r\n\r\n  onAddHTML?: (div: HTMLDivElement) => string; // innerHTML\r\n  onInitialize?: (animationProps: AnimationProps) => Promise<unknown>;\r\n  onRender?: (animationProps: AnimationProps) => unknown;\r\n  onFinalize?: (animationProps: AnimationProps) => void;\r\n  onError?: (reason: Error) => void;\r\n\r\n  stats?: Stats;\r\n\r\n  // view parameters - TODO move to CanvasContext?\r\n  autoResizeViewport?: boolean;\r\n  autoResizeDrawingBuffer?: boolean;\r\n  useDevicePixels?: number | boolean;\r\n};\r\n\r\nexport type MutableAnimationLoopProps = {\r\n  // view parameters\r\n  autoResizeViewport?: boolean;\r\n  autoResizeDrawingBuffer?: boolean;\r\n  useDevicePixels?: number | boolean;\r\n};\r\n\r\nconst DEFAULT_ANIMATION_LOOP_PROPS: Required<AnimationLoopProps> = {\r\n  device: null!,\r\n\r\n  onAddHTML: () => '',\r\n  onInitialize: async () => {\r\n    return null;\r\n  },\r\n  onRender: () => {},\r\n  onFinalize: () => {},\r\n  onError: error => console.error(error), // eslint-disable-line no-console\r\n\r\n  stats: luma.stats.get(`animation-loop-${statIdCounter++}`),\r\n\r\n  // view parameters\r\n  useDevicePixels: true,\r\n  autoResizeViewport: false,\r\n  autoResizeDrawingBuffer: false\r\n};\r\n\r\n/** Convenient animation loop */\r\nexport class AnimationLoop {\r\n  device: Device | null = null;\r\n  canvas: HTMLCanvasElement | OffscreenCanvas | null = null;\r\n\r\n  props: Required<AnimationLoopProps>;\r\n  animationProps: AnimationProps | null = null;\r\n  timeline: Timeline | null = null;\r\n  stats: Stats;\r\n  cpuTime: Stat;\r\n  gpuTime: Stat;\r\n  frameRate: Stat;\r\n\r\n  display: any;\r\n\r\n  needsRedraw: string | false = 'initialized';\r\n\r\n  _initialized: boolean = false;\r\n  _running: boolean = false;\r\n  _animationFrameId: any = null;\r\n  _nextFramePromise: Promise<AnimationLoop> | null = null;\r\n  _resolveNextFrame: ((animationLoop: AnimationLoop) => void) | null = null;\r\n  _cpuStartTime: number = 0;\r\n  _error: Error | null = null;\r\n\r\n  // _gpuTimeQuery: Query | null = null;\r\n\r\n  /*\r\n   * @param {HTMLCanvasElement} canvas - if provided, width and height will be passed to context\r\n   */\r\n  constructor(props: AnimationLoopProps) {\r\n    this.props = {...DEFAULT_ANIMATION_LOOP_PROPS, ...props};\r\n    props = this.props;\r\n\r\n    if (!props.device) {\r\n      throw new Error('No device provided');\r\n    }\r\n\r\n    const {useDevicePixels = true} = this.props;\r\n\r\n    // state\r\n    this.stats = props.stats || new Stats({id: 'animation-loop-stats'});\r\n    this.cpuTime = this.stats.get('CPU Time');\r\n    this.gpuTime = this.stats.get('GPU Time');\r\n    this.frameRate = this.stats.get('Frame Rate');\r\n\r\n    this.setProps({\r\n      autoResizeViewport: props.autoResizeViewport,\r\n      autoResizeDrawingBuffer: props.autoResizeDrawingBuffer,\r\n      useDevicePixels\r\n    });\r\n\r\n    // Bind methods\r\n    this.start = this.start.bind(this);\r\n    this.stop = this.stop.bind(this);\r\n\r\n    this._onMousemove = this._onMousemove.bind(this);\r\n    this._onMouseleave = this._onMouseleave.bind(this);\r\n  }\r\n\r\n  destroy(): void {\r\n    this.stop();\r\n    this._setDisplay(null);\r\n  }\r\n\r\n  /** @deprecated Use .destroy() */\r\n  delete(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  setError(error: Error): void {\r\n    this.props.onError(error);\r\n    this._error = Error();\r\n    const canvas = this.device?.canvasContext?.canvas;\r\n    if (canvas instanceof HTMLCanvasElement) {\r\n      const errorDiv = document.createElement('h1');\r\n      errorDiv.innerHTML = error.message;\r\n      errorDiv.style.position = 'absolute';\r\n      errorDiv.style.top = '20%'; // left: 50%; transform: translate(-50%, -50%);';\r\n      errorDiv.style.left = '10px';\r\n      errorDiv.style.color = 'black';\r\n      errorDiv.style.backgroundColor = 'red';\r\n      document.body.appendChild(errorDiv);\r\n      // canvas.style.position = 'absolute';\r\n    }\r\n  }\r\n\r\n  /** Flags this animation loop as needing redraw */\r\n  setNeedsRedraw(reason: string): this {\r\n    this.needsRedraw = this.needsRedraw || reason;\r\n    return this;\r\n  }\r\n\r\n  /** TODO - move these props to CanvasContext? */\r\n  setProps(props: MutableAnimationLoopProps): this {\r\n    if ('autoResizeViewport' in props) {\r\n      this.props.autoResizeViewport = props.autoResizeViewport || false;\r\n    }\r\n    if ('autoResizeDrawingBuffer' in props) {\r\n      this.props.autoResizeDrawingBuffer = props.autoResizeDrawingBuffer || false;\r\n    }\r\n    if ('useDevicePixels' in props) {\r\n      this.props.useDevicePixels = props.useDevicePixels || false;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /** Starts a render loop if not already running */\r\n  async start() {\r\n    if (this._running) {\r\n      return this;\r\n    }\r\n    this._running = true;\r\n\r\n    try {\r\n      let appContext;\r\n      if (!this._initialized) {\r\n        this._initialized = true;\r\n        // Create the WebGL context\r\n        await this._initDevice();\r\n        this._initialize();\r\n\r\n        // Note: onIntialize can return a promise (e.g. in case app needs to load resources)\r\n        await this.props.onInitialize(this._getAnimationProps());\r\n      }\r\n\r\n      // check that we haven't been stopped\r\n      if (!this._running) {\r\n        return null;\r\n      }\r\n\r\n      // Start the loop\r\n      if (appContext !== false) {\r\n        // cancel any pending renders to ensure only one loop can ever run\r\n        this._cancelAnimationFrame();\r\n        this._requestAnimationFrame();\r\n      }\r\n\r\n      return this;\r\n    } catch (err: unknown) {\r\n      const error = err instanceof Error ? err : new Error('Unknown error');\r\n      this.props.onError(error);\r\n      // this._running = false; // TODO\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /** Stops a render loop if already running, finalizing */\r\n  stop() {\r\n    // console.debug(`Stopping ${this.constructor.name}`);\r\n    if (this._running) {\r\n      // call callback\r\n      // If stop is called immediately, we can end up in a state where props haven't been initialized...\r\n      if (this.animationProps && !this._error) {\r\n        this.props.onFinalize(this.animationProps);\r\n      }\r\n\r\n      this._cancelAnimationFrame();\r\n      this._nextFramePromise = null;\r\n      this._resolveNextFrame = null;\r\n      this._running = false;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /** Explicitly draw a frame */\r\n  redraw(): this {\r\n    if (this.device?.isLost || this._error) {\r\n      return this;\r\n    }\r\n\r\n    this._beginFrameTimers();\r\n\r\n    this._setupFrame();\r\n    this._updateAnimationProps();\r\n\r\n    this._renderFrame(this._getAnimationProps());\r\n\r\n    // clear needsRedraw flag\r\n    this._clearNeedsRedraw();\r\n\r\n    if (this._resolveNextFrame) {\r\n      this._resolveNextFrame(this);\r\n      this._nextFramePromise = null;\r\n      this._resolveNextFrame = null;\r\n    }\r\n\r\n    this._endFrameTimers();\r\n\r\n    return this;\r\n  }\r\n\r\n  /** Add a timeline, it will be automatically updated by the animation loop. */\r\n  attachTimeline(timeline: Timeline): Timeline {\r\n    this.timeline = timeline;\r\n    return this.timeline;\r\n  }\r\n\r\n  /** Remove a timeline */\r\n  detachTimeline(): void {\r\n    this.timeline = null;\r\n  }\r\n\r\n  /** Wait until a render completes */\r\n  waitForRender(): Promise<AnimationLoop> {\r\n    this.setNeedsRedraw('waitForRender');\r\n\r\n    if (!this._nextFramePromise) {\r\n      this._nextFramePromise = new Promise(resolve => {\r\n        this._resolveNextFrame = resolve;\r\n      });\r\n    }\r\n    return this._nextFramePromise;\r\n  }\r\n\r\n  /** TODO - should use device.deviceContext */\r\n  async toDataURL(): Promise<string> {\r\n    this.setNeedsRedraw('toDataURL');\r\n    await this.waitForRender();\r\n    if (this.canvas instanceof HTMLCanvasElement) {\r\n      return this.canvas.toDataURL();\r\n    }\r\n    throw new Error('OffscreenCanvas');\r\n  }\r\n\r\n  // PRIVATE METHODS\r\n\r\n  _initialize(): void {\r\n    this._startEventHandling();\r\n\r\n    // Initialize the callback data\r\n    this._initializeAnimationProps();\r\n    this._updateAnimationProps();\r\n\r\n    // Default viewport setup, in case onInitialize wants to render\r\n    this._resizeCanvasDrawingBuffer();\r\n    this._resizeViewport();\r\n\r\n    // this._gpuTimeQuery = Query.isSupported(this.gl, ['timers']) ? new Query(this.gl) : null;\r\n  }\r\n\r\n  _setDisplay(display: any): void {\r\n    if (this.display) {\r\n      this.display.destroy();\r\n      this.display.animationLoop = null;\r\n    }\r\n\r\n    // store animation loop on the display\r\n    if (display) {\r\n      display.animationLoop = this;\r\n    }\r\n\r\n    this.display = display;\r\n  }\r\n\r\n  _requestAnimationFrame(): void {\r\n    if (!this._running) {\r\n      return;\r\n    }\r\n\r\n    // VR display has a separate animation frame to sync with headset\r\n    // TODO WebVR API discontinued, replaced by WebXR: https://immersive-web.github.io/webxr/\r\n    // See https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/requestAnimationFrame\r\n    // if (this.display && this.display.requestAnimationFrame) {\r\n    //   this._animationFrameId = this.display.requestAnimationFrame(this._animationFrame.bind(this));\r\n    // }\r\n    this._animationFrameId = requestAnimationFramePolyfill(this._animationFrame.bind(this));\r\n  }\r\n\r\n  _cancelAnimationFrame(): void {\r\n    if (this._animationFrameId === null) {\r\n      return;\r\n    }\r\n\r\n    // VR display has a separate animation frame to sync with headset\r\n    // TODO WebVR API discontinued, replaced by WebXR: https://immersive-web.github.io/webxr/\r\n    // See https://developer.mozilla.org/en-US/docs/Web/API/VRDisplay/requestAnimationFrame\r\n    // if (this.display && this.display.cancelAnimationFramePolyfill) {\r\n    //   this.display.cancelAnimationFrame(this._animationFrameId);\r\n    // }\r\n    cancelAnimationFramePolyfill(this._animationFrameId);\r\n    this._animationFrameId = null;\r\n  }\r\n\r\n  _animationFrame(): void {\r\n    if (!this._running) {\r\n      return;\r\n    }\r\n    this.redraw();\r\n    this._requestAnimationFrame();\r\n  }\r\n\r\n  // Called on each frame, can be overridden to call onRender multiple times\r\n  // to support e.g. stereoscopic rendering\r\n  _renderFrame(animationProps: AnimationProps): void {\r\n    // Allow e.g. VR display to render multiple frames.\r\n    if (this.display) {\r\n      this.display._renderFrame(animationProps);\r\n      return;\r\n    }\r\n\r\n    // call callback\r\n    this.props.onRender(this._getAnimationProps());\r\n    // end callback\r\n\r\n    // Submit commands (necessary on WebGPU)\r\n    this.device?.submit();\r\n  }\r\n\r\n  _clearNeedsRedraw(): void {\r\n    this.needsRedraw = false;\r\n  }\r\n\r\n  _setupFrame(): void {\r\n    this._resizeCanvasDrawingBuffer();\r\n    this._resizeViewport();\r\n  }\r\n\r\n  // Initialize the  object that will be passed to app callbacks\r\n  _initializeAnimationProps(): void {\r\n    const canvas = this.device?.canvasContext?.canvas;\r\n\r\n    if (!this.device || !canvas) {\r\n      throw new Error('loop');\r\n    }\r\n    this.animationProps = {\r\n      animationLoop: this,\r\n\r\n      device: this.device,\r\n      canvas,\r\n      timeline: this.timeline,\r\n\r\n      // Initial values\r\n      useDevicePixels: this.props.useDevicePixels,\r\n      needsRedraw: false,\r\n\r\n      // Placeholders\r\n      width: 1,\r\n      height: 1,\r\n      aspect: 1,\r\n\r\n      // Animation props\r\n      time: 0,\r\n      startTime: Date.now(),\r\n      engineTime: 0,\r\n      tick: 0,\r\n      tock: 0,\r\n\r\n      // Experimental\r\n      _mousePosition: null // Event props\r\n    };\r\n  }\r\n\r\n  _getAnimationProps(): AnimationProps {\r\n    if (!this.animationProps) {\r\n      throw new Error('animationProps');\r\n    }\r\n    return this.animationProps;\r\n  }\r\n\r\n  // Update the context object that will be passed to app callbacks\r\n  _updateAnimationProps(): void {\r\n    if (!this.animationProps) {\r\n      return;\r\n    }\r\n\r\n    // Can this be replaced with canvas context?\r\n    const {width, height, aspect} = this._getSizeAndAspect();\r\n    if (width !== this.animationProps.width || height !== this.animationProps.height) {\r\n      this.setNeedsRedraw('drawing buffer resized');\r\n    }\r\n    if (aspect !== this.animationProps.aspect) {\r\n      this.setNeedsRedraw('drawing buffer aspect changed');\r\n    }\r\n\r\n    this.animationProps.width = width;\r\n    this.animationProps.height = height;\r\n    this.animationProps.aspect = aspect;\r\n\r\n    this.animationProps.needsRedraw = this.needsRedraw;\r\n\r\n    // Update time properties\r\n    this.animationProps.engineTime = Date.now() - this.animationProps.startTime;\r\n\r\n    if (this.timeline) {\r\n      this.timeline.update(this.animationProps.engineTime);\r\n    }\r\n\r\n    this.animationProps.tick = Math.floor((this.animationProps.time / 1000) * 60);\r\n    this.animationProps.tock++;\r\n\r\n    // For back compatibility\r\n    this.animationProps.time = this.timeline\r\n      ? this.timeline.getTime()\r\n      : this.animationProps.engineTime;\r\n  }\r\n\r\n  /** Wait for supplied device */\r\n  async _initDevice() {\r\n    this.device = await this.props.device;\r\n    if (!this.device) {\r\n      throw new Error('No device provided');\r\n    }\r\n    this.canvas = this.device.canvasContext?.canvas || null;\r\n    // this._createInfoDiv();\r\n  }\r\n\r\n  _createInfoDiv(): void {\r\n    if (this.canvas && this.props.onAddHTML) {\r\n      const wrapperDiv = document.createElement('div');\r\n      document.body.appendChild(wrapperDiv);\r\n      wrapperDiv.style.position = 'relative';\r\n      const div = document.createElement('div');\r\n      div.style.position = 'absolute';\r\n      div.style.left = '10px';\r\n      div.style.bottom = '10px';\r\n      div.style.width = '300px';\r\n      div.style.background = 'white';\r\n      if (this.canvas instanceof HTMLCanvasElement) {\r\n        wrapperDiv.appendChild(this.canvas);\r\n      }\r\n      wrapperDiv.appendChild(div);\r\n      const html = this.props.onAddHTML(div);\r\n      if (html) {\r\n        div.innerHTML = html;\r\n      }\r\n    }\r\n  }\r\n\r\n  _getSizeAndAspect(): {width: number; height: number; aspect: number} {\r\n    if (!this.device) {\r\n      return {width: 1, height: 1, aspect: 1};\r\n    }\r\n    // https://webglfundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\r\n    const [width, height] = this.device?.canvasContext?.getPixelSize() || [1, 1];\r\n\r\n    // https://webglfundamentals.org/webgl/lessons/webgl-anti-patterns.html\r\n    let aspect = 1;\r\n    const canvas = this.device?.canvasContext?.canvas;\r\n\r\n    // @ts-expect-error\r\n    if (canvas && canvas.clientHeight) {\r\n      // @ts-expect-error\r\n      aspect = canvas.clientWidth / canvas.clientHeight;\r\n    } else if (width > 0 && height > 0) {\r\n      aspect = width / height;\r\n    }\r\n\r\n    return {width, height, aspect};\r\n  }\r\n\r\n  /** Default viewport setup */\r\n  _resizeViewport(): void {\r\n    // TODO can we use canvas context to code this in a portable way?\r\n    // @ts-expect-error Expose on canvasContext\r\n    if (this.props.autoResizeViewport && this.device.gl) {\r\n      // @ts-expect-error Expose canvasContext\r\n      this.device.gl.viewport(\r\n        0,\r\n        0,\r\n        // @ts-expect-error Expose canvasContext\r\n        this.device.gl.drawingBufferWidth,\r\n        // @ts-expect-error Expose canvasContext\r\n        this.device.gl.drawingBufferHeight\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resize the render buffer of the canvas to match canvas client size\r\n   * Optionally multiplying with devicePixel ratio\r\n   */\r\n  _resizeCanvasDrawingBuffer(): void {\r\n    if (this.props.autoResizeDrawingBuffer) {\r\n      this.device?.canvasContext?.resize({useDevicePixels: this.props.useDevicePixels});\r\n    }\r\n  }\r\n\r\n  _beginFrameTimers() {\r\n    this.frameRate.timeEnd();\r\n    this.frameRate.timeStart();\r\n\r\n    // Check if timer for last frame has completed.\r\n    // GPU timer results are never available in the same\r\n    // frame they are captured.\r\n    // if (\r\n    //   this._gpuTimeQuery &&\r\n    //   this._gpuTimeQuery.isResultAvailable() &&\r\n    //   !this._gpuTimeQuery.isTimerDisjoint()\r\n    // ) {\r\n    //   this.stats.get('GPU Time').addTime(this._gpuTimeQuery.getTimerMilliseconds());\r\n    // }\r\n\r\n    // if (this._gpuTimeQuery) {\r\n    //   // GPU time query start\r\n    //   this._gpuTimeQuery.beginTimeElapsedQuery();\r\n    // }\r\n\r\n    this.cpuTime.timeStart();\r\n  }\r\n\r\n  _endFrameTimers() {\r\n    this.cpuTime.timeEnd();\r\n\r\n    // if (this._gpuTimeQuery) {\r\n    //   // GPU time query end. Results will be available on next frame.\r\n    //   this._gpuTimeQuery.end();\r\n    // }\r\n  }\r\n\r\n  // Event handling\r\n\r\n  _startEventHandling() {\r\n    if (this.canvas) {\r\n      this.canvas.addEventListener('mousemove', this._onMousemove.bind(this));\r\n      this.canvas.addEventListener('mouseleave', this._onMouseleave.bind(this));\r\n    }\r\n  }\r\n\r\n  _onMousemove(event: Event) {\r\n    if (event instanceof MouseEvent) {\r\n      this._getAnimationProps()._mousePosition = [event.offsetX, event.offsetY];\r\n    }\r\n  }\r\n\r\n  _onMouseleave(event: Event) {\r\n    this._getAnimationProps()._mousePosition = null;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1263, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1269, "column": 0}, "map": {"version":3,"file":"timeline.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/animation/timeline.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\n/**\r\n * Timeline channel properties\r\n * @param delay = 0;\r\n * @param duration = Number.POSITIVE_INFINITY;\r\n * @param rate = 1\r\n * @param repeat = 1\r\n */\r\nexport type ChannelOptions = {\r\n  delay?: number;\r\n  duration?: number;\r\n  rate?: number;\r\n  repeat?: number;\r\n};\r\n\r\nexport type AnimationOptions = {\r\n  setTime: (time: number) => void;\r\n};\r\n\r\ntype Channel = {\r\n  time: number;\r\n  delay: number;\r\n  duration: number;\r\n  rate: number;\r\n  repeat: number;\r\n};\r\n\r\ntype Animation = {\r\n  channel?: number;\r\n  animation: {\r\n    setTime: (time: number) => void;\r\n  };\r\n};\r\n\r\nlet channelHandles = 1;\r\nlet animationHandles = 1;\r\n\r\nexport class Timeline {\r\n  time: number = 0;\r\n  channels = new Map<number, Channel>();\r\n  animations = new Map<number, Animation>();\r\n  playing: boolean = false;\r\n  lastEngineTime: number = -1;\r\n\r\n  constructor() {}\r\n\r\n  addChannel(props: ChannelOptions): number {\r\n    const {delay = 0, duration = Number.POSITIVE_INFINITY, rate = 1, repeat = 1} = props;\r\n\r\n    const channelId = channelHandles++;\r\n    const channel: Channel = {\r\n      time: 0,\r\n      delay,\r\n      duration,\r\n      rate,\r\n      repeat\r\n    };\r\n    this._setChannelTime(channel, this.time);\r\n    this.channels.set(channelId, channel);\r\n\r\n    return channelId;\r\n  }\r\n\r\n  removeChannel(channelId: number): void {\r\n    this.channels.delete(channelId);\r\n\r\n    for (const [animationHandle, animation] of this.animations) {\r\n      if (animation.channel === channelId) {\r\n        this.detachAnimation(animationHandle);\r\n      }\r\n    }\r\n  }\r\n\r\n  isFinished(channelId: number): boolean {\r\n    const channel = this.channels.get(channelId);\r\n    if (channel === undefined) {\r\n      return false;\r\n    }\r\n\r\n    return this.time >= channel.delay + channel.duration * channel.repeat;\r\n  }\r\n\r\n  getTime(channelId?: number): number {\r\n    if (channelId === undefined) {\r\n      return this.time;\r\n    }\r\n\r\n    const channel = this.channels.get(channelId);\r\n\r\n    if (channel === undefined) {\r\n      return -1;\r\n    }\r\n\r\n    return channel.time;\r\n  }\r\n\r\n  setTime(time: number): void {\r\n    this.time = Math.max(0, time);\r\n\r\n    const channels = this.channels.values();\r\n    for (const channel of channels) {\r\n      this._setChannelTime(channel, this.time);\r\n    }\r\n\r\n    const animations = this.animations.values();\r\n    for (const animationData of animations) {\r\n      const {animation, channel} = animationData;\r\n      animation.setTime(this.getTime(channel));\r\n    }\r\n  }\r\n\r\n  play(): void {\r\n    this.playing = true;\r\n  }\r\n\r\n  pause(): void {\r\n    this.playing = false;\r\n    this.lastEngineTime = -1;\r\n  }\r\n\r\n  reset(): void {\r\n    this.setTime(0);\r\n  }\r\n\r\n  attachAnimation(animation: AnimationOptions, channelHandle?: number): number {\r\n    const animationHandle = animationHandles++;\r\n\r\n    this.animations.set(animationHandle, {\r\n      animation,\r\n      channel: channelHandle\r\n    });\r\n\r\n    animation.setTime(this.getTime(channelHandle));\r\n\r\n    return animationHandle;\r\n  }\r\n\r\n  detachAnimation(channelId: number): void {\r\n    this.animations.delete(channelId);\r\n  }\r\n\r\n  update(engineTime: number): void {\r\n    if (this.playing) {\r\n      if (this.lastEngineTime === -1) {\r\n        this.lastEngineTime = engineTime;\r\n      }\r\n      this.setTime(this.time + (engineTime - this.lastEngineTime));\r\n      this.lastEngineTime = engineTime;\r\n    }\r\n  }\r\n\r\n  _setChannelTime(channel: Channel, time: number): void {\r\n    const offsetTime = time - channel.delay;\r\n    const totalDuration = channel.duration * channel.repeat;\r\n    // Note(Tarek): Don't loop on final repeat.\r\n    if (offsetTime >= totalDuration) {\r\n      channel.time = channel.duration * channel.rate;\r\n    } else {\r\n      channel.time = Math.max(0, offsetTime) % channel.duration;\r\n      channel.time *= channel.rate;\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1378, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1384, "column": 0}, "map": {"version":3,"file":"uid.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/utils/uid.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nconst uidCounters: Record<string, number> = {};\r\n\r\n/**\r\n * Returns a UID.\r\n * @param id= - Identifier base name\r\n * @return uid\r\n **/\r\nexport function uid(id: string = 'id'): string {\r\n  uidCounters[id] = uidCounters[id] || 1;\r\n  const count = uidCounters[id]++;\r\n  return `${id}-${count}`;\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAEpC,MAAM,WAAW,GAA2B,CAAA,CAAE,CAAC;AAOzC,SAAU,GAAG,CAAC,KAAa,IAAI;IACnC,WAAW,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACvC,MAAM,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC;IAChC,OAAO,GAAG,EAAE,CAAA,CAAA,EAAI,KAAK,EAAE,CAAC;AAC1B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1402, "column": 0}, "map": {"version":3,"file":"split-uniforms-and-bindings.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/model/split-uniforms-and-bindings.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport type {UniformValue, Binding} from '@luma.gl/core';\r\nimport {isNumericArray} from '@math.gl/types';\r\n\r\nexport function isUniformValue(value: unknown): value is UniformValue {\r\n  return isNumericArray(value) || typeof value === 'number' || typeof value === 'boolean';\r\n}\r\n\r\ntype UniformsAndBindings = {\r\n  bindings: Record<string, Binding>;\r\n  uniforms: Record<string, UniformValue>;\r\n};\r\n\r\nexport function splitUniformsAndBindings(\r\n  uniforms: Record<string, Binding | UniformValue>\r\n): UniformsAndBindings {\r\n  const result: UniformsAndBindings = {bindings: {}, uniforms: {}};\r\n  Object.keys(uniforms).forEach(name => {\r\n    const uniform = uniforms[name];\r\n    if (isUniformValue(uniform)) {\r\n      result.uniforms[name] = uniform;\r\n    } else {\r\n      result.bindings[name] = uniform;\r\n    }\r\n  });\r\n\r\n  return result;\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;;AAGpC,OAAO,EAAC,cAAc,EAAC,MAAM,gBAAgB,CAAC;;AAExC,SAAU,cAAc,CAAC,KAAc;IAC3C,wKAAO,iBAAA,AAAc,EAAC,KAAK,CAAC,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,SAAS,CAAC;AAC1F,CAAC;AAOK,SAAU,wBAAwB,CACtC,QAAgD;IAEhD,MAAM,MAAM,GAAwB;QAAC,QAAQ,EAAE,CAAA,CAAE;QAAE,QAAQ,EAAE,CAAA,CAAE;IAAA,CAAC,CAAC;IACjE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,IAAI,CAAC,EAAE;QACnC,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QAClC,CAAC,MAAM,CAAC;YACN,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QAClC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1429, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1435, "column": 0}, "map": {"version":3,"file":"shader-inputs.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/shader-inputs.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport type {Binding, UniformValue} from '@luma.gl/core';\r\nimport {log} from '@luma.gl/core';\r\n// import type {ShaderUniformType, UniformValue, UniformFormat, UniformInfoDevice, Texture, Sampler} from '@luma.gl/core';\r\nimport {getShaderModuleDependencies, ShaderModule} from '@luma.gl/shadertools';\r\nimport {splitUniformsAndBindings} from './model/split-uniforms-and-bindings';\r\n\r\nexport type ShaderInputsOptions = {\r\n  disableWarnings?: boolean;\r\n};\r\n\r\n/**\r\n * ShaderInputs holds uniform and binding values for one or more shader modules,\r\n * - It can generate binary data for any uniform buffer\r\n * - It can manage a uniform buffer for each block\r\n * - It can update managed uniform buffers with a single call\r\n * - It performs some book keeping on what has changed to minimize unnecessary writes to uniform buffers.\r\n */\r\nexport class ShaderInputs<\r\n  ShaderPropsT extends Partial<Record<string, Record<string, unknown>>> = Partial<\r\n    Record<string, Record<string, unknown>>\r\n  >\r\n> {\r\n  options: Required<ShaderInputsOptions> = {\r\n    disableWarnings: false\r\n  };\r\n\r\n  /**\r\n   * The map of modules\r\n   * @todo should should this include the resolved dependencies?\r\n   */\r\n  // @ts-ignore Fix typings\r\n  modules: Readonly<{[P in keyof ShaderPropsT]: ShaderModule<ShaderPropsT[P]>}>;\r\n\r\n  /** Stores the uniform values for each module */\r\n  moduleUniforms: Record<keyof ShaderPropsT, Record<string, UniformValue>>;\r\n  /** Stores the uniform bindings for each module  */\r\n  moduleBindings: Record<keyof ShaderPropsT, Record<string, Binding>>;\r\n  /** Tracks if uniforms have changed */\r\n  // moduleUniformsChanged: Record<keyof ShaderPropsT, false | string>;\r\n\r\n  /**\r\n   * Create a new UniformStore instance\r\n   * @param modules\r\n   */\r\n  constructor(\r\n    // @ts-ignore Fix typings\r\n    modules: {[P in keyof ShaderPropsT]?: ShaderModule<ShaderPropsT[P], any>},\r\n    options?: ShaderInputsOptions\r\n  ) {\r\n    Object.assign(this.options, options);\r\n\r\n    // Extract modules with dependencies\r\n    const resolvedModules = getShaderModuleDependencies(\r\n      Object.values(modules).filter(module => module.dependencies)\r\n    );\r\n    for (const resolvedModule of resolvedModules) {\r\n      // @ts-ignore\r\n      modules[resolvedModule.name] = resolvedModule;\r\n    }\r\n\r\n    log.log(1, 'Creating ShaderInputs with modules', Object.keys(modules))();\r\n\r\n    // Store the module definitions and create storage for uniform values and binding values, per module\r\n    // @ts-ignore Fix typings\r\n    this.modules = modules as {[P in keyof ShaderPropsT]: ShaderModule<ShaderPropsT[P]>};\r\n    this.moduleUniforms = {} as Record<keyof ShaderPropsT, Record<string, UniformValue>>;\r\n    this.moduleBindings = {} as Record<keyof ShaderPropsT, Record<string, Binding>>;\r\n\r\n    // Initialize the modules\r\n    for (const [name, module] of Object.entries(modules)) {\r\n      this._addModule(module);\r\n      if (module.name && name !== module.name && !this.options.disableWarnings) {\r\n        log.warn(`Module name: ${name} vs ${module.name}`)();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Destroy */\r\n  destroy(): void {}\r\n\r\n  /**\r\n   * Set module props\r\n   */\r\n  setProps(props: Partial<{[P in keyof ShaderPropsT]?: Partial<ShaderPropsT[P]>}>): void {\r\n    for (const name of Object.keys(props)) {\r\n      const moduleName = name as keyof ShaderPropsT;\r\n      const moduleProps = props[moduleName] || {};\r\n      const module = this.modules[moduleName];\r\n      if (!module) {\r\n        // Ignore props for unregistered modules\r\n        if (!this.options.disableWarnings) {\r\n          log.warn(`Module ${name} not found`)();\r\n        }\r\n        continue; // eslint-disable-line no-continue\r\n      }\r\n\r\n      const oldUniforms = this.moduleUniforms[moduleName] as (typeof module)['uniforms'];\r\n      const oldBindings = this.moduleBindings[moduleName];\r\n      const uniformsAndBindings =\r\n        module.getUniforms?.(moduleProps, oldUniforms) || (moduleProps as any);\r\n\r\n      const {uniforms, bindings} = splitUniformsAndBindings(uniformsAndBindings);\r\n      this.moduleUniforms[moduleName] = {...oldUniforms, ...uniforms};\r\n      this.moduleBindings[moduleName] = {...oldBindings, ...bindings};\r\n      // this.moduleUniformsChanged ||= moduleName;\r\n\r\n      // console.log(`setProps(${String(moduleName)}`, moduleName, this.moduleUniforms[moduleName])\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Return the map of modules\r\n   * @todo should should this include the resolved dependencies?\r\n   */\r\n  getModules(): ShaderModule[] {\r\n    return Object.values(this.modules);\r\n  }\r\n\r\n  /** Get all uniform values for all modules */\r\n  getUniformValues(): Partial<Record<keyof ShaderPropsT, Record<string, UniformValue>>> {\r\n    return this.moduleUniforms;\r\n  }\r\n\r\n  /** Merges all bindings for the shader (from the various modules) */\r\n  getBindingValues(): Record<string, Binding> {\r\n    const bindings = {} as Record<string, Binding>;\r\n    for (const moduleBindings of Object.values(this.moduleBindings)) {\r\n      Object.assign(bindings, moduleBindings);\r\n    }\r\n    return bindings;\r\n  }\r\n\r\n  // INTERNAL\r\n\r\n  /** Return a debug table that can be used for console.table() or log.table() */\r\n  getDebugTable(): Record<string, Record<string, unknown>> {\r\n    const table: Record<string, Record<string, unknown>> = {};\r\n    for (const [moduleName, module] of Object.entries(this.moduleUniforms)) {\r\n      for (const [key, value] of Object.entries(module)) {\r\n        table[`${moduleName}.${key}`] = {\r\n          type: this.modules[moduleName].uniformTypes?.[key as keyof ShaderPropsT],\r\n          value: String(value)\r\n        };\r\n      }\r\n    }\r\n    return table;\r\n  }\r\n\r\n  _addModule(module: ShaderModule): void {\r\n    const moduleName = module.name as keyof ShaderPropsT;\r\n    // Get default uniforms from module\r\n    this.moduleUniforms[moduleName] = module.defaultUniforms || {};\r\n    this.moduleBindings[moduleName] = {};\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAIpC,0HAA0H;AAC1H,OAAO,EAAC,2BAA2B,EAAe,MAAM,sBAAsB,CAAC;AAF/E,OAAO,EAAC,GAAG,EAAC,MAAM,eAAe,CAAC;AAGlC,OAAO,EAAC,wBAAwB,EAAC,+CAA4C;;;;AAavE,MAAO,YAAY;IAKvB,OAAO,GAAkC;QACvC,eAAe,EAAE,KAAK;KACvB,CAAC;IAEF;;;OAGG,CACH,yBAAyB;IACzB,OAAO,CAAuE;IAE9E,8CAAA,EAAgD,CAChD,cAAc,CAA2D;IACzE,iDAAA,EAAmD,CACnD,cAAc,CAAsD;IACpE,oCAAA,EAAsC,CACtC,qEAAqE;IAErE;;;OAGG,CACH,YACE,yBAAyB;IACzB,OAAyE,EACzE,OAA6B,CAAA;QAE7B,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAErC,oCAAoC;QACpC,MAAM,eAAe,0NAAG,8BAA2B,AAA3B,EACtB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,MAAM,EAAC,MAAM,CAAC,EAAE,AAAC,MAAM,CAAC,YAAY,CAAC,CAC7D,CAAC;QACF,KAAK,MAAM,cAAc,IAAI,eAAe,CAAE,CAAC;YAC7C,aAAa;YACb,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC;QAChD,CAAC;qKAED,MAAG,CAAC,GAAG,CAAC,CAAC,EAAE,oCAAoC,EAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC;QAEzE,oGAAoG;QACpG,yBAAyB;QACzB,IAAI,CAAC,OAAO,GAAG,OAAqE,CAAC;QACrF,IAAI,CAAC,cAAc,GAAG,CAAA,CAA8D,CAAC;QACrF,IAAI,CAAC,cAAc,GAAG,CAAA,CAAyD,CAAC;QAEhF,yBAAyB;QACzB,KAAK,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,CAAE,CAAC;YACrD,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;YACxB,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;6KACzE,MAAG,CAAC,IAAI,CAAC,CAAA,aAAA,EAAgB,IAAI,CAAA,IAAA,EAAO,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC;YACvD,CAAC;QACH,CAAC;IACH,CAAC;IAED,YAAA,EAAc,CACd,OAAO,GAAA,CAAU,CAAC;IAElB;;OAEG,CACH,QAAQ,CAAC,KAAsE,EAAA;QAC7E,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAE,CAAC;YACtC,MAAM,UAAU,GAAG,IAA0B,CAAC;YAC9C,MAAM,WAAW,GAAG,KAAK,CAAC,UAAU,CAAC,IAAI,CAAA,CAAE,CAAC;YAC5C,MAAM,MAAM,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,EAAE,CAAC;gBACZ,wCAAwC;gBACxC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,eAAe,EAAE,CAAC;iLAClC,MAAG,CAAC,IAAI,CAAC,CAAA,OAAA,EAAU,IAAI,CAAA,UAAA,CAAY,CAAC,EAAE,CAAC;gBACzC,CAAC;gBACD,SAAS,CAAC,kCAAkC;YAC9C,CAAC;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAgC,CAAC;YACnF,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;YACpD,MAAM,mBAAmB,GACvB,MAAM,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,WAAW,CAAC,IAAK,WAAmB,CAAC;YAEzE,MAAM,EAAC,QAAQ,EAAE,QAAQ,EAAC,uMAAG,2BAAA,AAAwB,EAAC,mBAAmB,CAAC,CAAC;YAC3E,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG;gBAAC,GAAG,WAAW;gBAAE,GAAG,QAAQ;YAAA,CAAC,CAAC;YAChE,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG;gBAAC,GAAG,WAAW;gBAAE,GAAG,QAAQ;YAAA,CAAC,CAAC;QAChE,6CAA6C;QAE7C,6FAA6F;QAC/F,CAAC;IACH,CAAC;IAED;;;OAGG,CACH,UAAU,GAAA;QACR,OAAO,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACrC,CAAC;IAED,2CAAA,EAA6C,CAC7C,gBAAgB,GAAA;QACd,OAAO,IAAI,CAAC,cAAc,CAAC;IAC7B,CAAC;IAED,kEAAA,EAAoE,CACpE,gBAAgB,GAAA;QACd,MAAM,QAAQ,GAAG,CAAA,CAA6B,CAAC;QAC/C,KAAK,MAAM,cAAc,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,CAAE,CAAC;YAChE,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;QAC1C,CAAC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,WAAW;IAEX,6EAAA,EAA+E,CAC/E,aAAa,GAAA;QACX,MAAM,KAAK,GAA4C,CAAA,CAAE,CAAC;QAC1D,KAAK,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAE,CAAC;YACvE,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE,CAAC;gBAClD,KAAK,CAAC,GAAG,UAAU,CAAA,CAAA,EAAI,GAAG,EAAE,CAAC,GAAG;oBAC9B,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,EAAE,CAAC,GAAyB,CAAC;oBACxE,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC;iBACrB,CAAC;YACJ,CAAC;QACH,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,UAAU,CAAC,MAAoB,EAAA;QAC7B,MAAM,UAAU,GAAG,MAAM,CAAC,IAA0B,CAAC;QACrD,mCAAmC;QACnC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,eAAe,IAAI,CAAA,CAAE,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,GAAG,CAAA,CAAE,CAAC;IACvC,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 1553, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1559, "column": 0}, "map": {"version":3,"file":"pipeline-factory.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/factories/pipeline-factory.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport type {RenderPipelineProps, ComputePipelineProps} from '@luma.gl/core';\r\nimport {Device, RenderPipeline, ComputePipeline} from '@luma.gl/core';\r\n\r\nexport type PipelineFactoryProps = RenderPipelineProps;\r\n\r\ntype RenderPipelineCacheItem = {pipeline: RenderPipeline; useCount: number};\r\ntype ComputePipelineCacheItem = {pipeline: ComputePipeline; useCount: number};\r\n\r\n/**\r\n * Efficiently creates / caches pipelines\r\n */\r\nexport class PipelineFactory {\r\n  static defaultProps: Required<PipelineFactoryProps> = {...RenderPipeline.defaultProps};\r\n\r\n  /** Get the singleton default pipeline factory for the specified device */\r\n  static getDefaultPipelineFactory(device: Device): PipelineFactory {\r\n    device._lumaData.defaultPipelineFactory =\r\n      device._lumaData.defaultPipelineFactory || new PipelineFactory(device);\r\n    return device._lumaData.defaultPipelineFactory as PipelineFactory;\r\n  }\r\n\r\n  readonly device: Device;\r\n  readonly destroyPolicy: 'unused' | 'never';\r\n\r\n  private _hashCounter: number = 0;\r\n  private readonly _hashes: Record<string, number> = {};\r\n  private readonly _renderPipelineCache: Record<string, RenderPipelineCacheItem> = {};\r\n  private readonly _computePipelineCache: Record<string, ComputePipelineCacheItem> = {};\r\n\r\n  constructor(device: Device) {\r\n    this.device = device;\r\n    this.destroyPolicy = device.props._factoryDestroyPolicy;\r\n  }\r\n\r\n  /** Return a RenderPipeline matching props. Reuses a similar pipeline if already created. */\r\n  createRenderPipeline(props: RenderPipelineProps): RenderPipeline {\r\n    const allProps: Required<RenderPipelineProps> = {...RenderPipeline.defaultProps, ...props};\r\n\r\n    const hash = this._hashRenderPipeline(allProps);\r\n\r\n    if (!this._renderPipelineCache[hash]) {\r\n      const pipeline = this.device.createRenderPipeline({\r\n        ...allProps,\r\n        id: allProps.id ? `${allProps.id}-cached` : undefined\r\n      });\r\n      pipeline.hash = hash;\r\n      this._renderPipelineCache[hash] = {pipeline, useCount: 0};\r\n    }\r\n\r\n    this._renderPipelineCache[hash].useCount++;\r\n    return this._renderPipelineCache[hash].pipeline;\r\n  }\r\n\r\n  createComputePipeline(props: ComputePipelineProps): ComputePipeline {\r\n    const allProps: Required<ComputePipelineProps> = {...ComputePipeline.defaultProps, ...props};\r\n\r\n    const hash = this._hashComputePipeline(allProps);\r\n\r\n    if (!this._computePipelineCache[hash]) {\r\n      const pipeline = this.device.createComputePipeline({\r\n        ...allProps,\r\n        id: allProps.id ? `${allProps.id}-cached` : undefined\r\n      });\r\n      pipeline.hash = hash;\r\n      this._computePipelineCache[hash] = {pipeline, useCount: 0};\r\n    }\r\n\r\n    this._computePipelineCache[hash].useCount++;\r\n    return this._computePipelineCache[hash].pipeline;\r\n  }\r\n\r\n  release(pipeline: RenderPipeline | ComputePipeline): void {\r\n    const hash = pipeline.hash;\r\n    const cache =\r\n      pipeline instanceof ComputePipeline ? this._computePipelineCache : this._renderPipelineCache;\r\n    cache[hash].useCount--;\r\n    if (cache[hash].useCount === 0) {\r\n      if (this.destroyPolicy === 'unused') {\r\n        cache[hash].pipeline.destroy();\r\n        delete cache[hash];\r\n      }\r\n    }\r\n  }\r\n\r\n  // PRIVATE\r\n  private _hashComputePipeline(props: ComputePipelineProps): string {\r\n    const shaderHash = this._getHash(props.shader.source);\r\n    return `${shaderHash}`;\r\n  }\r\n\r\n  /** Calculate a hash based on all the inputs for a render pipeline */\r\n  private _hashRenderPipeline(props: RenderPipelineProps): string {\r\n    const vsHash = props.vs ? this._getHash(props.vs.source) : 0;\r\n    const fsHash = props.fs ? this._getHash(props.fs.source) : 0;\r\n\r\n    // WebGL specific\r\n    // const {varyings = [], bufferMode = {}} = props;\r\n    // const varyingHashes = varyings.map((v) => this._getHash(v));\r\n    const varyingHash = '-'; // `${varyingHashes.join('/')}B${bufferMode}`\r\n    const bufferLayoutHash = this._getHash(JSON.stringify(props.bufferLayout));\r\n\r\n    switch (this.device.type) {\r\n      case 'webgl':\r\n        // WebGL is more dynamic\r\n        return `${vsHash}/${fsHash}V${varyingHash}BL${bufferLayoutHash}`;\r\n\r\n      default:\r\n        // On WebGPU we need to rebuild the pipeline if topology, parameters or bufferLayout change\r\n        const parameterHash = this._getHash(JSON.stringify(props.parameters));\r\n        // TODO - Can json.stringify() generate different strings for equivalent objects if order of params is different?\r\n        // create a deepHash() to deduplicate?\r\n        return `${vsHash}/${fsHash}V${varyingHash}T${props.topology}P${parameterHash}BL${bufferLayoutHash}`;\r\n    }\r\n  }\r\n\r\n  private _getHash(key: string): number {\r\n    if (this._hashes[key] === undefined) {\r\n      this._hashes[key] = this._hashCounter++;\r\n    }\r\n    return this._hashes[key];\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1669, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1675, "column": 0}, "map": {"version":3,"file":"shader-factory.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/factories/shader-factory.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {Device, Shader, ShaderProps} from '@luma.gl/core';\r\n\r\n/** Manages a cached pool of Shaders for reuse. */\r\nexport class ShaderFactory {\r\n  static readonly defaultProps: Required<ShaderProps> = {...Shader.defaultProps};\r\n\r\n  /** Returns the default ShaderFactory for the given {@link Device}, creating one if necessary. */\r\n  static getDefaultShaderFactory(device: Device): ShaderFactory {\r\n    device._lumaData.defaultShaderFactory ||= new ShaderFactory(device);\r\n    return device._lumaData.defaultShaderFactory as ShaderFactory;\r\n  }\r\n\r\n  public readonly device: Device;\r\n  readonly destroyPolicy: 'unused' | 'never';\r\n  private readonly _cache: Record<string, {shader: Shader; useCount: number}> = {};\r\n\r\n  /** @internal */\r\n  constructor(device: Device) {\r\n    this.device = device;\r\n    this.destroyPolicy = device.props._factoryDestroyPolicy;\r\n  }\r\n\r\n  /** Requests a {@link Shader} from the cache, creating a new Shader only if necessary. */\r\n  createShader(props: ShaderProps): Shader {\r\n    const key = this._hashShader(props);\r\n\r\n    let cacheEntry = this._cache[key];\r\n    if (!cacheEntry) {\r\n      const shader = this.device.createShader({\r\n        ...props,\r\n        id: props.id ? `${props.id}-cached` : undefined\r\n      });\r\n      this._cache[key] = cacheEntry = {shader, useCount: 0};\r\n    }\r\n\r\n    cacheEntry.useCount++;\r\n    return cacheEntry.shader;\r\n  }\r\n\r\n  /** Releases a previously-requested {@link Shader}, destroying it if no users remain. */\r\n  release(shader: Shader): void {\r\n    const key = this._hashShader(shader);\r\n    const cacheEntry = this._cache[key];\r\n    if (cacheEntry) {\r\n      cacheEntry.useCount--;\r\n      if (cacheEntry.useCount === 0) {\r\n        if (this.destroyPolicy === 'unused') {\r\n          delete this._cache[key];\r\n          cacheEntry.shader.destroy();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  // PRIVATE\r\n\r\n  private _hashShader(value: Shader | ShaderProps): string {\r\n    return `${value.stage}:${value.source}`;\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAEpC,OAAO,EAAS,MAAM,EAAc,MAAM,eAAe,CAAC;;AAGpD,MAAO,aAAa;IACxB,MAAM,CAAU,YAAY,GAA0B;QAAC,kLAAG,SAAM,CAAC,YAAY;IAAA,CAAC,CAAC;IAE/E,+FAAA,EAAiG,CACjG,MAAM,CAAC,uBAAuB,CAAC,MAAc,EAAA;QAC3C,MAAM,CAAC,SAAS,CAAC,oBAAoB,KAAK,IAAI,aAAa,CAAC,MAAM,CAAC,CAAC;QACpE,OAAO,MAAM,CAAC,SAAS,CAAC,oBAAqC,CAAC;IAChE,CAAC;IAEe,MAAM,CAAS;IACtB,aAAa,CAAqB;IAC1B,MAAM,GAAuD,CAAA,CAAE,CAAC;IAEjF,cAAA,EAAgB,CAChB,YAAY,MAAc,CAAA;QACxB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,KAAK,CAAC,qBAAqB,CAAC;IAC1D,CAAC;IAED,uFAAA,EAAyF,CACzF,YAAY,CAAC,KAAkB,EAAA;QAC7B,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAEpC,IAAI,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAClC,IAAI,CAAC,UAAU,EAAE,CAAC;YAChB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;gBACtC,GAAG,KAAK;gBACR,EAAE,EAAE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,EAAE,CAAA,OAAA,CAAS,CAAC,CAAC,CAAC,SAAS;aAChD,CAAC,CAAC;YACH,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,UAAU,GAAG;gBAAC,MAAM;gBAAE,QAAQ,EAAE,CAAC;YAAA,CAAC,CAAC;QACxD,CAAC;QAED,UAAU,CAAC,QAAQ,EAAE,CAAC;QACtB,OAAO,UAAU,CAAC,MAAM,CAAC;IAC3B,CAAC;IAED,sFAAA,EAAwF,CACxF,OAAO,CAAC,MAAc,EAAA;QACpB,MAAM,GAAG,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QACrC,MAAM,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACpC,IAAI,UAAU,EAAE,CAAC;YACf,UAAU,CAAC,QAAQ,EAAE,CAAC;YACtB,IAAI,UAAU,CAAC,QAAQ,KAAK,CAAC,EAAE,CAAC;gBAC9B,IAAI,IAAI,CAAC,aAAa,KAAK,QAAQ,EAAE,CAAC;oBACpC,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBACxB,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBAC9B,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IAED,UAAU;IAEF,WAAW,CAAC,KAA2B,EAAA;QAC7C,OAAO,GAAG,KAAK,CAAC,KAAK,CAAA,CAAA,EAAI,KAAK,CAAC,MAAM,EAAE,CAAC;IAC1C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1738, "column": 0}, "map": {"version":3,"file":"gpu-geometry.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/geometry/gpu-geometry.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport type {PrimitiveTopology, BufferLayout} from '@luma.gl/core';\r\nimport {Device, Buffer, getVertexFormatFromAttribute} from '@luma.gl/core';\r\nimport type {Geometry} from '../geometry/geometry';\r\nimport {uid} from '../utils/uid';\r\n\r\nexport type GPUGeometryProps = {\r\n  id?: string;\r\n  /** Determines how vertices are read from the 'vertex' attributes */\r\n  topology: 'point-list' | 'line-list' | 'line-strip' | 'triangle-list' | 'triangle-strip';\r\n  /** Auto calculated from attributes if not provided */\r\n  vertexCount: number;\r\n  bufferLayout: BufferLayout[];\r\n  indices?: Buffer | null;\r\n  attributes: Record<string, Buffer>;\r\n};\r\n\r\nexport class GPUGeometry {\r\n  readonly id: string;\r\n  userData: Record<string, unknown> = {};\r\n\r\n  /** Determines how vertices are read from the 'vertex' attributes */\r\n  readonly topology?: PrimitiveTopology;\r\n  readonly bufferLayout: BufferLayout[] = [];\r\n\r\n  readonly vertexCount: number;\r\n  readonly indices?: Buffer | null;\r\n  readonly attributes: Record<string, Buffer>;\r\n\r\n  constructor(props: GPUGeometryProps) {\r\n    this.id = props.id || uid('geometry');\r\n    this.topology = props.topology;\r\n    this.indices = props.indices || null;\r\n    this.attributes = props.attributes;\r\n\r\n    this.vertexCount = props.vertexCount;\r\n\r\n    this.bufferLayout = props.bufferLayout || [];\r\n\r\n    if (this.indices) {\r\n      if (!(this.indices.usage & Buffer.INDEX)) {\r\n        throw new Error('Index buffer must have INDEX usage');\r\n      }\r\n    }\r\n  }\r\n\r\n  destroy(): void {\r\n    this.indices?.destroy();\r\n    for (const attribute of Object.values(this.attributes)) {\r\n      attribute.destroy();\r\n    }\r\n  }\r\n\r\n  getVertexCount(): number {\r\n    return this.vertexCount;\r\n  }\r\n\r\n  getAttributes(): Record<string, Buffer> {\r\n    return this.attributes;\r\n  }\r\n\r\n  getIndexes(): Buffer | null {\r\n    return this.indices || null;\r\n  }\r\n\r\n  _calculateVertexCount(positions: Buffer): number {\r\n    // Assume that positions is a fully packed float32x3 buffer\r\n    const vertexCount = positions.byteLength / 12;\r\n    return vertexCount;\r\n  }\r\n}\r\n\r\nexport function makeGPUGeometry(device: Device, geometry: Geometry | GPUGeometry): GPUGeometry {\r\n  if (geometry instanceof GPUGeometry) {\r\n    return geometry;\r\n  }\r\n\r\n  const indices = getIndexBufferFromGeometry(device, geometry);\r\n  const {attributes, bufferLayout} = getAttributeBuffersFromGeometry(device, geometry);\r\n  return new GPUGeometry({\r\n    topology: geometry.topology || 'triangle-list',\r\n    bufferLayout,\r\n    vertexCount: geometry.vertexCount,\r\n    indices,\r\n    attributes\r\n  });\r\n}\r\n\r\nexport function getIndexBufferFromGeometry(device: Device, geometry: Geometry): Buffer | undefined {\r\n  if (!geometry.indices) {\r\n    return undefined;\r\n  }\r\n  const data = geometry.indices.value;\r\n  return device.createBuffer({usage: Buffer.INDEX, data});\r\n}\r\n\r\nexport function getAttributeBuffersFromGeometry(\r\n  device: Device,\r\n  geometry: Geometry\r\n): {attributes: Record<string, Buffer>; bufferLayout: BufferLayout[]; vertexCount: number} {\r\n  const bufferLayout: BufferLayout[] = [];\r\n\r\n  const attributes: Record<string, Buffer> = {};\r\n  for (const [attributeName, attribute] of Object.entries(geometry.attributes)) {\r\n    let name: string = attributeName;\r\n    // TODO Map some GLTF attribute names (is this still needed?)\r\n    switch (attributeName) {\r\n      case 'POSITION':\r\n        name = 'positions';\r\n        break;\r\n      case 'NORMAL':\r\n        name = 'normals';\r\n        break;\r\n      case 'TEXCOORD_0':\r\n        name = 'texCoords';\r\n        break;\r\n      case 'COLOR_0':\r\n        name = 'colors';\r\n        break;\r\n    }\r\n    if (attribute) {\r\n      attributes[name] = device.createBuffer({\r\n        data: attribute.value,\r\n        id: `${attributeName}-buffer`\r\n      });\r\n      const {value, size, normalized} = attribute;\r\n      // @ts-expect-error\r\n      bufferLayout.push({name, format: getVertexFormatFromAttribute(value, size, normalized)});\r\n    }\r\n  }\r\n\r\n  const vertexCount = geometry._calculateVertexCount(geometry.attributes, geometry.indices);\r\n\r\n  return {attributes, bufferLayout, vertexCount};\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1858, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1864, "column": 0}, "map": {"version":3,"file":"deep-equal.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/utils/deep-equal.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\n/**\r\n * Fast partial deep equal for prop.\r\n *\r\n * @param a Prop\r\n * @param b Prop to compare against `a`\r\n * @param depth Depth to which to recurse in nested Objects/Arrays. Use 0 (default) for shallow comparison, -1 for infinite depth\r\n */\r\n/* eslint-disable complexity */\r\nexport function deepEqual(a: any, b: any, depth: number): boolean {\r\n  if (a === b) {\r\n    return true;\r\n  }\r\n  if (!depth || !a || !b) {\r\n    return false;\r\n  }\r\n  if (Array.isArray(a)) {\r\n    if (!Array.isArray(b) || a.length !== b.length) {\r\n      return false;\r\n    }\r\n    for (let i = 0; i < a.length; i++) {\r\n      if (!deepEqual(a[i], b[i], depth - 1)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  if (Array.isArray(b)) {\r\n    return false;\r\n  }\r\n  if (typeof a === 'object' && typeof b === 'object') {\r\n    const aKeys = Object.keys(a);\r\n    const bKeys = Object.keys(b);\r\n    if (aKeys.length !== bKeys.length) {\r\n      return false;\r\n    }\r\n    for (const key of aKeys) {\r\n      if (!b.hasOwnProperty(key)) {\r\n        return false;\r\n      }\r\n      if (!deepEqual(a[key], b[key], depth - 1)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAEpC;;;;;;GAMG,CACH,6BAAA,EAA+B;;;AACzB,SAAU,SAAS,CAAC,CAAM,EAAE,CAAM,EAAE,KAAa;IACrD,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACZ,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,CAAC,KAAK,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC;QACvB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;YAC/C,OAAO,KAAK,CAAC;QACf,CAAC;QACD,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,CAAE,CAAC;YAClC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC;gBACtC,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACD,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC;QACrB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,IAAI,OAAO,CAAC,KAAK,QAAQ,IAAI,OAAO,CAAC,KAAK,QAAQ,EAAE,CAAC;QACnD,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC7B,IAAI,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,MAAM,EAAE,CAAC;YAClC,OAAO,KAAK,CAAC;QACf,CAAC;QACD,KAAK,MAAM,GAAG,IAAI,KAAK,CAAE,CAAC;YACxB,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC;gBAC3B,OAAO,KAAK,CAAC;YACf,CAAC;YACD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,CAAC;gBAC1C,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1915, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1921, "column": 0}, "map": {"version":3,"file":"load-file.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/application-utils/load-file.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nlet pathPrefix = '';\r\n\r\n/**\r\n * Set a relative path prefix\r\n */\r\nexport function setPathPrefix(prefix: string) {\r\n  pathPrefix = prefix;\r\n}\r\n\r\n/**\r\n * Loads ImageBitmap asynchronously. Respects setPathPrefix.\r\n * image.crossOrigin can be set via opts.crossOrigin, default to 'anonymous'\r\n * @returns a promise tracking the load\r\n */\r\nexport async function loadImageBitmap(\r\n  url: string,\r\n  opts?: {crossOrigin?: string} & ImageBitmapOptions\r\n): Promise<ImageBitmap> {\r\n  const image = new Image();\r\n  image.crossOrigin = opts?.crossOrigin || 'anonymous';\r\n  image.src = url.startsWith('http') ? url : pathPrefix + url;\r\n  await image.decode();\r\n  return opts ? await createImageBitmap(image, opts) : await createImageBitmap(image);\r\n}\r\n\r\n/**\r\n * Loads image asynchronously. Respects setPathPrefix.\r\n * image.crossOrigin can be set via opts.crossOrigin, default to 'anonymous'\r\n * @returns a promise tracking the load\r\n * @deprecated Use `loadImageBitmap()` unless you are supporting old versions of Safari.\r\n */\r\nexport async function loadImage(\r\n  url: string,\r\n  opts?: {crossOrigin?: string}\r\n): Promise<HTMLImageElement> {\r\n  return await new Promise((resolve, reject) => {\r\n    try {\r\n      const image = new Image();\r\n      image.onload = () => resolve(image);\r\n      image.onerror = () => reject(new Error(`Could not load image ${url}.`));\r\n      image.crossOrigin = opts?.crossOrigin || 'anonymous';\r\n      image.src = url.startsWith('http') ? url : pathPrefix + url;\r\n    } catch (error) {\r\n      reject(error);\r\n    }\r\n  });\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;;;AAEpC,IAAI,UAAU,GAAG,EAAE,CAAC;AAKd,SAAU,aAAa,CAAC,MAAc;IAC1C,UAAU,GAAG,MAAM,CAAC;AACtB,CAAC;AAOM,KAAK,UAAU,eAAe,CACnC,GAAW,EACX,IAAkD;IAElD,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;IAC1B,KAAK,CAAC,WAAW,GAAG,IAAI,EAAE,WAAW,IAAI,WAAW,CAAC;IACrD,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC;IAC5D,MAAM,KAAK,CAAC,MAAM,EAAE,CAAC;IACrB,OAAO,IAAI,CAAC,CAAC,CAAC,MAAM,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,iBAAiB,CAAC,KAAK,CAAC,CAAC;AACtF,CAAC;AAQM,KAAK,UAAU,SAAS,CAC7B,GAAW,EACX,IAA6B;IAE7B,OAAO,MAAM,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC3C,IAAI,CAAC;YACH,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YAC1B,KAAK,CAAC,MAAM,GAAG,GAAG,CAAG,CAAD,MAAQ,CAAC,KAAK,CAAC,CAAC;YACpC,KAAK,CAAC,OAAO,GAAG,GAAG,CAAG,CAAD,KAAO,CAAC,IAAI,KAAK,CAAC,CAAA,qBAAA,EAAwB,GAAG,CAAA,CAAA,CAAG,CAAC,CAAC,CAAC;YACxE,KAAK,CAAC,WAAW,GAAG,IAAI,EAAE,WAAW,IAAI,WAAW,CAAC;YACrD,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,UAAU,GAAG,GAAG,CAAC;QAC9D,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC;YACf,MAAM,CAAC,KAAK,CAAC,CAAC;QAChB,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1953, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1959, "column": 0}, "map": {"version":3,"file":"async-texture.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/async-texture/async-texture.ts"],"sourcesContent":["// luma.gl, MIT license\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport type {\r\n  Texture,\r\n  TextureProps,\r\n  Sampler,\r\n  TextureView,\r\n  Device,\r\n  Texture1DData,\r\n  Texture2DData,\r\n  Texture3DData,\r\n  TextureArrayData,\r\n  TextureCubeData,\r\n  TextureCubeArrayData\r\n} from '@luma.gl/core';\r\n\r\nimport {loadImageBitmap} from '../application-utils/load-file';\r\nimport {uid} from '../utils/uid';\r\n\r\nexport type AsyncTextureProps = Omit<TextureProps, 'data'> & AsyncTextureDataProps;\r\n\r\ntype AsyncTextureDataProps =\r\n  | AsyncTexture1DProps\r\n  | AsyncTexture2DProps\r\n  | AsyncTexture3DProps\r\n  | AsyncTextureArrayProps\r\n  | AsyncTextureCubeProps\r\n  | AsyncTextureCubeArrayProps;\r\n\r\ntype AsyncTexture1DProps = {dimension: '1d'; data: Promise<Texture1DData> | Texture1DData | null};\r\ntype AsyncTexture2DProps = {dimension?: '2d'; data: Promise<Texture2DData> | Texture2DData | null};\r\ntype AsyncTexture3DProps = {dimension: '3d'; data: Promise<Texture3DData> | Texture3DData | null};\r\ntype AsyncTextureArrayProps = {\r\n  dimension: '2d-array';\r\n  data: Promise<TextureArrayData> | TextureArrayData | null;\r\n};\r\ntype AsyncTextureCubeProps = {\r\n  dimension: 'cube';\r\n  data: Promise<TextureCubeData> | TextureCubeData | null;\r\n};\r\ntype AsyncTextureCubeArrayProps = {\r\n  dimension: 'cube-array';\r\n  data: Promise<TextureCubeArrayData> | TextureCubeArrayData | null;\r\n};\r\n\r\ntype TextureData = TextureProps['data'];\r\ntype AsyncTextureData = AsyncTextureProps['data'];\r\n\r\n/**\r\n * It is very convenient to be able to initialize textures with promises\r\n * This can add considerable complexity to the Texture class, and doesn't\r\n * fit with the immutable nature of WebGPU resources.\r\n * Instead, luma.gl offers async textures as a separate class.\r\n */\r\nexport class AsyncTexture {\r\n  readonly device: Device;\r\n  readonly id: string;\r\n\r\n  // TODO - should we type these as possibly `null`? It will make usage harder?\r\n  // @ts-expect-error\r\n  texture: Texture;\r\n  // @ts-expect-error\r\n  sampler: Sampler;\r\n  // @ts-expect-error\r\n  view: TextureView;\r\n\r\n  readonly ready: Promise<void>;\r\n  isReady: boolean = false;\r\n  destroyed: boolean = false;\r\n\r\n  protected resolveReady: () => void = () => {};\r\n  protected rejectReady: (error: Error) => void = () => {};\r\n\r\n  get [Symbol.toStringTag]() {\r\n    return 'AsyncTexture';\r\n  }\r\n\r\n  toString(): string {\r\n    return `AsyncTexture:\"${this.id}\"(${this.isReady ? 'ready' : 'loading'})`;\r\n  }\r\n\r\n  constructor(device: Device, props: AsyncTextureProps) {\r\n    this.device = device;\r\n    this.id = props.id || uid('async-texture');\r\n    // this.id = typeof props?.data === 'string' ? props.data.slice(-20) : uid('async-texture');\r\n\r\n    // Signature: new AsyncTexture(device, {data: url})\r\n    if (typeof props?.data === 'string' && props.dimension === '2d') {\r\n      props = {...props, data: loadImageBitmap(props.data)};\r\n    }\r\n\r\n    this.ready = new Promise<void>((resolve, reject) => {\r\n      this.resolveReady = () => {\r\n        this.isReady = true;\r\n        resolve();\r\n      };\r\n      this.rejectReady = reject;\r\n    });\r\n\r\n    this.initAsync(props);\r\n  }\r\n\r\n  async initAsync(props: AsyncTextureProps): Promise<void> {\r\n    let resolveReady;\r\n    let rejectReady;\r\n\r\n    const asyncData: AsyncTextureData = props.data;\r\n    const data: TextureData = await awaitAllPromises(asyncData).then(resolveReady, rejectReady);\r\n\r\n    // Check that we haven't been destroyed while waiting for texture data to load\r\n    if (this.destroyed) {\r\n      return;\r\n    }\r\n\r\n    // Now we can actually create the texture\r\n    // @ts-expect-error Discriminated union\r\n    const syncProps: TextureProps = {...props, data};\r\n\r\n    this.texture = this.device.createTexture(syncProps);\r\n    this.sampler = this.texture.sampler;\r\n    this.view = this.texture.view;\r\n    this.isReady = true;\r\n  }\r\n\r\n  destroy(): void {\r\n    if (this.texture) {\r\n      this.texture.destroy();\r\n      // @ts-expect-error\r\n      this.texture = null;\r\n    }\r\n    this.destroyed = true;\r\n  }\r\n\r\n  /**\r\n   * Textures are immutable and cannot be resized after creation,\r\n   * but we can create a similar texture with the same parameters but a new size.\r\n   * @note Does not copy contents of the texture\r\n   * @todo Abort pending promise and create a texture with the new size?\r\n   */\r\n  resize(size: {width: number; height: number}): boolean {\r\n    if (!this.isReady) {\r\n      throw new Error('Cannot resize texture before it is ready');\r\n    }\r\n\r\n    if (size.width === this.texture.width && size.height === this.texture.height) {\r\n      return false;\r\n    }\r\n\r\n    if (this.texture) {\r\n      const texture = this.texture;\r\n      this.texture = texture.clone(size);\r\n      texture.destroy();\r\n    }\r\n    return true;\r\n  }\r\n}\r\n\r\n// HELPERS\r\n\r\n/** Resolve all promises in a nested data structure */\r\nasync function awaitAllPromises(x: any): Promise<any> {\r\n  x = await x;\r\n  if (Array.isArray(x)) {\r\n    return await Promise.all(x.map(awaitAllPromises));\r\n  }\r\n  if (x && typeof x === 'object' && x.constructor === Object) {\r\n    const object: Record<string, any> = x;\r\n    const values = await Promise.all(Object.values(object));\r\n    const keys = Object.keys(object);\r\n    const resolvedObject: Record<string, any> = {};\r\n    for (let i = 0; i < keys.length; i++) {\r\n      resolvedObject[keys[i]] = values[i];\r\n    }\r\n    return resolvedObject;\r\n  }\r\n  return x;\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2075, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2081, "column": 0}, "map": {"version":3,"file":"debug-shader-layout.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/debug/debug-shader-layout.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport type {ShaderLayout} from '@luma.gl/core';\r\n\r\n/**\r\n * Extracts a table suitable for `console.table()` from a shader layout to assist in debugging.\r\n * @param layout shader layout\r\n * @param name app should provide the most meaningful name, usually the model or pipeline name / id.\r\n * @returns\r\n */\r\nexport function getDebugTableForShaderLayout(\r\n  layout: ShaderLayout,\r\n  name: string\r\n): Record<string, Record<string, string>> {\r\n  const table: Record<string, Record<string, string>> = {};\r\n\r\n  const header = 'Values'; // '`Shader Layout for ${name}`;\r\n\r\n  if (layout.attributes.length === 0 && !layout.varyings?.length) {\r\n    return {'No attributes or varyings': {[header]: 'N/A'}};\r\n  }\r\n\r\n  for (const attributeDeclaration of layout.attributes) {\r\n    if (attributeDeclaration) {\r\n      const glslDeclaration = `${attributeDeclaration.location} ${attributeDeclaration.name}: ${attributeDeclaration.type}`;\r\n      table[`in ${glslDeclaration}`] = {[header]: attributeDeclaration.stepMode || 'vertex'};\r\n    }\r\n  }\r\n\r\n  for (const varyingDeclaration of layout.varyings || []) {\r\n    const glslDeclaration = `${varyingDeclaration.location} ${varyingDeclaration.name}`;\r\n    table[`out ${glslDeclaration}`] = {[header]: JSON.stringify(varyingDeclaration)};\r\n  }\r\n\r\n  return table;\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAIpC;;;;;GAKG;;;AACG,SAAU,4BAA4B,CAC1C,MAAoB,EACpB,IAAY;IAEZ,MAAM,KAAK,GAA2C,CAAA,CAAE,CAAC;IAEzD,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,gCAAgC;IAEzD,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,EAAE,CAAC;QAC/D,OAAO;YAAC,2BAA2B,EAAE;gBAAC,CAAC,MAAM,CAAC,EAAE,KAAK;YAAA,CAAC;QAAA,CAAC,CAAC;IAC1D,CAAC;IAED,KAAK,MAAM,oBAAoB,IAAI,MAAM,CAAC,UAAU,CAAE,CAAC;QACrD,IAAI,oBAAoB,EAAE,CAAC;YACzB,MAAM,eAAe,GAAG,GAAG,oBAAoB,CAAC,QAAQ,CAAA,CAAA,EAAI,oBAAoB,CAAC,IAAI,CAAA,EAAA,EAAK,oBAAoB,CAAC,IAAI,EAAE,CAAC;YACtH,KAAK,CAAC,CAAA,GAAA,EAAM,eAAe,EAAE,CAAC,GAAG;gBAAC,CAAC,MAAM,CAAC,EAAE,oBAAoB,CAAC,QAAQ,IAAI,QAAQ;YAAA,CAAC,CAAC;QACzF,CAAC;IACH,CAAC;IAED,KAAK,MAAM,kBAAkB,IAAI,MAAM,CAAC,QAAQ,IAAI,EAAE,CAAE,CAAC;QACvD,MAAM,eAAe,GAAG,GAAG,kBAAkB,CAAC,QAAQ,CAAA,CAAA,EAAI,kBAAkB,CAAC,IAAI,EAAE,CAAC;QACpF,KAAK,CAAC,CAAA,IAAA,EAAO,eAAe,EAAE,CAAC,GAAG;YAAC,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC;QAAA,CAAC,CAAC;IACnF,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2124, "column": 0}, "map": {"version":3,"file":"debug-framebuffer.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/debug/debug-framebuffer.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport type {Framebuffer, Texture} from '@luma.gl/core';\r\n// import {copyTextureToImage} from '../debug/copy-texture-to-image';\r\n\r\n/** Only works with 1st device? */\r\nlet canvas: HTMLCanvasElement | null = null;\r\nlet ctx: CanvasRenderingContext2D | null = null;\r\n// let targetImage: HTMLImageElement | null = null;\r\n\r\n/** Debug utility to draw FBO contents onto screen */\r\n// eslint-disable-next-line\r\nexport function debugFramebuffer(\r\n  fbo: Framebuffer | Texture,\r\n  {\r\n    id,\r\n    minimap,\r\n    opaque,\r\n    top = '0',\r\n    left = '0',\r\n    rgbaScale = 1\r\n  }: {\r\n    id: string;\r\n    minimap?: boolean;\r\n    opaque?: boolean;\r\n    top?: string;\r\n    left?: string;\r\n    rgbaScale?: number;\r\n  }\r\n) {\r\n  if (!canvas) {\r\n    canvas = document.createElement('canvas');\r\n    canvas.id = id;\r\n    canvas.title = id;\r\n    canvas.style.zIndex = '100';\r\n    canvas.style.position = 'absolute';\r\n    canvas.style.top = top; // ⚠️\r\n    canvas.style.left = left; // ⚠️\r\n    canvas.style.border = 'blue 5px solid';\r\n    canvas.style.transform = 'scaleY(-1)';\r\n    document.body.appendChild(canvas);\r\n\r\n    ctx = canvas.getContext('2d');\r\n    // targetImage = new Image();\r\n  }\r\n\r\n  // const canvasHeight = (minimap ? 2 : 1) * fbo.height;\r\n  if (canvas.width !== fbo.width || canvas.height !== fbo.height) {\r\n    canvas.width = fbo.width / 2;\r\n    canvas.height = fbo.height / 2;\r\n    canvas.style.width = '400px';\r\n    canvas.style.height = '400px';\r\n  }\r\n\r\n  // const image = copyTextureToImage(fbo, {targetMaxHeight: 100, targetImage});\r\n  // ctx.drawImage(image, 0, 0);\r\n\r\n  const color = fbo.device.readPixelsToArrayWebGL(fbo);\r\n  const imageData = ctx?.createImageData(fbo.width, fbo.height);\r\n  if (imageData) {\r\n    // Full map\r\n    const offset = 0;\r\n    // if (color.some((v) => v > 0)) {\r\n    //   console.error('THERE IS NON-ZERO DATA IN THE FBO!');\r\n    // }\r\n    for (let i = 0; i < color.length; i += 4) {\r\n      imageData.data[offset + i + 0] = color[i + 0] * rgbaScale;\r\n      imageData.data[offset + i + 1] = color[i + 1] * rgbaScale;\r\n      imageData.data[offset + i + 2] = color[i + 2] * rgbaScale;\r\n      imageData.data[offset + i + 3] = opaque ? 255 : color[i + 3] * rgbaScale;\r\n    }\r\n    ctx?.putImageData(imageData, 0, 0);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2174, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2180, "column": 0}, "map": {"version":3,"file":"model.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/model/model.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\n// A lot of imports, but then Model is where it all comes together...\r\nimport type {TypedArray} from '@math.gl/types';\r\nimport type {\r\n  RenderPipelineProps,\r\n  RenderPipelineParameters,\r\n  BufferLayout,\r\n  Shader,\r\n  VertexArray,\r\n  TransformFeedback,\r\n  AttributeInfo,\r\n  Binding,\r\n  UniformValue,\r\n  PrimitiveTopology\r\n} from '@luma.gl/core';\r\nimport {\r\n  Device,\r\n  DeviceFeature,\r\n  Buffer,\r\n  Texture,\r\n  TextureView,\r\n  Sampler,\r\n  RenderPipeline,\r\n  RenderPass,\r\n  UniformStore,\r\n  log,\r\n  getTypedArrayFromDataType,\r\n  getAttributeInfosFromLayouts,\r\n  _BufferLayoutHelper\r\n} from '@luma.gl/core';\r\n\r\nimport type {ShaderModule, PlatformInfo} from '@luma.gl/shadertools';\r\nimport {ShaderAssembler, getShaderLayoutFromWGSL} from '@luma.gl/shadertools';\r\n\r\nimport type {Geometry} from '../geometry/geometry';\r\nimport {GPUGeometry, makeGPUGeometry} from '../geometry/gpu-geometry';\r\nimport {PipelineFactory} from '../factories/pipeline-factory';\r\nimport {ShaderFactory} from '../factories/shader-factory';\r\nimport {getDebugTableForShaderLayout} from '../debug/debug-shader-layout';\r\nimport {debugFramebuffer} from '../debug/debug-framebuffer';\r\nimport {deepEqual} from '../utils/deep-equal';\r\nimport {uid} from '../utils/uid';\r\nimport {ShaderInputs} from '../shader-inputs';\r\n// import type {AsyncTextureProps} from '../async-texture/async-texture';\r\nimport {AsyncTexture} from '../async-texture/async-texture';\r\n\r\nimport {splitUniformsAndBindings} from './split-uniforms-and-bindings';\r\n\r\nconst LOG_DRAW_PRIORITY = 2;\r\nconst LOG_DRAW_TIMEOUT = 10000;\r\n\r\nexport type ModelProps = Omit<RenderPipelineProps, 'vs' | 'fs' | 'bindings'> & {\r\n  source?: string;\r\n  vs: string | null;\r\n  fs: string | null;\r\n\r\n  /** shadertool shader modules (added to shader code) */\r\n  modules?: ShaderModule[];\r\n  /** Shadertool module defines (configures shader code)*/\r\n  defines?: Record<string, string | number | boolean>;\r\n  // TODO - injections, hooks etc?\r\n\r\n  /** Shader inputs, used to generated uniform buffers and bindings */\r\n  shaderInputs?: ShaderInputs;\r\n  /** Bindings */\r\n  bindings?: Record<string, Binding | AsyncTexture>;\r\n  /** Parameters that are built into the pipeline */\r\n  parameters?: RenderPipelineParameters;\r\n\r\n  /** Geometry */\r\n  geometry?: GPUGeometry | Geometry | null;\r\n\r\n  /** @deprecated Use instanced rendering? Will be auto-detected in 9.1 */\r\n  isInstanced?: boolean;\r\n  /** instance count */\r\n  instanceCount?: number;\r\n  /** Vertex count */\r\n  vertexCount?: number;\r\n\r\n  indexBuffer?: Buffer | null;\r\n  /** @note this is really a map of buffers, not a map of attributes */\r\n  attributes?: Record<string, Buffer>;\r\n  /**   */\r\n  constantAttributes?: Record<string, TypedArray>;\r\n\r\n  /** Some applications intentionally supply unused attributes and bindings, and want to disable warnings */\r\n  disableWarnings?: boolean;\r\n\r\n  /** @internal For use with {@link TransformFeedback}, WebGL only. */\r\n  varyings?: string[];\r\n\r\n  transformFeedback?: TransformFeedback;\r\n\r\n  /** Mapped uniforms for shadertool modules */\r\n  moduleSettings?: Record<string, Record<string, any>>;\r\n\r\n  /** Show shader source in browser? */\r\n  debugShaders?: 'never' | 'errors' | 'warnings' | 'always';\r\n\r\n  /** Factory used to create a {@link RenderPipeline}. Defaults to {@link Device} default factory. */\r\n  pipelineFactory?: PipelineFactory;\r\n  /** Factory used to create a {@link Shader}. Defaults to {@link Device} default factory. */\r\n  shaderFactory?: ShaderFactory;\r\n  /** Shader assembler. Defaults to the ShaderAssembler.getShaderAssembler() */\r\n  shaderAssembler?: ShaderAssembler;\r\n};\r\n\r\n/**\r\n * v9 Model API\r\n * A model\r\n * - automatically reuses pipelines (programs) when possible\r\n * - automatically rebuilds pipelines if necessary to accommodate changed settings\r\n * shadertools integration\r\n * - accepts modules and performs shader transpilation\r\n */\r\nexport class Model {\r\n  static defaultProps: Required<ModelProps> = {\r\n    ...RenderPipeline.defaultProps,\r\n    source: undefined!,\r\n    vs: null,\r\n    fs: null,\r\n    id: 'unnamed',\r\n    handle: undefined,\r\n    userData: {},\r\n    defines: {},\r\n    modules: [],\r\n    moduleSettings: undefined!,\r\n    geometry: null,\r\n    indexBuffer: null,\r\n    attributes: {},\r\n    constantAttributes: {},\r\n    varyings: [],\r\n\r\n    isInstanced: undefined!,\r\n    instanceCount: 0,\r\n    vertexCount: 0,\r\n\r\n    shaderInputs: undefined!,\r\n    pipelineFactory: undefined!,\r\n    shaderFactory: undefined!,\r\n    transformFeedback: undefined!,\r\n    shaderAssembler: ShaderAssembler.getDefaultShaderAssembler(),\r\n\r\n    debugShaders: undefined!,\r\n    disableWarnings: undefined!\r\n  };\r\n\r\n  readonly device: Device;\r\n  readonly id: string;\r\n  // @ts-expect-error assigned in function called from constructor\r\n  readonly source: string;\r\n  // @ts-expect-error assigned in function called from constructor\r\n  readonly vs: string;\r\n  // @ts-expect-error assigned in function called from constructor\r\n  readonly fs: string;\r\n  readonly pipelineFactory: PipelineFactory;\r\n  readonly shaderFactory: ShaderFactory;\r\n  userData: {[key: string]: any} = {};\r\n\r\n  // Fixed properties (change can trigger pipeline rebuild)\r\n\r\n  /** The render pipeline GPU parameters, depth testing etc */\r\n  parameters: RenderPipelineParameters;\r\n\r\n  /** The primitive topology */\r\n  topology: PrimitiveTopology;\r\n  /** Buffer layout */\r\n  bufferLayout: BufferLayout[];\r\n\r\n  // Dynamic properties\r\n\r\n  /** Use instanced rendering */\r\n  isInstanced: boolean | undefined = undefined;\r\n  /** instance count. `undefined` means not instanced */\r\n  instanceCount: number = 0;\r\n  /** Vertex count */\r\n  vertexCount: number;\r\n\r\n  /** Index buffer */\r\n  indexBuffer: Buffer | null = null;\r\n  /** Buffer-valued attributes */\r\n  bufferAttributes: Record<string, Buffer> = {};\r\n  /** Constant-valued attributes */\r\n  constantAttributes: Record<string, TypedArray> = {};\r\n  /** Bindings (textures, samplers, uniform buffers) */\r\n  bindings: Record<string, Binding | AsyncTexture> = {};\r\n  /** Sets uniforms @deprecated Use uniform buffers and setBindings() for portability*/\r\n  uniforms: Record<string, UniformValue> = {};\r\n\r\n  /**\r\n   * VertexArray\r\n   * @note not implemented: if bufferLayout is updated, vertex array has to be rebuilt!\r\n   * @todo - allow application to define multiple vertex arrays?\r\n   * */\r\n  vertexArray: VertexArray;\r\n\r\n  /** TransformFeedback, WebGL 2 only. */\r\n  transformFeedback: TransformFeedback | null = null;\r\n\r\n  /** The underlying GPU \"program\". @note May be recreated if parameters change */\r\n  pipeline: RenderPipeline;\r\n\r\n  /** ShaderInputs instance */\r\n  // @ts-expect-error Assigned in function called by constructor\r\n  shaderInputs: ShaderInputs;\r\n  // @ts-expect-error Assigned in function called by constructor\r\n  _uniformStore: UniformStore;\r\n\r\n  _attributeInfos: Record<string, AttributeInfo> = {};\r\n  _gpuGeometry: GPUGeometry | null = null;\r\n  private _getModuleUniforms: (props?: Record<string, Record<string, any>>) => Record<string, any>;\r\n  private props: Required<ModelProps>;\r\n\r\n  _pipelineNeedsUpdate: string | false = 'newly created';\r\n  private _needsRedraw: string | false = 'initializing';\r\n  private _destroyed = false;\r\n\r\n  /** \"Time\" of last draw. Monotonically increasing timestamp */\r\n  _lastDrawTimestamp: number = -1;\r\n\r\n  get [Symbol.toStringTag](): string {\r\n    return 'Model';\r\n  }\r\n\r\n  toString(): string {\r\n    return `Model(${this.id})`;\r\n  }\r\n\r\n  constructor(device: Device, props: ModelProps) {\r\n    this.props = {...Model.defaultProps, ...props};\r\n    props = this.props;\r\n    this.id = props.id || uid('model');\r\n    this.device = device;\r\n\r\n    Object.assign(this.userData, props.userData);\r\n\r\n    // Setup shader module inputs\r\n    const moduleMap = Object.fromEntries(\r\n      this.props.modules?.map(module => [module.name, module]) || []\r\n    );\r\n\r\n    const shaderInputs =\r\n      props.shaderInputs ||\r\n      new ShaderInputs(moduleMap, {disableWarnings: this.props.disableWarnings});\r\n    // @ts-ignore\r\n    this.setShaderInputs(shaderInputs);\r\n\r\n    // Setup shader assembler\r\n    const platformInfo = getPlatformInfo(device);\r\n\r\n    // Extract modules from shader inputs if not supplied\r\n    const modules =\r\n      // @ts-ignore shaderInputs is assigned in setShaderInputs above.\r\n      (this.props.modules?.length > 0 ? this.props.modules : this.shaderInputs?.getModules()) || [];\r\n\r\n    const isWebGPU = this.device.type === 'webgpu';\r\n\r\n    // WebGPU\r\n    // TODO - hack to support unified WGSL shader\r\n    // TODO - this is wrong, compile a single shader\r\n    if (isWebGPU && this.props.source) {\r\n      // WGSL\r\n      this.props.shaderLayout ||= getShaderLayoutFromWGSL(this.props.source);\r\n      const {source, getUniforms} = this.props.shaderAssembler.assembleWGSLShader({\r\n        platformInfo,\r\n        ...this.props,\r\n        modules\r\n      });\r\n      this.source = source;\r\n      // @ts-expect-error\r\n      this._getModuleUniforms = getUniforms;\r\n    } else {\r\n      // GLSL\r\n      const {vs, fs, getUniforms} = this.props.shaderAssembler.assembleGLSLShaderPair({\r\n        platformInfo,\r\n        ...this.props,\r\n        modules\r\n      });\r\n\r\n      this.vs = vs;\r\n      this.fs = fs;\r\n      // @ts-expect-error\r\n      this._getModuleUniforms = getUniforms;\r\n    }\r\n\r\n    this.vertexCount = this.props.vertexCount;\r\n    this.instanceCount = this.props.instanceCount;\r\n\r\n    this.topology = this.props.topology;\r\n    this.bufferLayout = this.props.bufferLayout;\r\n    this.parameters = this.props.parameters;\r\n\r\n    // Geometry, if provided, sets topology and vertex cound\r\n    if (props.geometry) {\r\n      this.setGeometry(props.geometry);\r\n    }\r\n\r\n    this.pipelineFactory =\r\n      props.pipelineFactory || PipelineFactory.getDefaultPipelineFactory(this.device);\r\n    this.shaderFactory = props.shaderFactory || ShaderFactory.getDefaultShaderFactory(this.device);\r\n\r\n    // Create the pipeline\r\n    // @note order is important\r\n    this.pipeline = this._updatePipeline();\r\n\r\n    this.vertexArray = device.createVertexArray({\r\n      renderPipeline: this.pipeline\r\n    });\r\n\r\n    // Now we can apply geometry attributes\r\n    if (this._gpuGeometry) {\r\n      this._setGeometryAttributes(this._gpuGeometry);\r\n    }\r\n\r\n    // Apply any dynamic settings that will not trigger pipeline change\r\n    if ('isInstanced' in props) {\r\n      this.isInstanced = props.isInstanced;\r\n    }\r\n\r\n    if (props.instanceCount) {\r\n      this.setInstanceCount(props.instanceCount);\r\n    }\r\n    if (props.vertexCount) {\r\n      this.setVertexCount(props.vertexCount);\r\n    }\r\n    if (props.indexBuffer) {\r\n      this.setIndexBuffer(props.indexBuffer);\r\n    }\r\n    if (props.attributes) {\r\n      this.setAttributes(props.attributes);\r\n    }\r\n    if (props.constantAttributes) {\r\n      this.setConstantAttributes(props.constantAttributes);\r\n    }\r\n    if (props.bindings) {\r\n      this.setBindings(props.bindings);\r\n    }\r\n    if (props.uniforms) {\r\n      this.setUniformsWebGL(props.uniforms);\r\n    }\r\n    if (props.moduleSettings) {\r\n      // log.warn('Model.props.moduleSettings is deprecated. Use Model.shaderInputs.setProps()')();\r\n      this.updateModuleSettingsWebGL(props.moduleSettings);\r\n    }\r\n    if (props.transformFeedback) {\r\n      this.transformFeedback = props.transformFeedback;\r\n    }\r\n\r\n    // Catch any access to non-standard props\r\n    Object.seal(this);\r\n  }\r\n\r\n  destroy(): void {\r\n    if (this._destroyed) return;\r\n    this.pipelineFactory.release(this.pipeline);\r\n    this.shaderFactory.release(this.pipeline.vs);\r\n    if (this.pipeline.fs) {\r\n      this.shaderFactory.release(this.pipeline.fs);\r\n    }\r\n    this._uniformStore.destroy();\r\n    // TODO - mark resource as managed and destroyIfManaged() ?\r\n    this._gpuGeometry?.destroy();\r\n    this._destroyed = true;\r\n  }\r\n\r\n  // Draw call\r\n\r\n  /** Query redraw status. Clears the status. */\r\n  needsRedraw(): false | string {\r\n    // Catch any writes to already bound resources\r\n    if (this._getBindingsUpdateTimestamp() > this._lastDrawTimestamp) {\r\n      this.setNeedsRedraw('contents of bound textures or buffers updated');\r\n    }\r\n    const needsRedraw = this._needsRedraw;\r\n    this._needsRedraw = false;\r\n    return needsRedraw;\r\n  }\r\n\r\n  /** Mark the model as needing a redraw */\r\n  setNeedsRedraw(reason: string): void {\r\n    this._needsRedraw ||= reason;\r\n  }\r\n\r\n  predraw(): void {\r\n    // Update uniform buffers if needed\r\n    this.updateShaderInputs();\r\n    // Check if the pipeline is invalidated\r\n    this.pipeline = this._updatePipeline();\r\n  }\r\n\r\n  draw(renderPass: RenderPass): boolean {\r\n    const loadingBinding = this._areBindingsLoading();\r\n    if (loadingBinding) {\r\n      log.info(LOG_DRAW_PRIORITY, `>>> DRAWING ABORTED ${this.id}: ${loadingBinding} not loaded`)();\r\n      return false;\r\n    }\r\n\r\n    try {\r\n      renderPass.pushDebugGroup(`${this}.predraw(${renderPass})`);\r\n      this.predraw();\r\n    } finally {\r\n      renderPass.popDebugGroup();\r\n    }\r\n\r\n    let drawSuccess: boolean;\r\n    try {\r\n      renderPass.pushDebugGroup(`${this}.draw(${renderPass})`);\r\n      this._logDrawCallStart();\r\n\r\n      // Update the pipeline if invalidated\r\n      // TODO - inside RenderPass is likely the worst place to do this from performance perspective.\r\n      // Application can call Model.predraw() to avoid this.\r\n      this.pipeline = this._updatePipeline();\r\n\r\n      // Set pipeline state, we may be sharing a pipeline so we need to set all state on every draw\r\n      // Any caching needs to be done inside the pipeline functions\r\n      // TODO this is a busy initialized check for all bindings every frame\r\n\r\n      const syncBindings = this._getBindings();\r\n      this.pipeline.setBindings(syncBindings, {\r\n        disableWarnings: this.props.disableWarnings\r\n      });\r\n      if (!isObjectEmpty(this.uniforms)) {\r\n        this.pipeline.setUniformsWebGL(this.uniforms);\r\n      }\r\n\r\n      const {indexBuffer} = this.vertexArray;\r\n      const indexCount = indexBuffer\r\n        ? indexBuffer.byteLength / (indexBuffer.indexType === 'uint32' ? 4 : 2)\r\n        : undefined;\r\n\r\n      drawSuccess = this.pipeline.draw({\r\n        renderPass,\r\n        vertexArray: this.vertexArray,\r\n        isInstanced: this.isInstanced,\r\n        vertexCount: this.vertexCount,\r\n        instanceCount: this.instanceCount,\r\n        indexCount,\r\n        transformFeedback: this.transformFeedback || undefined,\r\n        // WebGL shares underlying cached pipelines even for models that have different parameters and topology,\r\n        // so we must provide our unique parameters to each draw\r\n        // (In WebGPU most parameters are encoded in the pipeline and cannot be changed per draw call)\r\n        parameters: this.parameters,\r\n        topology: this.topology\r\n      });\r\n    } finally {\r\n      renderPass.popDebugGroup();\r\n      this._logDrawCallEnd();\r\n    }\r\n    this._logFramebuffer(renderPass);\r\n\r\n    // Update needsRedraw flag\r\n    if (drawSuccess) {\r\n      this._lastDrawTimestamp = this.device.timestamp;\r\n      this._needsRedraw = false;\r\n    } else {\r\n      this._needsRedraw = 'waiting for resource initialization';\r\n    }\r\n    return drawSuccess;\r\n  }\r\n\r\n  // Update fixed fields (can trigger pipeline rebuild)\r\n\r\n  /**\r\n   * Updates the optional geometry\r\n   * Geometry, set topology and bufferLayout\r\n   * @note Can trigger a pipeline rebuild / pipeline cache fetch on WebGPU\r\n   */\r\n  setGeometry(geometry: GPUGeometry | Geometry | null): void {\r\n    this._gpuGeometry?.destroy();\r\n    const gpuGeometry = geometry && makeGPUGeometry(this.device, geometry);\r\n    if (gpuGeometry) {\r\n      this.setTopology(gpuGeometry.topology || 'triangle-list');\r\n      const bufferLayoutHelper = new _BufferLayoutHelper(this.bufferLayout);\r\n      this.bufferLayout = bufferLayoutHelper.mergeBufferLayouts(\r\n        gpuGeometry.bufferLayout,\r\n        this.bufferLayout\r\n      );\r\n      if (this.vertexArray) {\r\n        this._setGeometryAttributes(gpuGeometry);\r\n      }\r\n    }\r\n    this._gpuGeometry = gpuGeometry;\r\n  }\r\n\r\n  /**\r\n   * Updates the primitive topology ('triangle-list', 'triangle-strip' etc).\r\n   * @note Triggers a pipeline rebuild / pipeline cache fetch on WebGPU\r\n   */\r\n  setTopology(topology: PrimitiveTopology): void {\r\n    if (topology !== this.topology) {\r\n      this.topology = topology;\r\n      this._setPipelineNeedsUpdate('topology');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the buffer layout.\r\n   * @note Triggers a pipeline rebuild / pipeline cache fetch\r\n   */\r\n  setBufferLayout(bufferLayout: BufferLayout[]): void {\r\n    const bufferLayoutHelper = new _BufferLayoutHelper(this.bufferLayout);\r\n    this.bufferLayout = this._gpuGeometry\r\n      ? bufferLayoutHelper.mergeBufferLayouts(bufferLayout, this._gpuGeometry.bufferLayout)\r\n      : bufferLayout;\r\n    this._setPipelineNeedsUpdate('bufferLayout');\r\n\r\n    // Recreate the pipeline\r\n    this.pipeline = this._updatePipeline();\r\n\r\n    // vertex array needs to be updated if we update buffer layout,\r\n    // but not if we update parameters\r\n    this.vertexArray = this.device.createVertexArray({\r\n      renderPipeline: this.pipeline\r\n    });\r\n\r\n    // Reapply geometry attributes to the new vertex array\r\n    if (this._gpuGeometry) {\r\n      this._setGeometryAttributes(this._gpuGeometry);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set GPU parameters.\r\n   * @note Can trigger a pipeline rebuild / pipeline cache fetch.\r\n   * @param parameters\r\n   */\r\n  setParameters(parameters: RenderPipelineParameters) {\r\n    if (!deepEqual(parameters, this.parameters, 2)) {\r\n      this.parameters = parameters;\r\n      this._setPipelineNeedsUpdate('parameters');\r\n    }\r\n  }\r\n\r\n  // Update dynamic fields\r\n\r\n  /**\r\n   * Updates the instance count (used in draw calls)\r\n   * @note Any attributes with stepMode=instance need to be at least this big\r\n   */\r\n  setInstanceCount(instanceCount: number): void {\r\n    this.instanceCount = instanceCount;\r\n    // luma.gl examples don't set props.isInstanced and rely on auto-detection\r\n    // but deck.gl sets instanceCount even for models that are not instanced.\r\n    if (this.isInstanced === undefined && instanceCount > 0) {\r\n      this.isInstanced = true;\r\n    }\r\n    this.setNeedsRedraw('instanceCount');\r\n  }\r\n\r\n  /**\r\n   * Updates the vertex count (used in draw calls)\r\n   * @note Any attributes with stepMode=vertex need to be at least this big\r\n   */\r\n  setVertexCount(vertexCount: number): void {\r\n    this.vertexCount = vertexCount;\r\n    this.setNeedsRedraw('vertexCount');\r\n  }\r\n\r\n  /** Set the shader inputs */\r\n  setShaderInputs(shaderInputs: ShaderInputs): void {\r\n    this.shaderInputs = shaderInputs;\r\n    this._uniformStore = new UniformStore(this.shaderInputs.modules);\r\n    // Create uniform buffer bindings for all modules that actually have uniforms\r\n    for (const [moduleName, module] of Object.entries(this.shaderInputs.modules)) {\r\n      if (shaderModuleHasUniforms(module)) {\r\n        const uniformBuffer = this._uniformStore.getManagedUniformBuffer(this.device, moduleName);\r\n        this.bindings[`${moduleName}Uniforms`] = uniformBuffer;\r\n      }\r\n    }\r\n    this.setNeedsRedraw('shaderInputs');\r\n  }\r\n\r\n  /** Update uniform buffers from the model's shader inputs */\r\n  updateShaderInputs(): void {\r\n    this._uniformStore.setUniforms(this.shaderInputs.getUniformValues());\r\n    this.setBindings(this.shaderInputs.getBindingValues());\r\n    // TODO - this is already tracked through buffer/texture update times?\r\n    this.setNeedsRedraw('shaderInputs');\r\n  }\r\n\r\n  /**\r\n   * Sets bindings (textures, samplers, uniform buffers)\r\n   */\r\n  setBindings(bindings: Record<string, Binding | AsyncTexture>): void {\r\n    Object.assign(this.bindings, bindings);\r\n    this.setNeedsRedraw('bindings');\r\n  }\r\n\r\n  /**\r\n   * Updates optional transform feedback. WebGL only.\r\n   */\r\n  setTransformFeedback(transformFeedback: TransformFeedback | null): void {\r\n    this.transformFeedback = transformFeedback;\r\n    this.setNeedsRedraw('transformFeedback');\r\n  }\r\n\r\n  /**\r\n   * Sets the index buffer\r\n   * @todo - how to unset it if we change geometry?\r\n   */\r\n  setIndexBuffer(indexBuffer: Buffer | null): void {\r\n    this.vertexArray.setIndexBuffer(indexBuffer);\r\n    this.setNeedsRedraw('indexBuffer');\r\n  }\r\n\r\n  /**\r\n   * Sets attributes (buffers)\r\n   * @note Overrides any attributes previously set with the same name\r\n   */\r\n  setAttributes(buffers: Record<string, Buffer>, options?: {disableWarnings?: boolean}): void {\r\n    const disableWarnings = options?.disableWarnings ?? this.props.disableWarnings;\r\n    if (buffers.indices) {\r\n      log.warn(\r\n        `Model:${this.id} setAttributes() - indexBuffer should be set using setIndexBuffer()`\r\n      )();\r\n    }\r\n\r\n    const bufferLayoutHelper = new _BufferLayoutHelper(this.bufferLayout);\r\n\r\n    // Check if all buffers have a layout\r\n    for (const [bufferName, buffer] of Object.entries(buffers)) {\r\n      const bufferLayout = bufferLayoutHelper.getBufferLayout(bufferName);\r\n      if (!bufferLayout) {\r\n        if (!disableWarnings) {\r\n          log.warn(`Model(${this.id}): Missing layout for buffer \"${bufferName}\".`)();\r\n        }\r\n        continue; // eslint-disable-line no-continue\r\n      }\r\n\r\n      // For an interleaved attribute we may need to set multiple attributes\r\n      const attributeNames = bufferLayoutHelper.getAttributeNamesForBuffer(bufferLayout);\r\n      let set = false;\r\n      for (const attributeName of attributeNames) {\r\n        const attributeInfo = this._attributeInfos[attributeName];\r\n        if (attributeInfo) {\r\n          this.vertexArray.setBuffer(attributeInfo.location, buffer);\r\n          set = true;\r\n        }\r\n      }\r\n      if (!set && !disableWarnings) {\r\n        log.warn(\r\n          `Model(${this.id}): Ignoring buffer \"${buffer.id}\" for unknown attribute \"${bufferName}\"`\r\n        )();\r\n      }\r\n    }\r\n    this.setNeedsRedraw('attributes');\r\n  }\r\n\r\n  /**\r\n   * Sets constant attributes\r\n   * @note Overrides any attributes previously set with the same name\r\n   * Constant attributes are only supported in WebGL, not in WebGPU\r\n   * Any attribute that is disabled in the current vertex array object\r\n   * is read from the context's global constant value for that attribute location.\r\n   * @param constantAttributes\r\n   */\r\n  setConstantAttributes(\r\n    attributes: Record<string, TypedArray>,\r\n    options?: {disableWarnings?: boolean}\r\n  ): void {\r\n    for (const [attributeName, value] of Object.entries(attributes)) {\r\n      const attributeInfo = this._attributeInfos[attributeName];\r\n      if (attributeInfo) {\r\n        this.vertexArray.setConstantWebGL(attributeInfo.location, value);\r\n      } else if (!(options?.disableWarnings ?? this.props.disableWarnings)) {\r\n        log.warn(\r\n          `Model \"${this.id}: Ignoring constant supplied for unknown attribute \"${attributeName}\"`\r\n        )();\r\n      }\r\n    }\r\n    this.setNeedsRedraw('constants');\r\n  }\r\n\r\n  // DEPRECATED METHODS\r\n\r\n  /**\r\n   * Sets individual uniforms\r\n   * @deprecated WebGL only, use uniform buffers for portability\r\n   * @param uniforms\r\n   */\r\n  setUniforms(uniforms: Record<string, UniformValue>): void {\r\n    this.setUniformsWebGL(uniforms);\r\n  }\r\n\r\n  /**\r\n   * Sets individual uniforms\r\n   * @deprecated WebGL only, use uniform buffers for portability\r\n   * @param uniforms\r\n   */\r\n  setUniformsWebGL(uniforms: Record<string, UniformValue>): void {\r\n    if (!isObjectEmpty(uniforms)) {\r\n      this.pipeline.setUniformsWebGL(uniforms);\r\n      Object.assign(this.uniforms, uniforms);\r\n    }\r\n    this.setNeedsRedraw('uniforms');\r\n  }\r\n\r\n  /**\r\n   * @deprecated Updates shader module settings (which results in uniforms being set)\r\n   */\r\n  updateModuleSettingsWebGL(props: Record<string, any>): void {\r\n    // log.warn('Model.updateModuleSettings is deprecated. Use Model.shaderInputs.setProps()')();\r\n    const {bindings, uniforms} = splitUniformsAndBindings(this._getModuleUniforms(props));\r\n    Object.assign(this.bindings, bindings);\r\n    Object.assign(this.uniforms, uniforms);\r\n    this.setNeedsRedraw('moduleSettings');\r\n  }\r\n\r\n  // Internal methods\r\n\r\n  /** Check that bindings are loaded. Returns id of first binding that is still loading. */\r\n  _areBindingsLoading(): string | false {\r\n    for (const binding of Object.values(this.bindings)) {\r\n      if (binding instanceof AsyncTexture && !binding.isReady) {\r\n        return binding.id;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /** Extracts texture view from loaded async textures. Returns null if any textures have not yet been loaded. */\r\n  _getBindings(): Record<string, Binding> {\r\n    const validBindings: Record<string, Binding> = {};\r\n\r\n    for (const [name, binding] of Object.entries(this.bindings)) {\r\n      if (binding instanceof AsyncTexture) {\r\n        // Check that async textures are loaded\r\n        if (binding.isReady) {\r\n          validBindings[name] = binding.texture;\r\n        }\r\n      } else {\r\n        validBindings[name] = binding;\r\n      }\r\n    }\r\n\r\n    return validBindings;\r\n  }\r\n\r\n  /** Get the timestamp of the latest updated bound GPU memory resource (buffer/texture). */\r\n  _getBindingsUpdateTimestamp(): number {\r\n    let timestamp = 0;\r\n    for (const binding of Object.values(this.bindings)) {\r\n      if (binding instanceof TextureView) {\r\n        timestamp = Math.max(timestamp, binding.texture.updateTimestamp);\r\n      } else if (binding instanceof Buffer || binding instanceof Texture) {\r\n        timestamp = Math.max(timestamp, binding.updateTimestamp);\r\n      } else if (binding instanceof AsyncTexture) {\r\n        timestamp = binding.texture\r\n          ? Math.max(timestamp, binding.texture.updateTimestamp)\r\n          : // The texture will become available in the future\r\n            Infinity;\r\n      } else if (!(binding instanceof Sampler)) {\r\n        timestamp = Math.max(timestamp, binding.buffer.updateTimestamp);\r\n      }\r\n    }\r\n    return timestamp;\r\n  }\r\n\r\n  /**\r\n   * Updates the optional geometry attributes\r\n   * Geometry, sets several attributes, indexBuffer, and also vertex count\r\n   * @note Can trigger a pipeline rebuild / pipeline cache fetch on WebGPU\r\n   */\r\n  _setGeometryAttributes(gpuGeometry: GPUGeometry): void {\r\n    // Filter geometry attribute so that we don't issue warnings for unused attributes\r\n    const attributes = {...gpuGeometry.attributes};\r\n    for (const [attributeName] of Object.entries(attributes)) {\r\n      if (\r\n        !this.pipeline.shaderLayout.attributes.find(layout => layout.name === attributeName) &&\r\n        attributeName !== 'positions'\r\n      ) {\r\n        delete attributes[attributeName];\r\n      }\r\n    }\r\n\r\n    // TODO - delete previous geometry?\r\n    this.vertexCount = gpuGeometry.vertexCount;\r\n    this.setIndexBuffer(gpuGeometry.indices || null);\r\n    this.setAttributes(gpuGeometry.attributes, {disableWarnings: true});\r\n    this.setAttributes(attributes, {disableWarnings: this.props.disableWarnings});\r\n\r\n    this.setNeedsRedraw('geometry attributes');\r\n  }\r\n\r\n  /** Mark pipeline as needing update */\r\n  _setPipelineNeedsUpdate(reason: string): void {\r\n    this._pipelineNeedsUpdate ||= reason;\r\n    this.setNeedsRedraw(reason);\r\n  }\r\n\r\n  /** Update pipeline if needed */\r\n  _updatePipeline(): RenderPipeline {\r\n    if (this._pipelineNeedsUpdate) {\r\n      let prevShaderVs: Shader | null = null;\r\n      let prevShaderFs: Shader | null = null;\r\n      if (this.pipeline) {\r\n        log.log(\r\n          1,\r\n          `Model ${this.id}: Recreating pipeline because \"${this._pipelineNeedsUpdate}\".`\r\n        )();\r\n        prevShaderVs = this.pipeline.vs;\r\n        prevShaderFs = this.pipeline.fs;\r\n      }\r\n\r\n      this._pipelineNeedsUpdate = false;\r\n\r\n      const vs = this.shaderFactory.createShader({\r\n        id: `${this.id}-vertex`,\r\n        stage: 'vertex',\r\n        source: this.source || this.vs,\r\n        debugShaders: this.props.debugShaders\r\n      });\r\n\r\n      let fs: Shader | null = null;\r\n      if (this.source) {\r\n        fs = vs;\r\n      } else if (this.fs) {\r\n        fs = this.shaderFactory.createShader({\r\n          id: `${this.id}-fragment`,\r\n          stage: 'fragment',\r\n          source: this.source || this.fs,\r\n          debugShaders: this.props.debugShaders\r\n        });\r\n      }\r\n\r\n      this.pipeline = this.pipelineFactory.createRenderPipeline({\r\n        ...this.props,\r\n        bufferLayout: this.bufferLayout,\r\n        topology: this.topology,\r\n        parameters: this.parameters,\r\n        // TODO - why set bindings here when we reset them every frame?\r\n        // Should we expose a BindGroup abstraction?\r\n        bindings: this._getBindings(),\r\n        vs,\r\n        fs\r\n      });\r\n\r\n      this._attributeInfos = getAttributeInfosFromLayouts(\r\n        this.pipeline.shaderLayout,\r\n        this.bufferLayout\r\n      );\r\n\r\n      if (prevShaderVs) this.shaderFactory.release(prevShaderVs);\r\n      if (prevShaderFs) this.shaderFactory.release(prevShaderFs);\r\n    }\r\n    return this.pipeline;\r\n  }\r\n\r\n  /** Throttle draw call logging */\r\n  _lastLogTime = 0;\r\n  _logOpen = false;\r\n\r\n  _logDrawCallStart(): void {\r\n    // IF level is 4 or higher, log every frame.\r\n    const logDrawTimeout = log.level > 3 ? 0 : LOG_DRAW_TIMEOUT;\r\n    if (log.level < 2 || Date.now() - this._lastLogTime < logDrawTimeout) {\r\n      return;\r\n    }\r\n\r\n    this._lastLogTime = Date.now();\r\n    this._logOpen = true;\r\n\r\n    log.group(LOG_DRAW_PRIORITY, `>>> DRAWING MODEL ${this.id}`, {collapsed: log.level <= 2})();\r\n  }\r\n\r\n  _logDrawCallEnd(): void {\r\n    if (this._logOpen) {\r\n      const shaderLayoutTable = getDebugTableForShaderLayout(this.pipeline.shaderLayout, this.id);\r\n\r\n      // log.table(logLevel, attributeTable)();\r\n      // log.table(logLevel, uniformTable)();\r\n      log.table(LOG_DRAW_PRIORITY, shaderLayoutTable)();\r\n\r\n      const uniformTable = this.shaderInputs.getDebugTable();\r\n      // Add any global uniforms\r\n      for (const [name, value] of Object.entries(this.uniforms)) {\r\n        uniformTable[name] = {value};\r\n      }\r\n      log.table(LOG_DRAW_PRIORITY, uniformTable)();\r\n\r\n      const attributeTable = this._getAttributeDebugTable();\r\n      log.table(LOG_DRAW_PRIORITY, this._attributeInfos)();\r\n      log.table(LOG_DRAW_PRIORITY, attributeTable)();\r\n\r\n      log.groupEnd(LOG_DRAW_PRIORITY)();\r\n      this._logOpen = false;\r\n    }\r\n  }\r\n\r\n  protected _drawCount = 0;\r\n  _logFramebuffer(renderPass: RenderPass): void {\r\n    const debugFramebuffers = this.device.props.debugFramebuffers;\r\n    this._drawCount++;\r\n    // Update first 3 frames and then every 60 frames\r\n    if (!debugFramebuffers) {\r\n      // } || (this._drawCount++ > 3 && this._drawCount % 60)) {\r\n      return;\r\n    }\r\n    // TODO - display framebuffer output in debug window\r\n    const framebuffer = renderPass.props.framebuffer;\r\n    if (framebuffer) {\r\n      debugFramebuffer(framebuffer, {id: framebuffer.id, minimap: true});\r\n      // log.image({logLevel: LOG_DRAW_PRIORITY, message: `${framebuffer.id} %c sup?`, image})();\r\n    }\r\n  }\r\n\r\n  _getAttributeDebugTable(): Record<string, Record<string, unknown>> {\r\n    const table: Record<string, Record<string, unknown>> = {};\r\n    for (const [name, attributeInfo] of Object.entries(this._attributeInfos)) {\r\n      const values = this.vertexArray.attributes[attributeInfo.location];\r\n      table[attributeInfo.location] = {\r\n        name,\r\n        type: attributeInfo.shaderType,\r\n        values: values\r\n          ? this._getBufferOrConstantValues(values, attributeInfo.bufferDataType)\r\n          : 'null'\r\n      };\r\n    }\r\n    if (this.vertexArray.indexBuffer) {\r\n      const {indexBuffer} = this.vertexArray;\r\n      const values =\r\n        indexBuffer.indexType === 'uint32'\r\n          ? new Uint32Array(indexBuffer.debugData)\r\n          : new Uint16Array(indexBuffer.debugData);\r\n      table.indices = {\r\n        name: 'indices',\r\n        type: indexBuffer.indexType,\r\n        values: values.toString()\r\n      };\r\n    }\r\n    return table;\r\n  }\r\n\r\n  // TODO - fix typing of luma data types\r\n  _getBufferOrConstantValues(attribute: Buffer | TypedArray, dataType: any): string {\r\n    const TypedArrayConstructor = getTypedArrayFromDataType(dataType);\r\n    const typedArray =\r\n      attribute instanceof Buffer ? new TypedArrayConstructor(attribute.debugData) : attribute;\r\n    return typedArray.toString();\r\n  }\r\n}\r\n\r\nfunction shaderModuleHasUniforms(module: ShaderModule): boolean {\r\n  return Boolean(module.uniformTypes && !isObjectEmpty(module.uniformTypes));\r\n}\r\n\r\n// HELPERS\r\n\r\n/** Create a shadertools platform info from the Device */\r\nexport function getPlatformInfo(device: Device): PlatformInfo {\r\n  return {\r\n    type: device.type,\r\n    shaderLanguage: device.info.shadingLanguage,\r\n    shaderLanguageVersion: device.info.shadingLanguageVersion as 100 | 300,\r\n    gpu: device.info.gpu,\r\n    // HACK - we pretend that the DeviceFeatures is a Set, it has a similar API\r\n    features: device.features as unknown as Set<DeviceFeature>\r\n  };\r\n}\r\n\r\n/** Returns true if given object is empty, false otherwise. */\r\nfunction isObjectEmpty(obj: object): boolean {\r\n  // @ts-ignore key is unused\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  for (const key in obj) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2906, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2912, "column": 0}, "map": {"version":3,"file":"buffer-transform.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/compute/buffer-transform.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {Device, Buffer, BufferRange, TransformFeedback, RenderPassProps} from '@luma.gl/core';\r\nimport {getPassthroughFS} from '@luma.gl/shadertools';\r\nimport {Model} from '../model/model';\r\nimport type {ModelProps} from '../model/model';\r\n\r\n/**\r\n * Properties for creating a {@link BufferTransform}\r\n * @note Only works under WebGL2.\r\n */\r\nexport type BufferTransformProps = Omit<ModelProps, 'fs'> & {\r\n  /** Optional fragment shader - normally not used in transforms */\r\n  fs?: ModelProps['fs']; // override as optional\r\n  /** A list of named outputs corresponding to shader declarations (varyings in WebGL) */\r\n  outputs?: string[];\r\n  /** @deprecated Use run({outputBuffers}) instead - Map of output buffers that the shaders will write results of computations to */\r\n  feedbackBuffers?: Record<string, Buffer | BufferRange>;\r\n};\r\n\r\n/**\r\n * Manages a WebGL program (pipeline) for buffer→buffer transforms.\r\n * @note Only works under WebGL2.\r\n */\r\nexport class BufferTransform {\r\n  readonly device: Device;\r\n  readonly model: Model;\r\n  readonly transformFeedback: TransformFeedback;\r\n\r\n  static defaultProps: Required<BufferTransformProps> = {\r\n    ...Model.defaultProps,\r\n    outputs: undefined!,\r\n    feedbackBuffers: undefined!\r\n  };\r\n\r\n  static isSupported(device: Device): boolean {\r\n    return device?.info?.type === 'webgl';\r\n  }\r\n\r\n  constructor(device: Device, props: BufferTransformProps = BufferTransform.defaultProps) {\r\n    if (!BufferTransform.isSupported(device)) {\r\n      throw new Error('BufferTransform not yet implemented on WebGPU');\r\n    }\r\n\r\n    this.device = device;\r\n\r\n    this.model = new Model(this.device, {\r\n      id: props.id || 'buffer-transform-model',\r\n      fs: props.fs || getPassthroughFS(),\r\n      topology: props.topology || 'point-list',\r\n      varyings: props.outputs || props.varyings,\r\n      ...props\r\n    });\r\n\r\n    this.transformFeedback = this.device.createTransformFeedback({\r\n      layout: this.model.pipeline.shaderLayout,\r\n      // @ts-expect-error TODO\r\n      buffers: props.feedbackBuffers\r\n    });\r\n\r\n    this.model.setTransformFeedback(this.transformFeedback);\r\n\r\n    Object.seal(this);\r\n  }\r\n\r\n  /** Destroy owned resources. */\r\n  destroy(): void {\r\n    if (this.model) {\r\n      this.model.destroy();\r\n    }\r\n  }\r\n\r\n  /** @deprecated Use {@link destroy}. */\r\n  delete(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  /** Run one transform loop. */\r\n  run(\r\n    options?: RenderPassProps & {\r\n      inputBuffers?: Record<string, Buffer>;\r\n      outputBuffers?: Record<string, Buffer>;\r\n    }\r\n  ): void {\r\n    if (options?.inputBuffers) {\r\n      this.model.setAttributes(options.inputBuffers);\r\n    }\r\n    if (options?.outputBuffers) {\r\n      this.transformFeedback.setBuffers(options.outputBuffers);\r\n    }\r\n    const renderPass = this.device.beginRenderPass(options);\r\n    this.model.draw(renderPass);\r\n    renderPass.end();\r\n  }\r\n\r\n  // DEPRECATED METHODS\r\n\r\n  /** @deprecated App knows what buffers it is passing in - Returns the {@link Buffer} or {@link BufferRange} for given varying name. */\r\n  getBuffer(varyingName: string): Buffer | BufferRange | null {\r\n    return this.transformFeedback.getBuffer(varyingName);\r\n  }\r\n\r\n  /** @deprecated App knows what buffers it is passing in - Reads the {@link Buffer} or {@link BufferRange} for given varying name. */\r\n  readAsync(varyingName: string): Promise<Uint8Array> {\r\n    const result = this.getBuffer(varyingName);\r\n    if (!result) {\r\n      throw new Error('BufferTransform#getBuffer');\r\n    }\r\n    if (result instanceof Buffer) {\r\n      return result.readAsync();\r\n    }\r\n    const {buffer, byteOffset = 0, byteLength = buffer.byteLength} = result;\r\n    return buffer.readAsync(byteOffset, byteLength);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2991, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2997, "column": 0}, "map": {"version":3,"file":"geometry.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/geometry/geometry.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport type {TypedArray} from '@math.gl/core';\r\nimport type {PrimitiveTopology} from '@luma.gl/core';\r\nimport {uid} from '../utils/uid';\r\n\r\nexport type GeometryProps = {\r\n  id?: string;\r\n  /** Determines how vertices are read from the 'vertex' attributes */\r\n  topology: 'point-list' | 'line-list' | 'line-strip' | 'triangle-list' | 'triangle-strip';\r\n  /** Auto calculated from attributes if not provided */\r\n  vertexCount?: number;\r\n  attributes: Record<string, GeometryAttribute | TypedArray>;\r\n  indices?: GeometryAttribute | TypedArray;\r\n};\r\n\r\nexport type GeometryAttributes = {\r\n  POSITION: GeometryAttribute;\r\n  NORMAL: GeometryAttribute;\r\n  TEXCOORD_0: GeometryAttribute;\r\n  COLOR_0?: GeometryAttribute;\r\n  indices?: GeometryAttribute & {size: 1; value: Uint32Array | Uint16Array};\r\n};\r\n\r\nexport type GeometryAttribute = {\r\n  size?: number;\r\n  value: TypedArray;\r\n  [key: string]: any;\r\n};\r\n\r\nexport class Geometry {\r\n  readonly id: string;\r\n  /** Determines how vertices are read from the 'vertex' attributes */\r\n  readonly topology?: PrimitiveTopology;\r\n  readonly vertexCount: number;\r\n  readonly indices?: GeometryAttribute;\r\n  readonly attributes: {\r\n    POSITION: GeometryAttribute;\r\n    NORMAL: GeometryAttribute;\r\n    TEXCOORD_0: GeometryAttribute;\r\n    COLOR_0?: GeometryAttribute;\r\n    [key: string]: GeometryAttribute | undefined;\r\n  };\r\n\r\n  userData: Record<string, unknown> = {};\r\n\r\n  constructor(props: GeometryProps) {\r\n    const {attributes = {}, indices = null, vertexCount = null} = props;\r\n\r\n    this.id = props.id || uid('geometry');\r\n    this.topology = props.topology;\r\n\r\n    if (indices) {\r\n      this.indices = ArrayBuffer.isView(indices) ? {value: indices, size: 1} : indices;\r\n    }\r\n\r\n    // @ts-expect-error\r\n    this.attributes = {};\r\n\r\n    for (const [attributeName, attributeValue] of Object.entries(attributes)) {\r\n      // Wrap \"unwrapped\" arrays and try to autodetect their type\r\n      const attribute: GeometryAttribute = ArrayBuffer.isView(attributeValue)\r\n        ? {value: attributeValue}\r\n        : attributeValue;\r\n\r\n      if (!ArrayBuffer.isView(attribute.value)) {\r\n        throw new Error(\r\n          `${this._print(attributeName)}: must be typed array or object with value as typed array`\r\n        );\r\n      }\r\n\r\n      if ((attributeName === 'POSITION' || attributeName === 'positions') && !attribute.size) {\r\n        attribute.size = 3;\r\n      }\r\n\r\n      // Move indices to separate field\r\n      if (attributeName === 'indices') {\r\n        if (this.indices) {\r\n          throw new Error('Multiple indices detected');\r\n        }\r\n        this.indices = attribute;\r\n      } else {\r\n        this.attributes[attributeName] = attribute;\r\n      }\r\n    }\r\n\r\n    if (this.indices && this.indices.isIndexed !== undefined) {\r\n      this.indices = Object.assign({}, this.indices);\r\n      delete this.indices.isIndexed;\r\n    }\r\n\r\n    this.vertexCount = vertexCount || this._calculateVertexCount(this.attributes, this.indices);\r\n  }\r\n\r\n  getVertexCount(): number {\r\n    return this.vertexCount;\r\n  }\r\n\r\n  /**\r\n   * Return an object with all attributes plus indices added as a field.\r\n   * TODO Geometry types are a mess\r\n   */\r\n  getAttributes(): GeometryAttributes {\r\n    return this.indices ? {indices: this.indices, ...this.attributes} : this.attributes;\r\n  }\r\n\r\n  // PRIVATE\r\n\r\n  _print(attributeName: string): string {\r\n    return `Geometry ${this.id} attribute ${attributeName}`;\r\n  }\r\n\r\n  /**\r\n   * GeometryAttribute\r\n   * value: typed array\r\n   * type: indices, vertices, uvs\r\n   * size: elements per vertex\r\n   * target: WebGL buffer type (string or constant)\r\n   *\r\n   * @param attributes\r\n   * @param indices\r\n   * @returns\r\n   */\r\n  _setAttributes(attributes: Record<string, GeometryAttribute>, indices: any): this {\r\n    return this;\r\n  }\r\n\r\n  _calculateVertexCount(attributes: GeometryAttributes, indices?: GeometryAttribute): number {\r\n    if (indices) {\r\n      return indices.value.length;\r\n    }\r\n    let vertexCount = Infinity;\r\n    for (const attribute of Object.values(attributes)) {\r\n      const {value, size, constant} = attribute;\r\n      if (!constant && value && size !== undefined && size >= 1) {\r\n        vertexCount = Math.min(vertexCount, value.length / size);\r\n      }\r\n    }\r\n\r\n    // assert(Number.isFinite(vertexCount));\r\n    return vertexCount;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3095, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3101, "column": 0}, "map": {"version":3,"file":"texture-transform.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/engine/src/compute/texture-transform.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {Buffer, Device, Framebuffer, RenderPassProps, Sampler, Texture} from '@luma.gl/core';\r\nimport {Model, ModelProps} from '../model/model';\r\nimport {getPassthroughFS} from '@luma.gl/shadertools';\r\n\r\n/**\r\n * Properties for creating a {@link TextureTransform}\r\n */\r\nexport type TextureTransformProps = Omit<ModelProps, 'fs'> & {\r\n  fs?: ModelProps['fs']; // override as optional\r\n  /** @deprecated TODO(donmccurdy): Needed? */\r\n  inject?: Record<string, string>;\r\n  /** @deprecated TODO(donmccurdy): Needed? */\r\n  framebuffer?: Framebuffer;\r\n  /** @deprecated TODO(donmccurdy): Model already handles this? */\r\n  sourceBuffers?: Record<string, Buffer>;\r\n  /** @deprecated TODO(donmccurdy): Model already handles this? */\r\n  sourceTextures?: Record<string, Texture>;\r\n  targetTexture: Texture;\r\n  targetTextureChannels: 1 | 2 | 3 | 4;\r\n  targetTextureVarying: string;\r\n};\r\n\r\ntype TextureBinding = {\r\n  sourceBuffers: Record<string, Buffer>;\r\n  sourceTextures: Record<string, Texture>;\r\n  targetTexture: Texture;\r\n  framebuffer?: Framebuffer;\r\n};\r\n\r\nconst FS_OUTPUT_VARIABLE = 'transform_output';\r\n\r\n/**\r\n * Creates a pipeline for texture→texture transforms.\r\n * @deprecated\r\n */\r\nexport class TextureTransform {\r\n  readonly device: Device;\r\n  readonly model: Model;\r\n  readonly sampler: Sampler;\r\n\r\n  currentIndex = 0;\r\n  samplerTextureMap: Record<string, any> | null = null;\r\n  bindings: TextureBinding[] = []; // each element is an object : {sourceTextures, targetTexture, framebuffer}\r\n  resources: Record<string, any> = {}; // resources to be deleted\r\n\r\n  constructor(device: Device, props: TextureTransformProps) {\r\n    this.device = device;\r\n\r\n    // For precise picking of element IDs.\r\n    this.sampler = device.createSampler({\r\n      addressModeU: 'clamp-to-edge',\r\n      addressModeV: 'clamp-to-edge',\r\n      minFilter: 'nearest',\r\n      magFilter: 'nearest',\r\n      mipmapFilter: 'nearest'\r\n    });\r\n\r\n    this.model = new Model(this.device, {\r\n      id: props.id || 'texture-transform-model',\r\n      fs:\r\n        props.fs ||\r\n        getPassthroughFS({\r\n          input: props.targetTextureVarying,\r\n          inputChannels: props.targetTextureChannels,\r\n          output: FS_OUTPUT_VARIABLE\r\n        }),\r\n      vertexCount: props.vertexCount, // TODO(donmccurdy): Naming?\r\n      ...props\r\n    });\r\n\r\n    this._initialize(props);\r\n    Object.seal(this);\r\n  }\r\n\r\n  // Delete owned resources.\r\n  destroy(): void {\r\n    this.model.destroy();\r\n    for (const binding of this.bindings) {\r\n      binding.framebuffer?.destroy();\r\n    }\r\n  }\r\n\r\n  /** @deprecated Use {@link destroy}. */\r\n  delete(): void {\r\n    this.destroy();\r\n  }\r\n\r\n  run(options?: RenderPassProps): void {\r\n    const {framebuffer} = this.bindings[this.currentIndex];\r\n    const renderPass = this.device.beginRenderPass({framebuffer, ...options});\r\n    this.model.draw(renderPass);\r\n    renderPass.end();\r\n  }\r\n\r\n  getTargetTexture(): Texture {\r\n    const {targetTexture} = this.bindings[this.currentIndex];\r\n    return targetTexture;\r\n  }\r\n\r\n  getFramebuffer(): Framebuffer | undefined {\r\n    const currentResources = this.bindings[this.currentIndex];\r\n    return currentResources.framebuffer;\r\n  }\r\n\r\n  // Private\r\n\r\n  _initialize(props: TextureTransformProps): void {\r\n    this._updateBindings(props);\r\n  }\r\n\r\n  _updateBindings(props: TextureTransformProps) {\r\n    this.bindings[this.currentIndex] = this._updateBinding(this.bindings[this.currentIndex], props);\r\n  }\r\n\r\n  _updateBinding(\r\n    binding: TextureBinding,\r\n    {sourceBuffers, sourceTextures, targetTexture}: TextureTransformProps\r\n  ): TextureBinding {\r\n    if (!binding) {\r\n      binding = {\r\n        sourceBuffers: {},\r\n        sourceTextures: {},\r\n        // @ts-expect-error\r\n        targetTexture: null\r\n      };\r\n    }\r\n    Object.assign(binding.sourceTextures, sourceTextures);\r\n    Object.assign(binding.sourceBuffers, sourceBuffers);\r\n    if (targetTexture) {\r\n      binding.targetTexture = targetTexture;\r\n      const {width, height} = targetTexture;\r\n      // TODO(donmccurdy): When is this called, and is this expected?\r\n      if (binding.framebuffer) {\r\n        binding.framebuffer.destroy();\r\n      }\r\n      binding.framebuffer = this.device.createFramebuffer({\r\n        id: 'transform-framebuffer',\r\n        width,\r\n        height,\r\n        colorAttachments: [targetTexture]\r\n      });\r\n      binding.framebuffer.resize({width, height});\r\n    }\r\n    return binding;\r\n  }\r\n\r\n  // set texture filtering parameters on source textures.\r\n  _setSourceTextureParameters(): void {\r\n    const index = this.currentIndex;\r\n    const {sourceTextures} = this.bindings[index];\r\n    for (const name in sourceTextures) {\r\n      sourceTextures[name].sampler = this.sampler;\r\n    }\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3219, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3225, "column": 0}, "map": {"version":3,"file":"module-injectors.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/module-injectors.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nexport const MODULE_INJECTORS_VS = /* glsl */ `\\\r\n#ifdef MODULE_LOGDEPTH\r\n  logdepth_adjustPosition(gl_Position);\r\n#endif\r\n`;\r\n\r\nexport const MODULE_INJECTORS_FS = /* glsl */ `\\\r\n#ifdef MODULE_MATERIAL\r\n  fragColor = material_filterColor(fragColor);\r\n#endif\r\n\r\n#ifdef MODULE_LIGHTING\r\n  fragColor = lighting_filterColor(fragColor);\r\n#endif\r\n\r\n#ifdef MODULE_FOG\r\n  fragColor = fog_filterColor(fragColor);\r\n#endif\r\n\r\n#ifdef MODULE_PICKING\r\n  fragColor = picking_filterHighlightColor(fragColor);\r\n  fragColor = picking_filterPickingColor(fragColor);\r\n#endif\r\n\r\n#ifdef MODULE_LOGDEPTH\r\n  logdepth_setFragDepth();\r\n#endif\r\n`;\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;;AAE7B,MAAM,mBAAmB,GAAG,QAAA,EAAU,CAAC,CAAA;;;;CAI7C,CAAC;AAEK,MAAM,mBAAmB,GAAG,QAAA,EAAU,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;CAqB7C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3259, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3265, "column": 0}, "map": {"version":3,"file":"assert.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/utils/assert.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\n// Recommendation is to ignore message but current test suite checks agains the\r\n// message so keep it for now.\r\nexport function assert(condition: unknown, message?: string): void {\r\n  if (!condition) {\r\n    throw new Error(message || 'shadertools: assertion failed.');\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAEpC,+EAA+E;AAC/E,8BAA8B;;;;AACxB,SAAU,MAAM,CAAC,SAAkB,EAAE,OAAgB;IACzD,IAAI,CAAC,SAAS,EAAE,CAAC;QACf,MAAM,IAAI,KAAK,CAAC,OAAO,IAAI,gCAAgC,CAAC,CAAC;IAC/D,CAAC;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3284, "column": 0}, "map": {"version":3,"file":"shader-injections.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/shader-assembly/shader-injections.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {MODULE_INJECTORS_VS, MODULE_INJECTORS_FS} from '../../module-injectors';\r\nimport {assert} from '../utils/assert';\r\n\r\n// TODO - experimental\r\nconst MODULE_INJECTORS = {\r\n  vertex: MODULE_INJECTORS_VS,\r\n  fragment: MODULE_INJECTORS_FS\r\n};\r\n\r\nconst REGEX_START_OF_MAIN = /void\\s+main\\s*\\([^)]*\\)\\s*\\{\\n?/; // Beginning of main\r\nconst REGEX_END_OF_MAIN = /}\\n?[^{}]*$/; // End of main, assumes main is last function\r\nconst fragments: string[] = [];\r\n\r\nexport const DECLARATION_INJECT_MARKER = '__LUMA_INJECT_DECLARATIONS__';\r\n\r\n/**\r\n *\r\n */\r\nexport type ShaderInjection = {\r\n  injection: string;\r\n  order: number;\r\n};\r\n\r\n/**\r\n *  ShaderInjections, parsed and split per shader\r\n */\r\nexport type ShaderInjections = {\r\n  vertex: Record<string, ShaderInjection>;\r\n  fragment: Record<string, ShaderInjection>;\r\n};\r\n\r\n/**\r\n *\r\n */\r\nexport function normalizeInjections(\r\n  injections: Record<string, string | ShaderInjection>\r\n): ShaderInjections {\r\n  const result: ShaderInjections = {vertex: {}, fragment: {}};\r\n\r\n  for (const hook in injections) {\r\n    let injection = injections[hook];\r\n    const stage = getHookStage(hook);\r\n    if (typeof injection === 'string') {\r\n      injection = {\r\n        order: 0,\r\n        injection\r\n      };\r\n    }\r\n\r\n    result[stage][hook] = injection;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction getHookStage(hook: string): 'vertex' | 'fragment' {\r\n  const type = hook.slice(0, 2);\r\n  switch (type) {\r\n    case 'vs':\r\n      return 'vertex';\r\n    case 'fs':\r\n      return 'fragment';\r\n    default:\r\n      throw new Error(type);\r\n  }\r\n}\r\n\r\n/**\r\n// A minimal shader injection/templating system.\r\n// RFC: https://github.com/visgl/luma.gl/blob/7.0-release/dev-docs/RFCs/v6.0/shader-injection-rfc.md\r\n * @param source \r\n * @param type \r\n * @param inject \r\n * @param injectStandardStubs \r\n * @returns \r\n */\r\n// eslint-disable-next-line complexity\r\nexport function injectShader(\r\n  source: string,\r\n  stage: 'vertex' | 'fragment',\r\n  inject: Record<string, ShaderInjection[]>,\r\n  injectStandardStubs = false\r\n): string {\r\n  const isVertex = stage === 'vertex';\r\n\r\n  for (const key in inject) {\r\n    const fragmentData = inject[key];\r\n    fragmentData.sort((a: ShaderInjection, b: ShaderInjection): number => a.order - b.order);\r\n    fragments.length = fragmentData.length;\r\n    for (let i = 0, len = fragmentData.length; i < len; ++i) {\r\n      fragments[i] = fragmentData[i].injection;\r\n    }\r\n    const fragmentString = `${fragments.join('\\n')}\\n`;\r\n    switch (key) {\r\n      // declarations are injected before the main function\r\n      case 'vs:#decl':\r\n        if (isVertex) {\r\n          source = source.replace(DECLARATION_INJECT_MARKER, fragmentString);\r\n        }\r\n        break;\r\n      // inject code at the beginning of the main function\r\n      case 'vs:#main-start':\r\n        if (isVertex) {\r\n          source = source.replace(REGEX_START_OF_MAIN, (match: string) => match + fragmentString);\r\n        }\r\n        break;\r\n      // inject code at the end of main function\r\n      case 'vs:#main-end':\r\n        if (isVertex) {\r\n          source = source.replace(REGEX_END_OF_MAIN, (match: string) => fragmentString + match);\r\n        }\r\n        break;\r\n      // declarations are injected before the main function\r\n      case 'fs:#decl':\r\n        if (!isVertex) {\r\n          source = source.replace(DECLARATION_INJECT_MARKER, fragmentString);\r\n        }\r\n        break;\r\n      // inject code at the beginning of the main function\r\n      case 'fs:#main-start':\r\n        if (!isVertex) {\r\n          source = source.replace(REGEX_START_OF_MAIN, (match: string) => match + fragmentString);\r\n        }\r\n        break;\r\n      // inject code at the end of main function\r\n      case 'fs:#main-end':\r\n        if (!isVertex) {\r\n          source = source.replace(REGEX_END_OF_MAIN, (match: string) => fragmentString + match);\r\n        }\r\n        break;\r\n\r\n      default:\r\n        // TODO(Tarek): I think this usage should be deprecated.\r\n\r\n        // inject code after key, leaving key in place\r\n        source = source.replace(key, (match: string) => match + fragmentString);\r\n    }\r\n  }\r\n\r\n  // Remove if it hasn't already been replaced\r\n  source = source.replace(DECLARATION_INJECT_MARKER, '');\r\n\r\n  // Finally, if requested, insert an automatic module injector chunk\r\n  if (injectStandardStubs) {\r\n    source = source.replace(/\\}\\s*$/, (match: string) => match + MODULE_INJECTORS[stage]);\r\n  }\r\n\r\n  return source;\r\n}\r\n\r\n// Takes an array of inject objects and combines them into one\r\nexport function combineInjects(injects: any[]): Record<string, string> {\r\n  const result: Record<string, string> = {};\r\n  assert(Array.isArray(injects) && injects.length > 1);\r\n  injects.forEach(inject => {\r\n    for (const key in inject) {\r\n      result[key] = result[key] ? `${result[key]}\\n${inject[key]}` : inject[key];\r\n    }\r\n  });\r\n  return result;\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3406, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3412, "column": 0}, "map": {"version":3,"file":"prop-types.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/filters/prop-types.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {assert} from '../utils/assert';\r\n\r\n/**\r\n * For use by shader module and shader pass writers to describe the types of the\r\n * properties they expose (properties ultimately map to uniforms).\r\n */\r\nexport type PropType =\r\n  | {\r\n      type?: string;\r\n      value?: unknown;\r\n      max?: number;\r\n      min?: number;\r\n      softMax?: number;\r\n      softMin?: number;\r\n      hint?: string;\r\n      /** @deprecated internal uniform */\r\n      private?: boolean;\r\n    }\r\n  | number;\r\n\r\n/**\r\n * Internal property validators generated by processing the prop types ,\r\n * The `validate()` method can be used to validate the type of properties passed in to\r\n * shader module or shader pass\r\n */\r\nexport type PropValidator = {\r\n  type: string;\r\n  value?: unknown;\r\n  max?: number;\r\n  min?: number;\r\n  private?: boolean;\r\n  validate?(value: unknown, propDef: PropValidator): boolean;\r\n};\r\n\r\n/** Minimal validators for number and array types */\r\nconst DEFAULT_PROP_VALIDATORS: Record<string, PropValidator> = {\r\n  number: {\r\n    type: 'number',\r\n    validate(value: unknown, propType: PropType) {\r\n      return (\r\n        Number.isFinite(value) &&\r\n        typeof propType === 'object' &&\r\n        (propType.max === undefined || (value as number) <= propType.max) &&\r\n        (propType.min === undefined || (value as number) >= propType.min)\r\n      );\r\n    }\r\n  },\r\n  array: {\r\n    type: 'array',\r\n    validate(value: unknown, propType: PropType) {\r\n      return Array.isArray(value) || ArrayBuffer.isView(value);\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Parse a list of property types into property definitions that can be used to validate\r\n * values passed in by applications.\r\n * @param propTypes\r\n * @returns\r\n */\r\nexport function makePropValidators(\r\n  propTypes: Record<string, PropType>\r\n): Record<string, PropValidator> {\r\n  const propValidators: Record<string, PropValidator> = {};\r\n  for (const [name, propType] of Object.entries(propTypes)) {\r\n    propValidators[name] = makePropValidator(propType);\r\n  }\r\n  return propValidators;\r\n}\r\n\r\n/**\r\n * Validate a map of user supplied properties against a map of validators\r\n * Inject default values when user doesn't supply a property\r\n * @param properties\r\n * @param propValidators\r\n * @returns\r\n */\r\nexport function getValidatedProperties(\r\n  properties: Record<string, unknown>,\r\n  propValidators: Record<string, PropValidator>,\r\n  errorMessage: string\r\n): Record<string, unknown> {\r\n  const validated: Record<string, unknown> = {};\r\n\r\n  for (const [key, propsValidator] of Object.entries(propValidators)) {\r\n    if (properties && key in properties && !propsValidator.private) {\r\n      if (propsValidator.validate) {\r\n        assert(\r\n          propsValidator.validate(properties[key], propsValidator),\r\n          `${errorMessage}: invalid ${key}`\r\n        );\r\n      }\r\n      validated[key] = properties[key];\r\n    } else {\r\n      // property not supplied - use default value\r\n      validated[key] = propsValidator.value;\r\n    }\r\n  }\r\n\r\n  // TODO - warn for unused properties that don't match a validator?\r\n\r\n  return validated;\r\n}\r\n\r\n/**\r\n * Creates a property validator for a prop type. Either contains:\r\n * - a valid prop type object ({type, ...})\r\n * - or just a default value, in which case type and name inference is used\r\n */\r\nfunction makePropValidator(propType: PropType): PropValidator {\r\n  let type = getTypeOf(propType);\r\n\r\n  if (type !== 'object') {\r\n    return {value: propType, ...DEFAULT_PROP_VALIDATORS[type], type};\r\n  }\r\n\r\n  // Special handling for objects\r\n  if (typeof propType === 'object') {\r\n    if (!propType) {\r\n      return {type: 'object', value: null};\r\n    }\r\n    if (propType.type !== undefined) {\r\n      return {...propType, ...DEFAULT_PROP_VALIDATORS[propType.type], type: propType.type};\r\n    }\r\n    // If no type and value this object is likely the value\r\n    if (propType.value === undefined) {\r\n      return {type: 'object', value: propType};\r\n    }\r\n\r\n    type = getTypeOf(propType.value);\r\n    return {...propType, ...DEFAULT_PROP_VALIDATORS[type], type};\r\n  }\r\n\r\n  throw new Error('props');\r\n}\r\n\r\n/**\r\n * \"improved\" version of javascript typeof that can distinguish arrays and null values\r\n */\r\nfunction getTypeOf(value: unknown): string {\r\n  if (Array.isArray(value) || ArrayBuffer.isView(value)) {\r\n    return 'array';\r\n  }\r\n  return typeof value;\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3510, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3516, "column": 0}, "map": {"version":3,"file":"shader-module.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/shader-module/shader-module.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {UniformFormat} from '../../types';\r\nimport {\r\n  PropType,\r\n  PropValidator,\r\n  makePropValidators,\r\n  getValidatedProperties\r\n} from '../filters/prop-types';\r\nimport type {UniformTypes, UniformValue} from '../utils/uniform-types';\r\nimport {ShaderInjection, normalizeInjections} from '../shader-assembly/shader-injections';\r\n\r\n// To avoid dependency on core module, do not import `Binding` type.\r\n// The ShaderModule is not concerned with the type of `Binding`,\r\n// it is the repsonsibility of `splitUniformsAndBindings` in\r\n// ShaderInputs to type the result of `getUniforms()`\r\ntype Binding = unknown; // import type {Binding} from '@luma.gl/core';\r\n\r\nexport type UniformInfo = {\r\n  format?: UniformFormat;\r\n} & PropType;\r\n\r\n// Helper types\r\ntype BindingKeys<T> = {[K in keyof T]: T[K] extends UniformValue ? never : K}[keyof T];\r\ntype UniformKeys<T> = {[K in keyof T]: T[K] extends UniformValue ? K : never}[keyof T];\r\nexport type PickBindings<T> = {[K in BindingKeys<Required<T>>]: T[K]};\r\nexport type PickUniforms<T> = {[K in UniformKeys<Required<T>>]: T[K]};\r\n\r\n/**\r\n * A shader module definition object\r\n *\r\n * @note Needs to be initialized with `initializeShaderModules`\r\n * @note `UniformsT` & `BindingsT` are deduced from `PropsT` by default. If\r\n * a custom type for `UniformsT` is used, `BindingsT` should be also be provided.\r\n */\r\nexport type ShaderModule<\r\n  PropsT extends Record<string, any> = Record<string, any>,\r\n  UniformsT extends Record<string, UniformValue> = PickUniforms<PropsT>,\r\n  BindingsT extends Record<string, Binding> = PickBindings<PropsT>\r\n> = {\r\n  /** Used for type inference not for values */\r\n  props?: PropsT;\r\n  /** Used for type inference, not currently used for values */\r\n  uniforms?: UniformsT;\r\n  /** Used for type inference, not currently used for values */\r\n  bindings?: BindingsT;\r\n\r\n  name: string;\r\n\r\n  /** WGSL code */\r\n  source?: string;\r\n  /** GLSL fragment shader code */\r\n  fs?: string;\r\n  /** GLSL vertex shader code */\r\n  vs?: string;\r\n\r\n  /** Uniform shader types @note: Both order and types MUST match uniform block declarations in shader */\r\n  uniformTypes?: Required<UniformTypes<UniformsT>>; // Record<keyof UniformsT, UniformFormat>;\r\n  /** Uniform JS prop types  */\r\n  propTypes?: Record<keyof UniformsT, UniformInfo>;\r\n  /** Default uniform values */\r\n  defaultUniforms?: Required<UniformsT>; // Record<keyof UniformsT, UniformValue>;\r\n\r\n  /** Function that maps props to uniforms & bindings */\r\n  getUniforms?: (\r\n    props: Partial<PropsT>,\r\n    prevUniforms?: UniformsT\r\n  ) => Partial<UniformsT & BindingsT>;\r\n\r\n  defines?: Record<string, string | number>;\r\n  /** Injections */\r\n  inject?: Record<string, string | {injection: string; order: number}>;\r\n  dependencies?: ShaderModule<any, any>[];\r\n  /** Information on deprecated properties */\r\n  deprecations?: ShaderModuleDeprecation[];\r\n\r\n  /** The instance field contains information that is generated at run-time */\r\n  instance?: {\r\n    propValidators?: Record<string, PropValidator>;\r\n    parsedDeprecations: ShaderModuleDeprecation[];\r\n\r\n    normalizedInjections: {\r\n      vertex: Record<string, ShaderInjection>;\r\n      fragment: Record<string, ShaderInjection>;\r\n    };\r\n  };\r\n};\r\n\r\n/** Use to generate deprecations when shader module is used */\r\nexport type ShaderModuleDeprecation = {\r\n  type: string;\r\n  regex?: RegExp;\r\n  new: string;\r\n  old: string;\r\n  deprecated?: boolean;\r\n};\r\n\r\n// SHNDER MODULE API\r\n\r\nexport function initializeShaderModules(modules: ShaderModule[]): void {\r\n  modules.map((module: ShaderModule) => initializeShaderModule(module));\r\n}\r\n\r\nexport function initializeShaderModule(module: ShaderModule): void {\r\n  if (module.instance) {\r\n    return;\r\n  }\r\n\r\n  initializeShaderModules(module.dependencies || []);\r\n\r\n  const {\r\n    propTypes = {},\r\n    deprecations = [],\r\n    // defines = {},\r\n    inject = {}\r\n  } = module;\r\n\r\n  const instance: Required<ShaderModule>['instance'] = {\r\n    normalizedInjections: normalizeInjections(inject),\r\n    parsedDeprecations: parseDeprecationDefinitions(deprecations)\r\n  };\r\n\r\n  if (propTypes) {\r\n    instance.propValidators = makePropValidators(propTypes);\r\n  }\r\n\r\n  module.instance = instance;\r\n\r\n  // TODO(ib) - we need to apply the original prop types to the default uniforms\r\n  let defaultProps: ShaderModule['props'] = {};\r\n  if (propTypes) {\r\n    defaultProps = Object.entries(propTypes).reduce(\r\n      (obj: ShaderModule['props'], [key, propType]) => {\r\n        // @ts-expect-error\r\n        const value = propType?.value;\r\n        if (value) {\r\n          // @ts-expect-error\r\n          obj[key] = value;\r\n        }\r\n        return obj;\r\n      },\r\n      {} as ShaderModule['props']\r\n    );\r\n  }\r\n\r\n  module.defaultUniforms = {...module.defaultUniforms, ...defaultProps} as any;\r\n}\r\n\r\n/** Convert module props to uniforms */\r\nexport function getShaderModuleUniforms<\r\n  ShaderModuleT extends ShaderModule<Record<string, unknown>, Record<string, UniformValue>>\r\n>(\r\n  module: ShaderModuleT,\r\n  props?: ShaderModuleT['props'],\r\n  oldUniforms?: ShaderModuleT['uniforms']\r\n): Record<string, Binding | UniformValue> {\r\n  initializeShaderModule(module);\r\n\r\n  const uniforms = oldUniforms || {...module.defaultUniforms};\r\n  // If module has a getUniforms function, use it\r\n  if (props && module.getUniforms) {\r\n    return module.getUniforms(props, uniforms);\r\n  }\r\n\r\n  // Build uniforms from the uniforms array\r\n  // @ts-expect-error\r\n  return getValidatedProperties(props, module.instance?.propValidators, module.name);\r\n}\r\n\r\n/* TODO this looks like it was unused code\r\n  _defaultGetUniforms(opts: Record<string, any> = {}): Record<string, any> {\r\n    const uniforms: Record<string, any> = {};\r\n    const propTypes = this.uniforms;\r\n\r\n    for (const key in propTypes) {\r\n      const propDef = propTypes[key];\r\n      if (key in opts && !propDef.private) {\r\n        if (propDef.validate) {\r\n          assert(propDef.validate(opts[key], propDef), `${this.name}: invalid ${key}`);\r\n        }\r\n        uniforms[key] = opts[key];\r\n      } else {\r\n        uniforms[key] = propDef.value;\r\n      }\r\n    }\r\n\r\n    return uniforms;\r\n  }\r\n}\r\n*/\r\n// Warn about deprecated uniforms or functions\r\nexport function checkShaderModuleDeprecations(\r\n  shaderModule: ShaderModule,\r\n  shaderSource: string,\r\n  log: any\r\n): void {\r\n  shaderModule.deprecations?.forEach(def => {\r\n    if (def.regex?.test(shaderSource)) {\r\n      if (def.deprecated) {\r\n        log.deprecated(def.old, def.new)();\r\n      } else {\r\n        log.removed(def.old, def.new)();\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\n// HELPERS\r\n\r\nfunction parseDeprecationDefinitions(deprecations: ShaderModuleDeprecation[]) {\r\n  deprecations.forEach(def => {\r\n    switch (def.type) {\r\n      case 'function':\r\n        def.regex = new RegExp(`\\\\b${def.old}\\\\(`);\r\n        break;\r\n      default:\r\n        def.regex = new RegExp(`${def.type} ${def.old};`);\r\n    }\r\n  });\r\n\r\n  return deprecations;\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3608, "column": 0}, "map": {"version":3,"file":"shader-module-dependencies.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/shader-module/shader-module-dependencies.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {ShaderModule, initializeShaderModules} from './shader-module';\r\n\r\n// import type {ShaderModule} from '../shader-module/shader-module';\r\n\r\ntype AbstractModule = {\r\n  name: string;\r\n  dependencies?: AbstractModule[];\r\n};\r\n\r\n/**\r\n * Takes a list of shader module names and returns a new list of\r\n * shader module names that includes all dependencies, sorted so\r\n * that modules that are dependencies of other modules come first.\r\n *\r\n * If the shader glsl code from the returned modules is concatenated\r\n * in the reverse order, it is guaranteed that all functions be resolved and\r\n * that all function and variable definitions come before use.\r\n *\r\n * @param modules - Array of modules (inline modules or module names)\r\n * @return - Array of modules\r\n */\r\nexport function getShaderModuleDependencies<T extends AbstractModule>(modules: T[]): T[] {\r\n  initializeShaderModules(modules);\r\n  const moduleMap: Record<string, T> = {};\r\n  const moduleDepth: Record<string, number> = {};\r\n  getDependencyGraph({modules, level: 0, moduleMap, moduleDepth});\r\n\r\n  // Return a reverse sort so that dependencies come before the modules that use them\r\n  const dependencies = Object.keys(moduleDepth)\r\n    .sort((a, b) => moduleDepth[b] - moduleDepth[a])\r\n    .map(name => moduleMap[name]);\r\n  initializeShaderModules(dependencies);\r\n  return dependencies;\r\n}\r\n\r\n/**\r\n * Recursively checks module dependencies to calculate dependency level of each module.\r\n *\r\n * @param options.modules - Array of modules\r\n * @param options.level - Current level\r\n * @param options.moduleMap -\r\n * @param options.moduleDepth - Current level\r\n * @return - Map of module name to its level\r\n */\r\n// Adds another level of dependencies to the result map\r\nexport function getDependencyGraph<T extends AbstractModule>(options: {\r\n  modules: T[];\r\n  level: number;\r\n  moduleMap: Record<string, T>;\r\n  moduleDepth: Record<string, number>;\r\n}) {\r\n  const {modules, level, moduleMap, moduleDepth} = options;\r\n  if (level >= 5) {\r\n    throw new Error('Possible loop in shader dependency graph');\r\n  }\r\n\r\n  // Update level on all current modules\r\n  for (const module of modules) {\r\n    moduleMap[module.name] = module;\r\n    if (moduleDepth[module.name] === undefined || moduleDepth[module.name] < level) {\r\n      moduleDepth[module.name] = level;\r\n    }\r\n  }\r\n\r\n  // Recurse\r\n  for (const module of modules) {\r\n    if (module.dependencies) {\r\n      getDependencyGraph({modules: module.dependencies, level: level + 1, moduleMap, moduleDepth});\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Takes a list of shader module names and returns a new list of\r\n * shader module names that includes all dependencies, sorted so\r\n * that modules that are dependencies of other modules come first.\r\n *\r\n * If the shader glsl code from the returned modules is concatenated\r\n * in the reverse order, it is guaranteed that all functions be resolved and\r\n * that all function and variable definitions come before use.\r\n *\r\n * @param modules - Array of modules (inline modules or module names)\r\n * @return - Array of modules\r\n */\r\nexport function getShaderDependencies(modules: ShaderModule[]): ShaderModule[] {\r\n  initializeShaderModules(modules);\r\n  const moduleMap: Record<string, ShaderModule> = {};\r\n  const moduleDepth: Record<string, number> = {};\r\n  getDependencyGraph({modules, level: 0, moduleMap, moduleDepth});\r\n\r\n  // Return a reverse sort so that dependencies come before the modules that use them\r\n  modules = Object.keys(moduleDepth)\r\n    .sort((a, b) => moduleDepth[b] - moduleDepth[a])\r\n    .map(name => moduleMap[name]);\r\n  initializeShaderModules(modules);\r\n  return modules;\r\n}\r\n\r\n// DEPRECATED\r\n\r\n/**\r\n * Instantiate shader modules and resolve any dependencies\r\n * @deprecated Use getShaderDpendencies\r\n */\r\nexport function resolveModules(modules: ShaderModule[]): ShaderModule[] {\r\n  return getShaderDependencies(modules);\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;;;;AAEpC,OAAO,EAAe,uBAAuB,EAAC,2BAAwB;;AAqBhE,SAAU,2BAA2B,CAA2B,OAAY;2MAChF,0BAAA,AAAuB,EAAC,OAAO,CAAC,CAAC;IACjC,MAAM,SAAS,GAAsB,CAAA,CAAE,CAAC;IACxC,MAAM,WAAW,GAA2B,CAAA,CAAE,CAAC;IAC/C,kBAAkB,CAAC;QAAC,OAAO;QAAE,KAAK,EAAE,CAAC;QAAE,SAAS;QAAE,WAAW;IAAA,CAAC,CAAC,CAAC;IAEhE,mFAAmF;IACnF,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAC1C,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAG,CAAD,UAAY,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAC/C,GAAG,EAAC,IAAI,CAAC,EAAE,AAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;2MAChC,0BAAA,AAAuB,EAAC,YAAY,CAAC,CAAC;IACtC,OAAO,YAAY,CAAC;AACtB,CAAC;AAYK,SAAU,kBAAkB,CAA2B,OAK5D;IACC,MAAM,EAAC,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,WAAW,EAAC,GAAG,OAAO,CAAC;IACzD,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC;QACf,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;IAC9D,CAAC;IAED,sCAAsC;IACtC,KAAK,MAAM,MAAM,IAAI,OAAO,CAAE,CAAC;QAC7B,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;QAChC,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,SAAS,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,EAAE,CAAC;YAC/E,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACnC,CAAC;IACH,CAAC;IAED,UAAU;IACV,KAAK,MAAM,MAAM,IAAI,OAAO,CAAE,CAAC;QAC7B,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;YACxB,kBAAkB,CAAC;gBAAC,OAAO,EAAE,MAAM,CAAC,YAAY;gBAAE,KAAK,EAAE,KAAK,GAAG,CAAC;gBAAE,SAAS;gBAAE,WAAW;YAAA,CAAC,CAAC,CAAC;QAC/F,CAAC;IACH,CAAC;AACH,CAAC;AAcK,SAAU,qBAAqB,CAAC,OAAuB;2MAC3D,0BAAA,AAAuB,EAAC,OAAO,CAAC,CAAC;IACjC,MAAM,SAAS,GAAiC,CAAA,CAAE,CAAC;IACnD,MAAM,WAAW,GAA2B,CAAA,CAAE,CAAC;IAC/C,kBAAkB,CAAC;QAAC,OAAO;QAAE,KAAK,EAAE,CAAC;QAAE,SAAS;QAAE,WAAW;IAAA,CAAC,CAAC,CAAC;IAEhE,mFAAmF;IACnF,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAC/B,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAG,CAAD,UAAY,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAC/C,GAAG,EAAC,IAAI,CAAC,EAAG,AAAD,SAAU,CAAC,IAAI,CAAC,CAAC,CAAC;2MAChC,0BAAA,AAAuB,EAAC,OAAO,CAAC,CAAC;IACjC,OAAO,OAAO,CAAC;AACjB,CAAC;AAQK,SAAU,cAAc,CAAC,OAAuB;IACpD,OAAO,qBAAqB,CAAC,OAAO,CAAC,CAAC;AACxC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3676, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3682, "column": 0}, "map": {"version":3,"file":"shader-hooks.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/shader-assembly/shader-hooks.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {ShaderInjection} from './shader-injections';\r\n\r\n// A normalized hook function\r\n/**\r\n * The shader hook mechanism allows the application to create shaders\r\n * that can be automatically extended by the shader modules the application\r\n * includes.\r\n *\r\n * A shader hook function that shader modules can inject code into.\r\n * Shaders can call these functions, which will be no-ops by default.\r\n *\r\n * If a shader module injects code it will be executed upon the hook\r\n * function call.\r\n */\r\nexport type ShaderHook = {\r\n  /** `vs:` or `fs:` followed by the name and arguments of the function, e.g. `vs:MYHOOK_func(inout vec4 value)`. Hook name without arguments\r\n  will also be used as the name of the shader hook */\r\n  hook: string;\r\n  /** Code always included at the beginning of a hook function */\r\n  header: string;\r\n  /** Code always included at the end of a hook function */\r\n  footer: string;\r\n  /** To Be Documented */\r\n  signature?: string;\r\n};\r\n\r\n/** Normalized shader hooks per shader */\r\nexport type ShaderHooks = {\r\n  /** Normalized shader hooks for vertex shader */\r\n  vertex: Record<string, ShaderHook>;\r\n  /** Normalized shader hooks for fragment shader */\r\n  fragment: Record<string, ShaderHook>;\r\n};\r\n\r\n/** Generate hook source code */\r\nexport function getShaderHooks(\r\n  hookFunctions: Record<string, ShaderHook>,\r\n  hookInjections: Record<string, ShaderInjection[]>\r\n): string {\r\n  let result = '';\r\n  for (const hookName in hookFunctions) {\r\n    const hookFunction = hookFunctions[hookName];\r\n    result += `void ${hookFunction.signature} {\\n`;\r\n    if (hookFunction.header) {\r\n      result += `  ${hookFunction.header}`;\r\n    }\r\n    if (hookInjections[hookName]) {\r\n      const injections = hookInjections[hookName];\r\n      injections.sort((a: {order: number}, b: {order: number}): number => a.order - b.order);\r\n      for (const injection of injections) {\r\n        result += `  ${injection.injection}\\n`;\r\n      }\r\n    }\r\n    if (hookFunction.footer) {\r\n      result += `  ${hookFunction.footer}`;\r\n    }\r\n    result += '}\\n';\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Parse string based hook functions\r\n * And split per shader\r\n */\r\nexport function normalizeShaderHooks(hookFunctions: (string | ShaderHook)[]): ShaderHooks {\r\n  const result: ShaderHooks = {vertex: {}, fragment: {}};\r\n\r\n  for (const hookFunction of hookFunctions) {\r\n    let opts: ShaderHook;\r\n    let hook: string;\r\n    if (typeof hookFunction !== 'string') {\r\n      opts = hookFunction;\r\n      hook = opts.hook;\r\n    } else {\r\n      opts = {} as ShaderHook;\r\n      hook = hookFunction;\r\n    }\r\n    hook = hook.trim();\r\n    const [shaderStage, signature] = hook.split(':');\r\n    const name = hook.replace(/\\(.+/, '');\r\n    const normalizedHook: ShaderHook = Object.assign(opts, {signature});\r\n    switch (shaderStage) {\r\n      case 'vs':\r\n        result.vertex[name] = normalizedHook;\r\n        break;\r\n      case 'fs':\r\n        result.fragment[name] = normalizedHook;\r\n        break;\r\n      default:\r\n        throw new Error(shaderStage);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAoCpC,8BAAA,EAAgC;;;;AAC1B,SAAU,cAAc,CAC5B,aAAyC,EACzC,cAAiD;IAEjD,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAK,MAAM,QAAQ,IAAI,aAAa,CAAE,CAAC;QACrC,MAAM,YAAY,GAAG,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC7C,MAAM,IAAI,CAAA,KAAA,EAAQ,YAAY,CAAC,SAAS,CAAA,IAAA,CAAM,CAAC;QAC/C,IAAI,YAAY,CAAC,MAAM,EAAE,CAAC;YACxB,MAAM,IAAI,CAAA,EAAA,EAAK,YAAY,CAAC,MAAM,EAAE,CAAC;QACvC,CAAC;QACD,IAAI,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC;YAC7B,MAAM,UAAU,GAAG,cAAc,CAAC,QAAQ,CAAC,CAAC;YAC5C,UAAU,CAAC,IAAI,CAAC,CAAC,CAAkB,EAAE,CAAkB,EAAU,CAAG,CAAD,AAAE,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC;YACvF,KAAK,MAAM,SAAS,IAAI,UAAU,CAAE,CAAC;gBACnC,MAAM,IAAI,CAAA,EAAA,EAAK,SAAS,CAAC,SAAS,CAAA,EAAA,CAAI,CAAC;YACzC,CAAC;QACH,CAAC;QACD,IAAI,YAAY,CAAC,MAAM,EAAE,CAAC;YACxB,MAAM,IAAI,CAAA,EAAA,EAAK,YAAY,CAAC,MAAM,EAAE,CAAC;QACvC,CAAC;QACD,MAAM,IAAI,KAAK,CAAC;IAClB,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AAMK,SAAU,oBAAoB,CAAC,aAAsC;IACzE,MAAM,MAAM,GAAgB;QAAC,MAAM,EAAE,CAAA,CAAE;QAAE,QAAQ,EAAE,CAAA,CAAE;IAAA,CAAC,CAAC;IAEvD,KAAK,MAAM,YAAY,IAAI,aAAa,CAAE,CAAC;QACzC,IAAI,IAAgB,CAAC;QACrB,IAAI,IAAY,CAAC;QACjB,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE,CAAC;YACrC,IAAI,GAAG,YAAY,CAAC;YACpB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnB,CAAC,MAAM,CAAC;YACN,IAAI,GAAG,CAAA,CAAgB,CAAC;YACxB,IAAI,GAAG,YAAY,CAAC;QACtB,CAAC;QACD,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;QACnB,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACjD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QACtC,MAAM,cAAc,GAAe,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE;YAAC,SAAS;QAAA,CAAC,CAAC,CAAC;QACpE,OAAQ,WAAW,EAAE,CAAC;YACpB,KAAK,IAAI;gBACP,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC;gBACrC,MAAM;YACR,KAAK,IAAI;gBACP,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC;gBACvC,MAAM;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;QACjC,CAAC;IACH,CAAC;IAED,OAAO,MAAM,CAAC;AAChB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3745, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3751, "column": 0}, "map": {"version":3,"file":"get-shader-info.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/glsl-utils/get-shader-info.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\n/** Information extracted from shader source code */\r\nexport type ShaderInfo = {\r\n  name: string;\r\n  language: 'glsl' | 'wgsl';\r\n  version: number;\r\n};\r\n\r\n/** Extracts information from shader source code */\r\nexport function getShaderInfo(source: string, defaultName?: string): ShaderInfo {\r\n  return {\r\n    name: getShaderName(source, defaultName),\r\n    language: 'glsl',\r\n    version: getShaderVersion(source)\r\n  };\r\n}\r\n\r\n/** Extracts GLSLIFY style naming of shaders: `#define SHADER_NAME ...` */\r\nfunction getShaderName(shader: string, defaultName: string = 'unnamed'): string {\r\n  const SHADER_NAME_REGEXP = /#define[^\\S\\r\\n]*SHADER_NAME[^\\S\\r\\n]*([A-Za-z0-9_-]+)\\s*/;\r\n  const match = SHADER_NAME_REGEXP.exec(shader);\r\n  return match ? match[1] : defaultName;\r\n}\r\n\r\n/** returns GLSL shader version of given shader string */\r\nfunction getShaderVersion(source: string): 100 | 300 {\r\n  let version = 100;\r\n  const words = source.match(/[^\\s]+/g);\r\n  if (words && words.length >= 2 && words[0] === '#version') {\r\n    const parsedVersion = parseInt(words[1], 10);\r\n    if (Number.isFinite(parsedVersion)) {\r\n      version = parsedVersion;\r\n    }\r\n  }\r\n  if (version !== 100 && version !== 300) {\r\n    throw new Error(`Invalid GLSL version ${version}`);\r\n  }\r\n  return version;\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AASpC,iDAAA,EAAmD;;;AAC7C,SAAU,aAAa,CAAC,MAAc,EAAE,WAAoB;IAChE,OAAO;QACL,IAAI,EAAE,aAAa,CAAC,MAAM,EAAE,WAAW,CAAC;QACxC,QAAQ,EAAE,MAAM;QAChB,OAAO,EAAE,gBAAgB,CAAC,MAAM,CAAC;KAClC,CAAC;AACJ,CAAC;AAED,wEAAA,EAA0E,CAC1E,SAAS,aAAa,CAAC,MAAc,EAAE,cAAsB,SAAS;IACpE,MAAM,kBAAkB,GAAG,2DAA2D,CAAC;IACvF,MAAM,KAAK,GAAG,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC9C,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;AACxC,CAAC;AAED,uDAAA,EAAyD,CACzD,SAAS,gBAAgB,CAAC,MAAc;IACtC,IAAI,OAAO,GAAG,GAAG,CAAC;IAClB,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;IACtC,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,KAAK,UAAU,EAAE,CAAC;QAC1D,MAAM,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAC7C,IAAI,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,CAAC;YACnC,OAAO,GAAG,aAAa,CAAC;QAC1B,CAAC;IACH,CAAC;IACD,IAAI,OAAO,KAAK,GAAG,IAAI,OAAO,KAAK,GAAG,EAAE,CAAC;QACvC,MAAM,IAAI,KAAK,CAAC,CAAA,qBAAA,EAAwB,OAAO,EAAE,CAAC,CAAC;IACrD,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3783, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3789, "column": 0}, "map": {"version":3,"file":"platform-defines.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/shader-assembly/platform-defines.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {PlatformInfo} from './platform-info';\r\n\r\n/** Adds defines to help identify GPU architecture / platform */\r\nexport function getPlatformShaderDefines(platformInfo: PlatformInfo): string {\r\n  switch (platformInfo?.gpu.toLowerCase()) {\r\n    case 'apple':\r\n      return /* glsl */ `\\\r\n#define APPLE_GPU\r\n// Apple optimizes away the calculation necessary for emulated fp64\r\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\r\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\r\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\r\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\r\n`;\r\n\r\n    case 'nvidia':\r\n      return /* glsl */ `\\\r\n#define NVIDIA_GPU\r\n// Nvidia optimizes away the calculation necessary for emulated fp64\r\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\r\n`;\r\n\r\n    case 'intel':\r\n      return /* glsl */ `\\\r\n#define INTEL_GPU\r\n// Intel optimizes away the calculation necessary for emulated fp64\r\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\r\n// Intel's built-in 'tan' function doesn't have acceptable precision\r\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\r\n// Intel GPU doesn't have full 32 bits precision in same cases, causes overflow\r\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\r\n`;\r\n\r\n    case 'amd':\r\n      // AMD Does not eliminate fp64 code\r\n      return /* glsl */ `\\\r\n#define AMD_GPU\r\n`;\r\n\r\n    default:\r\n      // We don't know what GPU it is, could be that the GPU driver or\r\n      // browser is not implementing UNMASKED_RENDERER constant and not\r\n      // reporting a correct name\r\n      return /* glsl */ `\\\r\n#define DEFAULT_GPU\r\n// Prevent driver from optimizing away the calculation necessary for emulated fp64\r\n#define LUMA_FP64_CODE_ELIMINATION_WORKAROUND 1\r\n// Headless Chrome's software shader 'tan' function doesn't have acceptable precision\r\n#define LUMA_FP32_TAN_PRECISION_WORKAROUND 1\r\n// If the GPU doesn't have full 32 bits precision, will causes overflow\r\n#define LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND 1\r\n`;\r\n  }\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAIpC,8DAAA,EAAgE;;;AAC1D,SAAU,wBAAwB,CAAC,YAA0B;IACjE,OAAQ,YAAY,EAAE,GAAG,CAAC,WAAW,EAAE,EAAE,CAAC;QACxC,KAAK,OAAO;YACV,OAAO,QAAA,EAAU,CAAC,CAAA;;;;;;;CAOvB,CAAC;QAEE,KAAK,QAAQ;YACX,OAAO,QAAA,EAAU,CAAC,CAAA;;;;CAIvB,CAAC;QAEE,KAAK,OAAO;YACV,OAAO,QAAA,EAAU,CAAC,CAAA;;;;;;;;CAQvB,CAAC;QAEE,KAAK,KAAK;YACR,mCAAmC;YACnC,OAAO,QAAA,EAAU,CAAC,CAAA;;CAEvB,CAAC;QAEE;YACE,gEAAgE;YAChE,iEAAiE;YACjE,2BAA2B;YAC3B,OAAO,QAAA,EAAU,CAAC,CAAA;;;;;;;;CAQvB,CAAC;IACA,CAAC;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3842, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3848, "column": 0}, "map": {"version":3,"file":"transpile-glsl-shader.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/shader-transpiler/transpile-glsl-shader.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\n// TRANSPILATION TABLES\r\n\r\n/**\r\n * Transpiles GLSL 3.00 shader source code to target GLSL version (3.00 or 1.00)\r\n *\r\n * @note We always run transpiler even if same version e.g. 3.00 => 3.00\r\n * @note For texture sampling transpilation, apps need to use non-standard texture* calls in GLSL 3.00 source\r\n * RFC: https://github.com/visgl/luma.gl/blob/7.0-release/dev-docs/RFCs/v6.0/portable-glsl-300-rfc.md\r\n */\r\nexport function transpileGLSLShader(source: string, stage: 'vertex' | 'fragment'): string {\r\n  const sourceGLSLVersion = Number(source.match(/^#version[ \\t]+(\\d+)/m)?.[1] || 100);\r\n  if (sourceGLSLVersion !== 300) {\r\n    // TODO - we splurge on a longer error message to help deck.gl custom layer developers\r\n    throw new Error('luma.gl v9 only supports GLSL 3.00 shader sources');\r\n  }\r\n\r\n  switch (stage) {\r\n    case 'vertex':\r\n      source = convertShader(source, ES300_VERTEX_REPLACEMENTS);\r\n      return source;\r\n    case 'fragment':\r\n      source = convertShader(source, ES300_FRAGMENT_REPLACEMENTS);\r\n      return source;\r\n    default:\r\n      // Unknown shader stage\r\n      throw new Error(stage);\r\n  }\r\n}\r\n\r\ntype GLSLReplacement = [RegExp, string];\r\n\r\n/** Simple regex replacements for GLSL ES 1.00 syntax that has changed in GLSL ES 3.00 */\r\nconst ES300_REPLACEMENTS: GLSLReplacement[] = [\r\n  // Fix poorly formatted version directive\r\n  [/^(#version[ \\t]+(100|300[ \\t]+es))?[ \\t]*\\n/, '#version 300 es\\n'],\r\n  // The individual `texture...()` functions were replaced with `texture()` overloads\r\n  [/\\btexture(2D|2DProj|Cube)Lod(EXT)?\\(/g, 'textureLod('],\r\n  [/\\btexture(2D|2DProj|Cube)(EXT)?\\(/g, 'texture(']\r\n];\r\n\r\nconst ES300_VERTEX_REPLACEMENTS: GLSLReplacement[] = [\r\n  ...ES300_REPLACEMENTS,\r\n  // `attribute` keyword replaced with `in`\r\n  [makeVariableTextRegExp('attribute'), 'in $1'],\r\n  // `varying` keyword replaced with `out`\r\n  [makeVariableTextRegExp('varying'), 'out $1']\r\n];\r\n\r\n/** Simple regex replacements for GLSL ES 1.00 syntax that has changed in GLSL ES 3.00 */\r\nconst ES300_FRAGMENT_REPLACEMENTS: GLSLReplacement[] = [\r\n  ...ES300_REPLACEMENTS,\r\n  // `varying` keyword replaced with `in`\r\n  [makeVariableTextRegExp('varying'), 'in $1']\r\n];\r\n\r\nfunction convertShader(source: string, replacements: GLSLReplacement[]) {\r\n  for (const [pattern, replacement] of replacements) {\r\n    source = source.replace(pattern, replacement);\r\n  }\r\n  return source;\r\n}\r\n\r\n/**\r\n * Creates a regexp that tests for a specific variable type\r\n * @example\r\n *   should match:\r\n *     in float weight;\r\n *     out vec4 positions[2];\r\n *   should not match:\r\n *     void f(out float a, in float b) {}\r\n */\r\nfunction makeVariableTextRegExp(qualifier: 'attribute' | 'varying' | 'in' | 'out'): RegExp {\r\n  return new RegExp(`\\\\b${qualifier}[ \\\\t]+(\\\\w+[ \\\\t]+\\\\w+(\\\\[\\\\w+\\\\])?;)`, 'g');\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAEpC,uBAAuB;AAEvB;;;;;;GAMG;;;AACG,SAAU,mBAAmB,CAAC,MAAc,EAAE,KAA4B;IAC9E,MAAM,iBAAiB,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,uBAAuB,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;IACpF,IAAI,iBAAiB,KAAK,GAAG,EAAE,CAAC;QAC9B,sFAAsF;QACtF,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;IACvE,CAAC;IAED,OAAQ,KAAK,EAAE,CAAC;QACd,KAAK,QAAQ;YACX,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,yBAAyB,CAAC,CAAC;YAC1D,OAAO,MAAM,CAAC;QAChB,KAAK,UAAU;YACb,MAAM,GAAG,aAAa,CAAC,MAAM,EAAE,2BAA2B,CAAC,CAAC;YAC5D,OAAO,MAAM,CAAC;QAChB;YACE,uBAAuB;YACvB,MAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;AACH,CAAC;AAID,uFAAA,EAAyF,CACzF,MAAM,kBAAkB,GAAsB;IAC5C,yCAAyC;IACzC;QAAC,6CAA6C;QAAE,mBAAmB;KAAC;IACpE,mFAAmF;IACnF;QAAC,uCAAuC;QAAE,aAAa;KAAC;IACxD;QAAC,oCAAoC;QAAE,UAAU;KAAC;CACnD,CAAC;AAEF,MAAM,yBAAyB,GAAsB;OAChD,kBAAkB;IACrB,yCAAyC;IACzC;QAAC,sBAAsB,CAAC,WAAW,CAAC;QAAE,OAAO;KAAC;IAC9C,wCAAwC;IACxC;QAAC,sBAAsB,CAAC,SAAS,CAAC;QAAE,QAAQ;KAAC;CAC9C,CAAC;AAEF,uFAAA,EAAyF,CACzF,MAAM,2BAA2B,GAAsB;OAClD,kBAAkB;IACrB,uCAAuC;IACvC;QAAC,sBAAsB,CAAC,SAAS,CAAC;QAAE,OAAO;KAAC;CAC7C,CAAC;AAEF,SAAS,aAAa,CAAC,MAAc,EAAE,YAA+B;IACpE,KAAK,MAAM,CAAC,OAAO,EAAE,WAAW,CAAC,IAAI,YAAY,CAAE,CAAC;QAClD,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAChD,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED;;;;;;;;GAQG,CACH,SAAS,sBAAsB,CAAC,SAAiD;IAC/E,OAAO,IAAI,MAAM,CAAC,CAAA,GAAA,EAAM,SAAS,CAAA,sCAAA,CAAwC,EAAE,GAAG,CAAC,CAAC;AAClF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 3933, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3939, "column": 0}, "map": {"version":3,"file":"assemble-shaders.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/shader-assembly/assemble-shaders.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {getShaderModuleDependencies} from '../shader-module/shader-module-dependencies';\r\nimport {PlatformInfo} from './platform-info';\r\nimport {getPlatformShaderDefines} from './platform-defines';\r\nimport {injectShader, DECLARATION_INJECT_MARKER} from './shader-injections';\r\nimport {transpileGLSLShader} from '../shader-transpiler/transpile-glsl-shader';\r\nimport {checkShaderModuleDeprecations} from '../shader-module/shader-module';\r\nimport type {ShaderInjection} from './shader-injections';\r\nimport type {ShaderModule} from '../shader-module/shader-module';\r\nimport {ShaderHook, normalizeShaderHooks, getShaderHooks} from './shader-hooks';\r\nimport {assert} from '../utils/assert';\r\nimport {getShaderInfo} from '../glsl-utils/get-shader-info';\r\n\r\n/** Define map */\r\nexport type ShaderDefine = string | number | boolean;\r\n\r\nconst INJECT_SHADER_DECLARATIONS = `\\n\\n${DECLARATION_INJECT_MARKER}\\n`;\r\n\r\n/**\r\n * Precision prologue to inject before functions are injected in shader\r\n * TODO - extract any existing prologue in the fragment source and move it up...\r\n */\r\nconst FRAGMENT_SHADER_PROLOGUE = /* glsl */ `\\\r\nprecision highp float;\r\n`;\r\n\r\n/**\r\n * Options for `ShaderAssembler.assembleShaders()`\r\n */\r\nexport type AssembleShaderProps = AssembleShaderOptions & {\r\n  platformInfo: PlatformInfo;\r\n  /** WGSL: single shader source. */\r\n  source?: string | null;\r\n  /** GLSL vertex shader source. */\r\n  vs?: string | null;\r\n  /** GLSL fragment shader source. */\r\n  fs?: string | null;\r\n};\r\n\r\nexport type AssembleShaderOptions = {\r\n  /** information about the platform (which shader language & version, extensions etc.) */\r\n  platformInfo: PlatformInfo;\r\n  /** Inject shader id #defines */\r\n  id?: string;\r\n  /** Modules to be injected */\r\n  modules?: ShaderModule[];\r\n  /** Defines to be injected */\r\n  defines?: Record<string, ShaderDefine>;\r\n  /** Hook functions */\r\n  hookFunctions?: (ShaderHook | string)[];\r\n  /** Code injections */\r\n  inject?: Record<string, string | ShaderInjection>;\r\n  /** Whether to inject prologue */\r\n  prologue?: boolean;\r\n  /** logger object */\r\n  log?: any;\r\n};\r\n\r\ntype AssembleStageOptions = {\r\n  /** Inject shader id #defines */\r\n  id?: string;\r\n  /** Vertex shader */\r\n  source: string;\r\n  stage: 'vertex' | 'fragment';\r\n  /** Modules to be injected */\r\n  modules: any[];\r\n  /** Defines to be injected */\r\n  defines?: Record<string, ShaderDefine>;\r\n  /** Hook functions */\r\n  hookFunctions?: (ShaderHook | string)[];\r\n  /** Code injections */\r\n  inject?: Record<string, string | ShaderInjection>;\r\n  /** Whether to inject prologue */\r\n  prologue?: boolean;\r\n  /** logger object */\r\n  log?: any;\r\n};\r\n\r\nexport type HookFunction = {hook: string; header: string; footer: string; signature?: string};\r\n\r\n/**\r\n * getUniforms function returned from the shader module system\r\n */\r\nexport type GetUniformsFunc = (opts: Record<string, any>) => Record<string, any>;\r\n\r\n/**\r\n * Inject a list of shader modules into a single shader source for WGSL\r\n */\r\nexport function assembleWGSLShader(\r\n  options: AssembleShaderOptions & {\r\n    /** Single WGSL shader */\r\n    source: string;\r\n  }\r\n): {\r\n  source: string;\r\n  getUniforms: GetUniformsFunc;\r\n} {\r\n  const modules = getShaderModuleDependencies(options.modules || []);\r\n\r\n  return {\r\n    source: assembleShaderWGSL(options.platformInfo, {\r\n      ...options,\r\n      source: options.source,\r\n      stage: 'vertex',\r\n      modules\r\n    }),\r\n    getUniforms: assembleGetUniforms(modules)\r\n  };\r\n}\r\n\r\n/**\r\n * Injects dependent shader module sources into pair of main vertex/fragment shader sources for GLSL\r\n */\r\nexport function assembleGLSLShaderPair(\r\n  options: AssembleShaderOptions & {\r\n    /** Vertex shader */\r\n    vs: string;\r\n    /** Fragment shader */\r\n    fs?: string;\r\n  }\r\n): {\r\n  vs: string;\r\n  fs: string;\r\n  getUniforms: GetUniformsFunc;\r\n} {\r\n  const {vs, fs} = options;\r\n  const modules = getShaderModuleDependencies(options.modules || []);\r\n\r\n  return {\r\n    vs: assembleShaderGLSL(options.platformInfo, {\r\n      ...options,\r\n      source: vs,\r\n      stage: 'vertex',\r\n      modules\r\n    }),\r\n    fs: assembleShaderGLSL(options.platformInfo, {\r\n      ...options,\r\n      // @ts-expect-error\r\n      source: fs,\r\n      stage: 'fragment',\r\n      modules\r\n    }),\r\n    getUniforms: assembleGetUniforms(modules)\r\n  };\r\n}\r\n\r\n/**\r\n * Pulls together complete source code for either a vertex or a fragment shader\r\n * adding prologues, requested module chunks, and any final injections.\r\n * @param gl\r\n * @param options\r\n * @returns\r\n */\r\nexport function assembleShaderWGSL(platformInfo: PlatformInfo, options: AssembleStageOptions) {\r\n  const {\r\n    // id,\r\n    source,\r\n    stage,\r\n    modules,\r\n    // defines = {},\r\n    hookFunctions = [],\r\n    inject = {},\r\n    log\r\n  } = options;\r\n\r\n  assert(typeof source === 'string', 'shader source must be a string');\r\n\r\n  // const isVertex = type === 'vs';\r\n  // const sourceLines = source.split('\\n');\r\n\r\n  const coreSource = source;\r\n\r\n  // Combine Module and Application Defines\r\n  // const allDefines = {};\r\n  // modules.forEach(module => {\r\n  //   Object.assign(allDefines, module.getDefines());\r\n  // });\r\n  // Object.assign(allDefines, defines);\r\n\r\n  // Add platform defines (use these to work around platform-specific bugs and limitations)\r\n  // Add common defines (GLSL version compatibility, feature detection)\r\n  // Add precision declaration for fragment shaders\r\n  let assembledSource = '';\r\n  //   prologue\r\n  //     ? `\\\r\n  // ${getShaderNameDefine({id, source, type})}\r\n  // ${getShaderType(type)}\r\n  // ${getPlatformShaderDefines(platformInfo)}\r\n  // ${getApplicationDefines(allDefines)}\r\n  // ${isVertex ? '' : FRAGMENT_SHADER_PROLOGUE}\r\n  // `\r\n  // `;\r\n\r\n  const hookFunctionMap = normalizeShaderHooks(hookFunctions);\r\n\r\n  // Add source of dependent modules in resolved order\r\n  const hookInjections: Record<string, ShaderInjection[]> = {};\r\n  const declInjections: Record<string, ShaderInjection[]> = {};\r\n  const mainInjections: Record<string, ShaderInjection[]> = {};\r\n\r\n  for (const key in inject) {\r\n    const injection =\r\n      typeof inject[key] === 'string' ? {injection: inject[key], order: 0} : inject[key];\r\n    const match = /^(v|f)s:(#)?([\\w-]+)$/.exec(key);\r\n    if (match) {\r\n      const hash = match[2];\r\n      const name = match[3];\r\n      if (hash) {\r\n        if (name === 'decl') {\r\n          declInjections[key] = [injection as any];\r\n        } else {\r\n          mainInjections[key] = [injection as any];\r\n        }\r\n      } else {\r\n        hookInjections[key] = [injection as any];\r\n      }\r\n    } else {\r\n      // Regex injection\r\n      mainInjections[key] = [injection as any];\r\n    }\r\n  }\r\n\r\n  // TODO - hack until shadertool modules support WebGPU\r\n  const modulesToInject = modules;\r\n\r\n  for (const module of modulesToInject) {\r\n    if (log) {\r\n      checkShaderModuleDeprecations(module, coreSource, log);\r\n    }\r\n    const moduleSource = getShaderModuleSource(module, 'wgsl');\r\n    // Add the module source, and a #define that declares it presence\r\n    assembledSource += moduleSource;\r\n\r\n    const injections = module.injections?.[stage] || {};\r\n    for (const key in injections) {\r\n      const match = /^(v|f)s:#([\\w-]+)$/.exec(key);\r\n      if (match) {\r\n        const name = match[2];\r\n        const injectionType = name === 'decl' ? declInjections : mainInjections;\r\n        injectionType[key] = injectionType[key] || [];\r\n        injectionType[key].push(injections[key]);\r\n      } else {\r\n        hookInjections[key] = hookInjections[key] || [];\r\n        hookInjections[key].push(injections[key]);\r\n      }\r\n    }\r\n  }\r\n\r\n  // For injectShader\r\n  assembledSource += INJECT_SHADER_DECLARATIONS;\r\n\r\n  assembledSource = injectShader(assembledSource, stage, declInjections);\r\n\r\n  assembledSource += getShaderHooks(hookFunctionMap[stage], hookInjections);\r\n\r\n  // Add the version directive and actual source of this shader\r\n  assembledSource += coreSource;\r\n\r\n  // Apply any requested shader injections\r\n  assembledSource = injectShader(assembledSource, stage, mainInjections);\r\n\r\n  return assembledSource;\r\n}\r\n\r\n/**\r\n * Pulls together complete source code for either a vertex or a fragment shader\r\n * adding prologues, requested module chunks, and any final injections.\r\n * @param gl\r\n * @param options\r\n * @returns\r\n */\r\nfunction assembleShaderGLSL(\r\n  platformInfo: PlatformInfo,\r\n  options: {\r\n    id?: string;\r\n    source: string;\r\n    language?: 'glsl' | 'wgsl';\r\n    stage: 'vertex' | 'fragment';\r\n    modules: ShaderModule[];\r\n    defines?: Record<string, ShaderDefine>;\r\n    hookFunctions?: any[];\r\n    inject?: Record<string, string | ShaderInjection>;\r\n    prologue?: boolean;\r\n    log?: any;\r\n  }\r\n) {\r\n  const {\r\n    id,\r\n    source,\r\n    stage,\r\n    language = 'glsl',\r\n    modules,\r\n    defines = {},\r\n    hookFunctions = [],\r\n    inject = {},\r\n    prologue = true,\r\n    log\r\n  } = options;\r\n\r\n  assert(typeof source === 'string', 'shader source must be a string');\r\n\r\n  const sourceVersion = language === 'glsl' ? getShaderInfo(source).version : -1;\r\n  const targetVersion = platformInfo.shaderLanguageVersion;\r\n\r\n  const sourceVersionDirective = sourceVersion === 100 ? '#version 100' : '#version 300 es';\r\n\r\n  const sourceLines = source.split('\\n');\r\n  // TODO : keep all pre-processor statements at the beginning of the shader.\r\n  const coreSource = sourceLines.slice(1).join('\\n');\r\n\r\n  // Combine Module and Application Defines\r\n  const allDefines = {};\r\n  modules.forEach(module => {\r\n    Object.assign(allDefines, module.defines);\r\n  });\r\n  Object.assign(allDefines, defines);\r\n\r\n  // Add platform defines (use these to work around platform-specific bugs and limitations)\r\n  // Add common defines (GLSL version compatibility, feature detection)\r\n  // Add precision declaration for fragment shaders\r\n  let assembledSource = '';\r\n  switch (language) {\r\n    case 'wgsl':\r\n      break;\r\n    case 'glsl':\r\n      assembledSource = prologue\r\n        ? `\\\r\n${sourceVersionDirective}\r\n\r\n// ----- PROLOGUE -------------------------\r\n${getShaderNameDefine({id, source, stage})}\r\n${`#define SHADER_TYPE_${stage.toUpperCase()}`}\r\n\r\n${getPlatformShaderDefines(platformInfo)}\r\n${stage === 'fragment' ? FRAGMENT_SHADER_PROLOGUE : ''}\r\n\r\n// ----- APPLICATION DEFINES -------------------------\r\n\r\n${getApplicationDefines(allDefines)}\r\n\r\n`\r\n        : `${sourceVersionDirective}\r\n`;\r\n      break;\r\n  }\r\n\r\n  const hookFunctionMap = normalizeShaderHooks(hookFunctions);\r\n\r\n  // Add source of dependent modules in resolved order\r\n  const hookInjections: Record<string, ShaderInjection[]> = {};\r\n  const declInjections: Record<string, ShaderInjection[]> = {};\r\n  const mainInjections: Record<string, ShaderInjection[]> = {};\r\n\r\n  for (const key in inject) {\r\n    const injection: ShaderInjection =\r\n      typeof inject[key] === 'string' ? {injection: inject[key], order: 0} : inject[key];\r\n    const match = /^(v|f)s:(#)?([\\w-]+)$/.exec(key);\r\n    if (match) {\r\n      const hash = match[2];\r\n      const name = match[3];\r\n      if (hash) {\r\n        if (name === 'decl') {\r\n          declInjections[key] = [injection];\r\n        } else {\r\n          mainInjections[key] = [injection];\r\n        }\r\n      } else {\r\n        hookInjections[key] = [injection];\r\n      }\r\n    } else {\r\n      // Regex injection\r\n      mainInjections[key] = [injection];\r\n    }\r\n  }\r\n\r\n  for (const module of modules) {\r\n    if (log) {\r\n      checkShaderModuleDeprecations(module, coreSource, log);\r\n    }\r\n    const moduleSource = getShaderModuleSource(module, stage);\r\n    // Add the module source, and a #define that declares it presence\r\n    assembledSource += moduleSource;\r\n\r\n    const injections = module.instance?.normalizedInjections[stage] || {};\r\n    for (const key in injections) {\r\n      const match = /^(v|f)s:#([\\w-]+)$/.exec(key);\r\n      if (match) {\r\n        const name = match[2];\r\n        const injectionType = name === 'decl' ? declInjections : mainInjections;\r\n        injectionType[key] = injectionType[key] || [];\r\n        injectionType[key].push(injections[key]);\r\n      } else {\r\n        hookInjections[key] = hookInjections[key] || [];\r\n        hookInjections[key].push(injections[key]);\r\n      }\r\n    }\r\n  }\r\n\r\n  assembledSource += '// ----- MAIN SHADER SOURCE -------------------------';\r\n\r\n  // For injectShader\r\n  assembledSource += INJECT_SHADER_DECLARATIONS;\r\n\r\n  assembledSource = injectShader(assembledSource, stage, declInjections);\r\n\r\n  assembledSource += getShaderHooks(hookFunctionMap[stage], hookInjections);\r\n\r\n  // Add the version directive and actual source of this shader\r\n  assembledSource += coreSource;\r\n\r\n  // Apply any requested shader injections\r\n  assembledSource = injectShader(assembledSource, stage, mainInjections);\r\n\r\n  if (language === 'glsl' && sourceVersion !== targetVersion) {\r\n    assembledSource = transpileGLSLShader(assembledSource, stage);\r\n  }\r\n\r\n  return assembledSource.trim();\r\n}\r\n\r\n/**\r\n * Returns a combined `getUniforms` covering the options for all the modules,\r\n * the created function will pass on options to the inidividual `getUniforms`\r\n * function of each shader module and combine the results into one object that\r\n * can be passed to setUniforms.\r\n * @param modules\r\n * @returns\r\n */\r\nexport function assembleGetUniforms(modules: ShaderModule[]) {\r\n  return function getUniforms(opts: Record<string, any>): Record<string, any> {\r\n    const uniforms = {};\r\n    for (const module of modules) {\r\n      // `modules` is already sorted by dependency level. This guarantees that\r\n      // modules have access to the uniforms that are generated by their dependencies.\r\n      const moduleUniforms = module.getUniforms?.(opts, uniforms);\r\n      Object.assign(uniforms, moduleUniforms);\r\n    }\r\n    return uniforms;\r\n  };\r\n}\r\n\r\n/**\r\n * Generate \"glslify-compatible\" SHADER_NAME defines\r\n * These are understood by the GLSL error parsing function\r\n * If id is provided and no SHADER_NAME constant is present in source, create one\r\n */\r\nfunction getShaderNameDefine(options: {\r\n  id?: string;\r\n  source: string;\r\n  stage: 'vertex' | 'fragment';\r\n}): string {\r\n  const {id, source, stage} = options;\r\n  const injectShaderName = id && source.indexOf('SHADER_NAME') === -1;\r\n  return injectShaderName\r\n    ? `\r\n#define SHADER_NAME ${id}_${stage}`\r\n    : '';\r\n}\r\n\r\n/** Generates application defines from an object of key value pairs */\r\nfunction getApplicationDefines(defines: Record<string, ShaderDefine> = {}): string {\r\n  let sourceText = '';\r\n  for (const define in defines) {\r\n    const value = defines[define];\r\n    if (value || Number.isFinite(value)) {\r\n      sourceText += `#define ${define.toUpperCase()} ${defines[define]}\\n`;\r\n    }\r\n  }\r\n  return sourceText;\r\n}\r\n\r\n/** Extracts the source code chunk for the specified shader type from the named shader module */\r\nexport function getShaderModuleSource(\r\n  module: ShaderModule,\r\n  stage: 'vertex' | 'fragment' | 'wgsl'\r\n): string {\r\n  let moduleSource;\r\n  switch (stage) {\r\n    case 'vertex':\r\n      moduleSource = module.vs || '';\r\n      break;\r\n    case 'fragment':\r\n      moduleSource = module.fs || '';\r\n      break;\r\n    case 'wgsl':\r\n      moduleSource = module.source || '';\r\n      break;\r\n    default:\r\n      assert(false);\r\n  }\r\n\r\n  if (!module.name) {\r\n    throw new Error('Shader module must have a name');\r\n  }\r\n  const moduleName = module.name.toUpperCase().replace(/[^0-9a-z]/gi, '_');\r\n  let source = `\\\r\n// ----- MODULE ${module.name} ---------------\r\n\r\n`;\r\n  if (stage !== 'wgsl') {\r\n    source += `#define MODULE_${moduleName}\\n`;\r\n  }\r\n  source += `${moduleSource}\\n`;\r\n  return source;\r\n}\r\n\r\n/*\r\nfunction getHookFunctions(\r\n  hookFunctions: Record<string, HookFunction>,\r\n  hookInjections: Record<string, Injection[]>\r\n): string {\r\n  let result = '';\r\n  for (const hookName in hookFunctions) {\r\n    const hookFunction = hookFunctions[hookName];\r\n    result += `void ${hookFunction.signature} {\\n`;\r\n    if (hookFunction.header) {\r\n      result += `  ${hookFunction.header}`;\r\n    }\r\n    if (hookInjections[hookName]) {\r\n      const injections = hookInjections[hookName];\r\n      injections.sort((a: {order: number}, b: {order: number}): number => a.order - b.order);\r\n      for (const injection of injections) {\r\n        result += `  ${injection.injection}\\n`;\r\n      }\r\n    }\r\n    if (hookFunction.footer) {\r\n      result += `  ${hookFunction.footer}`;\r\n    }\r\n    result += '}\\n';\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction normalizeHookFunctions(hookFunctions: (string | HookFunction)[]): {\r\n  vs: Record<string, HookFunction>;\r\n  fs: Record<string, HookFunction>;\r\n} {\r\n  const result: {vs: Record<string, any>; fs: Record<string, any>} = {\r\n    vs: {},\r\n    fs: {}\r\n  };\r\n\r\n  hookFunctions.forEach((hookFunction: string | HookFunction) => {\r\n    let opts: HookFunction;\r\n    let hook: string;\r\n    if (typeof hookFunction !== 'string') {\r\n      opts = hookFunction;\r\n      hook = opts.hook;\r\n    } else {\r\n      opts = {} as HookFunction;\r\n      hook = hookFunction;\r\n    }\r\n    hook = hook.trim();\r\n    const [stage, signature] = hook.split(':');\r\n    const name = hook.replace(/\\(.+/, '');\r\n    if (stage !== 'vs' && stage !== 'fs') {\r\n      throw new Error(stage);\r\n    }\r\n    result[stage][name] = Object.assign(opts, {signature});\r\n  });\r\n\r\n  return result;\r\n}\r\n*/\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4347, "column": 0}, "map": {"version":3,"file":"preprocessor.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/preprocessor/preprocessor.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nconst IFDEF_REGEXP = /^\\s*\\#\\s*ifdef\\s*([a-zA-Z_]+)\\s*$/;\r\nconst ENDIF_REGEXP = /^\\s*\\#\\s*endif\\s*$/;\r\n\r\nexport type PreprocessorOptions = {\r\n  defines?: Record<string, boolean>;\r\n};\r\n\r\nexport function preprocess(source: string, options?: PreprocessorOptions): string {\r\n  const lines = source.split('\\n');\r\n  const output: string[] = [];\r\n\r\n  let conditional = true;\r\n  let currentDefine: string | null = null;\r\n  for (const line of lines) {\r\n    const matchIf = line.match(IFDEF_REGEXP);\r\n    const matchEnd = line.match(ENDIF_REGEXP);\r\n    if (matchIf) {\r\n      currentDefine = matchIf[1];\r\n      conditional = Boolean(options?.defines?.[currentDefine]);\r\n    } else if (matchEnd) {\r\n      conditional = true;\r\n    } else if (conditional) {\r\n      output.push(line);\r\n    }\r\n  }\r\n  return output.join('\\n');\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAEpC,MAAM,YAAY,GAAG,mCAAmC,CAAC;AACzD,MAAM,YAAY,GAAG,oBAAoB,CAAC;AAMpC,SAAU,UAAU,CAAC,MAAc,EAAE,OAA6B;IACtE,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACjC,MAAM,MAAM,GAAa,EAAE,CAAC;IAE5B,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,IAAI,aAAa,GAAkB,IAAI,CAAC;IACxC,KAAK,MAAM,IAAI,IAAI,KAAK,CAAE,CAAC;QACzB,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACzC,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAC1C,IAAI,OAAO,EAAE,CAAC;YACZ,aAAa,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YAC3B,WAAW,GAAG,OAAO,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,CAAC,MAAM,IAAI,QAAQ,EAAE,CAAC;YACpB,WAAW,GAAG,IAAI,CAAC;QACrB,CAAC,MAAM,IAAI,WAAW,EAAE,CAAC;YACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC;IACH,CAAC;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4374, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4380, "column": 0}, "map": {"version":3,"file":"shader-assembler.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/shader-assembler.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport type {ShaderModule} from './shader-module/shader-module';\r\nimport {initializeShaderModules} from './shader-module/shader-module';\r\nimport {\r\n  AssembleShaderProps,\r\n  GetUniformsFunc,\r\n  assembleWGSLShader,\r\n  assembleGLSLShaderPair\r\n} from './shader-assembly/assemble-shaders';\r\nimport {preprocess} from './preprocessor/preprocessor';\r\n\r\n/**\r\n * A stateful version of `assembleShaders` that can be used to assemble shaders.\r\n * Supports setting of default modules and hooks.\r\n */\r\nexport class ShaderAssembler {\r\n  /** Default ShaderAssembler instance */\r\n  static defaultShaderAssembler: ShaderAssembler;\r\n  /** Hook functions */\r\n  private readonly _hookFunctions: any[] = [];\r\n  /** Shader modules */\r\n  private _defaultModules: ShaderModule[] = [];\r\n\r\n  /**\r\n   * A default shader assembler instance - the natural place to register default modules and hooks\r\n   * @returns\r\n   */\r\n  static getDefaultShaderAssembler(): ShaderAssembler {\r\n    ShaderAssembler.defaultShaderAssembler =\r\n      ShaderAssembler.defaultShaderAssembler || new ShaderAssembler();\r\n    return ShaderAssembler.defaultShaderAssembler;\r\n  }\r\n\r\n  /**\r\n   * Add a default module that does not have to be provided with every call to assembleShaders()\r\n   */\r\n  addDefaultModule(module: ShaderModule): void {\r\n    if (\r\n      !this._defaultModules.find(\r\n        m => m.name === (typeof module === 'string' ? module : module.name)\r\n      )\r\n    ) {\r\n      this._defaultModules.push(module);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a default module\r\n   */\r\n  removeDefaultModule(module: ShaderModule): void {\r\n    const moduleName = typeof module === 'string' ? module : module.name;\r\n    this._defaultModules = this._defaultModules.filter(m => m.name !== moduleName);\r\n  }\r\n\r\n  /**\r\n   * Register a shader hook\r\n   * @param hook\r\n   * @param opts\r\n   */\r\n  addShaderHook(hook: string, opts?: any): void {\r\n    if (opts) {\r\n      hook = Object.assign(opts, {hook});\r\n    }\r\n    this._hookFunctions.push(hook);\r\n  }\r\n\r\n  /**\r\n   * Assemble a WGSL unified shader\r\n   * @param platformInfo\r\n   * @param props\r\n   * @returns\r\n   */\r\n  assembleWGSLShader(props: AssembleShaderProps): {\r\n    source: string;\r\n    getUniforms: GetUniformsFunc;\r\n    modules: ShaderModule[];\r\n  } {\r\n    const modules = this._getModuleList(props.modules); // Combine with default modules\r\n    const hookFunctions = this._hookFunctions; // TODO - combine with default hook functions\r\n    const {source, getUniforms} = assembleWGSLShader({\r\n      ...props,\r\n      // @ts-expect-error\r\n      source: props.source,\r\n      modules,\r\n      hookFunctions\r\n    });\r\n    // WGSL does not have built-in preprocessing support (just compile time constants)\r\n    const preprocessedSource =\r\n      props.platformInfo.shaderLanguage === 'wgsl' ? preprocess(source) : source;\r\n    return {source: preprocessedSource, getUniforms, modules};\r\n  }\r\n\r\n  /**\r\n   * Assemble a pair of shaders into a single shader program\r\n   * @param platformInfo\r\n   * @param props\r\n   * @returns\r\n   */\r\n  assembleGLSLShaderPair(props: AssembleShaderProps): {\r\n    vs: string;\r\n    fs: string;\r\n    getUniforms: GetUniformsFunc;\r\n    modules: ShaderModule[];\r\n  } {\r\n    const modules = this._getModuleList(props.modules); // Combine with default modules\r\n    const hookFunctions = this._hookFunctions; // TODO - combine with default hook functions\r\n    const assembled = assembleGLSLShaderPair({\r\n      ...props,\r\n      // @ts-expect-error\r\n      vs: props.vs,\r\n      // @ts-expect-error\r\n      fs: props.fs,\r\n      modules,\r\n      hookFunctions\r\n    });\r\n\r\n    return {...assembled, modules};\r\n  }\r\n\r\n  /**\r\n   * Dedupe and combine with default modules\r\n   */\r\n  _getModuleList(appModules: ShaderModule[] = []): ShaderModule[] {\r\n    const modules = new Array<ShaderModule>(this._defaultModules.length + appModules.length);\r\n    const seen: Record<string, boolean> = {};\r\n    let count = 0;\r\n\r\n    for (let i = 0, len = this._defaultModules.length; i < len; ++i) {\r\n      const module = this._defaultModules[i];\r\n      const name = module.name;\r\n      modules[count++] = module;\r\n      seen[name] = true;\r\n    }\r\n\r\n    for (let i = 0, len = appModules.length; i < len; ++i) {\r\n      const module = appModules[i];\r\n      const name = module.name;\r\n      if (!seen[name]) {\r\n        modules[count++] = module;\r\n        seen[name] = true;\r\n      }\r\n    }\r\n\r\n    modules.length = count;\r\n\r\n    initializeShaderModules(modules);\r\n    return modules;\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4498, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4504, "column": 0}, "map": {"version":3,"file":"fp32.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/modules/math/fp32/fp32.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\n// import {ShaderModule} from '../../types';\r\n\r\nconst fp32shader = /* glsl */ `\\\r\n#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\r\n\r\n// All these functions are for substituting tan() function from Intel GPU only\r\nconst float TWO_PI = 6.2831854820251465;\r\nconst float PI_2 = 1.5707963705062866;\r\nconst float PI_16 = 0.1963495463132858;\r\n\r\nconst float SIN_TABLE_0 = 0.19509032368659973;\r\nconst float SIN_TABLE_1 = 0.3826834261417389;\r\nconst float SIN_TABLE_2 = 0.5555702447891235;\r\nconst float SIN_TABLE_3 = 0.7071067690849304;\r\n\r\nconst float COS_TABLE_0 = 0.9807852506637573;\r\nconst float COS_TABLE_1 = 0.9238795042037964;\r\nconst float COS_TABLE_2 = 0.8314695954322815;\r\nconst float COS_TABLE_3 = 0.7071067690849304;\r\n\r\nconst float INVERSE_FACTORIAL_3 = 1.666666716337204e-01; // 1/3!\r\nconst float INVERSE_FACTORIAL_5 = 8.333333767950535e-03; // 1/5!\r\nconst float INVERSE_FACTORIAL_7 = 1.9841270113829523e-04; // 1/7!\r\nconst float INVERSE_FACTORIAL_9 = 2.75573188446287533e-06; // 1/9!\r\n\r\nfloat sin_taylor_fp32(float a) {\r\n  float r, s, t, x;\r\n\r\n  if (a == 0.0) {\r\n    return 0.0;\r\n  }\r\n\r\n  x = -a * a;\r\n  s = a;\r\n  r = a;\r\n\r\n  r = r * x;\r\n  t = r * INVERSE_FACTORIAL_3;\r\n  s = s + t;\r\n\r\n  r = r * x;\r\n  t = r * INVERSE_FACTORIAL_5;\r\n  s = s + t;\r\n\r\n  r = r * x;\r\n  t = r * INVERSE_FACTORIAL_7;\r\n  s = s + t;\r\n\r\n  r = r * x;\r\n  t = r * INVERSE_FACTORIAL_9;\r\n  s = s + t;\r\n\r\n  return s;\r\n}\r\n\r\nvoid sincos_taylor_fp32(float a, out float sin_t, out float cos_t) {\r\n  if (a == 0.0) {\r\n    sin_t = 0.0;\r\n    cos_t = 1.0;\r\n  }\r\n  sin_t = sin_taylor_fp32(a);\r\n  cos_t = sqrt(1.0 - sin_t * sin_t);\r\n}\r\n\r\nfloat tan_taylor_fp32(float a) {\r\n    float sin_a;\r\n    float cos_a;\r\n\r\n    if (a == 0.0) {\r\n        return 0.0;\r\n    }\r\n\r\n    // 2pi range reduction\r\n    float z = floor(a / TWO_PI);\r\n    float r = a - TWO_PI * z;\r\n\r\n    float t;\r\n    float q = floor(r / PI_2 + 0.5);\r\n    int j = int(q);\r\n\r\n    if (j < -2 || j > 2) {\r\n        return 1.0 / 0.0;\r\n    }\r\n\r\n    t = r - PI_2 * q;\r\n\r\n    q = floor(t / PI_16 + 0.5);\r\n    int k = int(q);\r\n    int abs_k = int(abs(float(k)));\r\n\r\n    if (abs_k > 4) {\r\n        return 1.0 / 0.0;\r\n    } else {\r\n        t = t - PI_16 * q;\r\n    }\r\n\r\n    float u = 0.0;\r\n    float v = 0.0;\r\n\r\n    float sin_t, cos_t;\r\n    float s, c;\r\n    sincos_taylor_fp32(t, sin_t, cos_t);\r\n\r\n    if (k == 0) {\r\n        s = sin_t;\r\n        c = cos_t;\r\n    } else {\r\n        if (abs(float(abs_k) - 1.0) < 0.5) {\r\n            u = COS_TABLE_0;\r\n            v = SIN_TABLE_0;\r\n        } else if (abs(float(abs_k) - 2.0) < 0.5) {\r\n            u = COS_TABLE_1;\r\n            v = SIN_TABLE_1;\r\n        } else if (abs(float(abs_k) - 3.0) < 0.5) {\r\n            u = COS_TABLE_2;\r\n            v = SIN_TABLE_2;\r\n        } else if (abs(float(abs_k) - 4.0) < 0.5) {\r\n            u = COS_TABLE_3;\r\n            v = SIN_TABLE_3;\r\n        }\r\n        if (k > 0) {\r\n            s = u * sin_t + v * cos_t;\r\n            c = u * cos_t - v * sin_t;\r\n        } else {\r\n            s = u * sin_t - v * cos_t;\r\n            c = u * cos_t + v * sin_t;\r\n        }\r\n    }\r\n\r\n    if (j == 0) {\r\n        sin_a = s;\r\n        cos_a = c;\r\n    } else if (j == 1) {\r\n        sin_a = c;\r\n        cos_a = -s;\r\n    } else if (j == -1) {\r\n        sin_a = -c;\r\n        cos_a = s;\r\n    } else {\r\n        sin_a = -s;\r\n        cos_a = -c;\r\n    }\r\n    return sin_a / cos_a;\r\n}\r\n#endif\r\n\r\nfloat tan_fp32(float a) {\r\n#ifdef LUMA_FP32_TAN_PRECISION_WORKAROUND\r\n  return tan_taylor_fp32(a);\r\n#else\r\n  return tan(a);\r\n#endif\r\n}\r\n`;\r\n\r\n/**\r\n * 32 bit math library (fixups for GPUs)\r\n */\r\nexport const fp32 = {\r\n  name: 'fp32',\r\n  vs: fp32shader\r\n};\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAEpC,4CAA4C;;;;AAE5C,MAAM,UAAU,GAAG,QAAA,EAAU,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAuJ7B,CAAC;AAKK,MAAM,IAAI,GAAG;IAClB,IAAI,EAAE,MAAM;IACZ,EAAE,EAAE,UAAU;CACf,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4667, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4673, "column": 0}, "map": {"version":3,"file":"picking.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/modules/engine/picking/picking.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {ShaderModule} from '../../../lib/shader-module/shader-module';\r\nimport type {NumberArray3, NumberArray4} from '@math.gl/core';\r\n\r\n// cyan color\r\nconst DEFAULT_HIGHLIGHT_COLOR: NumberArray4 = [0, 1, 1, 1];\r\n\r\n/**\r\n * Props for the picking module, which depending on mode renders picking colors or highlighted item.\r\n * When active, renders picking colors, assumed to be rendered to off-screen \"picking\" buffer.\r\n * When inactive, renders normal colors, with the exception of selected object which is rendered with highlight\r\n */\r\nexport type PickingProps = {\r\n  /** Are we picking? I.e. rendering picking colors? */\r\n  isActive?: boolean;\r\n  /** Set to true when picking an attribute value instead of object index */\r\n  isAttribute?: boolean;\r\n  /** Set to a picking color to visually highlight that item, or `null` to explicitly clear **/\r\n  highlightedObjectColor?: NumberArray3 | null;\r\n  /** Color of visual highlight of \"selected\" item */\r\n  highlightColor?: NumberArray3 | NumberArray4;\r\n  /** Color range 0-1 or 0-255 */\r\n  useFloatColors?: boolean;\r\n};\r\n\r\n/**\r\n * Uniforms for the picking module, which renders picking colors and highlighted item.\r\n * When active, renders picking colors, assumed to be rendered to off-screen \"picking\" buffer.\r\n * When inactive, renders normal colors, with the exception of selected object which is rendered with highlight\r\n */\r\nexport type PickingUniforms = {\r\n  /**\r\n   * When true, renders picking colors. Set when rendering to off-screen \"picking\" buffer.\r\n   * When false, renders normal colors, with the exception of selected object which is rendered with highlight\r\n   */\r\n  isActive?: boolean;\r\n  /** Set to true when picking an attribute value instead of object index */\r\n  isAttribute?: boolean;\r\n  /** Color range 0-1 or 0-255 */\r\n  useFloatColors?: boolean;\r\n  /** Do we have a highlighted item? */\r\n  isHighlightActive?: boolean;\r\n  /** Set to a picking color to visually highlight that item */\r\n  highlightedObjectColor?: NumberArray3;\r\n  /** Color of visual highlight of \"selected\" item */\r\n  highlightColor?: NumberArray4;\r\n};\r\n\r\nconst vs = /* glsl */ `\\\r\nuniform pickingUniforms {\r\n  float isActive;\r\n  float isAttribute;\r\n  float isHighlightActive;\r\n  float useFloatColors;\r\n  vec3 highlightedObjectColor;\r\n  vec4 highlightColor;\r\n} picking;\r\n\r\nout vec4 picking_vRGBcolor_Avalid;\r\n\r\n// Normalize unsigned byte color to 0-1 range\r\nvec3 picking_normalizeColor(vec3 color) {\r\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\r\n}\r\n\r\n// Normalize unsigned byte color to 0-1 range\r\nvec4 picking_normalizeColor(vec4 color) {\r\n  return picking.useFloatColors > 0.5 ? color : color / 255.0;\r\n}\r\n\r\nbool picking_isColorZero(vec3 color) {\r\n  return dot(color, vec3(1.0)) < 0.00001;\r\n}\r\n\r\nbool picking_isColorValid(vec3 color) {\r\n  return dot(color, vec3(1.0)) > 0.00001;\r\n}\r\n\r\n// Check if this vertex is highlighted \r\nbool isVertexHighlighted(vec3 vertexColor) {\r\n  vec3 highlightedObjectColor = picking_normalizeColor(picking.highlightedObjectColor);\r\n  return\r\n    bool(picking.isHighlightActive) && picking_isColorZero(abs(vertexColor - highlightedObjectColor));\r\n}\r\n\r\n// Set the current picking color\r\nvoid picking_setPickingColor(vec3 pickingColor) {\r\n  pickingColor = picking_normalizeColor(pickingColor);\r\n\r\n  if (bool(picking.isActive)) {\r\n    // Use alpha as the validity flag. If pickingColor is [0, 0, 0] fragment is non-pickable\r\n    picking_vRGBcolor_Avalid.a = float(picking_isColorValid(pickingColor));\r\n\r\n    if (!bool(picking.isAttribute)) {\r\n      // Stores the picking color so that the fragment shader can render it during picking\r\n      picking_vRGBcolor_Avalid.rgb = pickingColor;\r\n    }\r\n  } else {\r\n    // Do the comparison with selected item color in vertex shader as it should mean fewer compares\r\n    picking_vRGBcolor_Avalid.a = float(isVertexHighlighted(pickingColor));\r\n  }\r\n}\r\n\r\nvoid picking_setPickingAttribute(float value) {\r\n  if (bool(picking.isAttribute)) {\r\n    picking_vRGBcolor_Avalid.r = value;\r\n  }\r\n}\r\n\r\nvoid picking_setPickingAttribute(vec2 value) {\r\n  if (bool(picking.isAttribute)) {\r\n    picking_vRGBcolor_Avalid.rg = value;\r\n  }\r\n}\r\n\r\nvoid picking_setPickingAttribute(vec3 value) {\r\n  if (bool(picking.isAttribute)) {\r\n    picking_vRGBcolor_Avalid.rgb = value;\r\n  }\r\n}\r\n`;\r\n\r\nconst fs = /* glsl */ `\\\r\nuniform pickingUniforms {\r\n  float isActive;\r\n  float isAttribute;\r\n  float isHighlightActive;\r\n  float useFloatColors;\r\n  vec3 highlightedObjectColor;\r\n  vec4 highlightColor;\r\n} picking;\r\n\r\nin vec4 picking_vRGBcolor_Avalid;\r\n\r\n/*\r\n * Returns highlight color if this item is selected.\r\n */\r\nvec4 picking_filterHighlightColor(vec4 color) {\r\n  // If we are still picking, we don't highlight\r\n  if (picking.isActive > 0.5) {\r\n    return color;\r\n  }\r\n\r\n  bool selected = bool(picking_vRGBcolor_Avalid.a);\r\n\r\n  if (selected) {\r\n    // Blend in highlight color based on its alpha value\r\n    float highLightAlpha = picking.highlightColor.a;\r\n    float blendedAlpha = highLightAlpha + color.a * (1.0 - highLightAlpha);\r\n    float highLightRatio = highLightAlpha / blendedAlpha;\r\n\r\n    vec3 blendedRGB = mix(color.rgb, picking.highlightColor.rgb, highLightRatio);\r\n    return vec4(blendedRGB, blendedAlpha);\r\n  } else {\r\n    return color;\r\n  }\r\n}\r\n\r\n/*\r\n * Returns picking color if picking enabled else unmodified argument.\r\n */\r\nvec4 picking_filterPickingColor(vec4 color) {\r\n  if (bool(picking.isActive)) {\r\n    if (picking_vRGBcolor_Avalid.a == 0.0) {\r\n      discard;\r\n    }\r\n    return picking_vRGBcolor_Avalid;\r\n  }\r\n  return color;\r\n}\r\n\r\n/*\r\n * Returns picking color if picking is enabled if not\r\n * highlight color if this item is selected, otherwise unmodified argument.\r\n */\r\nvec4 picking_filterColor(vec4 color) {\r\n  vec4 highlightColor = picking_filterHighlightColor(color);\r\n  return picking_filterPickingColor(highlightColor);\r\n}\r\n`;\r\n\r\n/**\r\n * Provides support for color-coding-based picking and highlighting.\r\n * In particular, supports picking a specific instance in an instanced\r\n * draw call and highlighting an instance based on its picking color,\r\n * and correspondingly, supports picking and highlighting groups of\r\n * primitives with the same picking color in non-instanced draw-calls\r\n */\r\nexport const picking = {\r\n  props: {} as PickingProps,\r\n  uniforms: {} as PickingUniforms,\r\n\r\n  name: 'picking',\r\n\r\n  uniformTypes: {\r\n    isActive: 'f32',\r\n    isAttribute: 'f32',\r\n    isHighlightActive: 'f32',\r\n    useFloatColors: 'f32',\r\n    highlightedObjectColor: 'vec3<f32>',\r\n    highlightColor: 'vec4<f32>'\r\n  },\r\n  defaultUniforms: {\r\n    isActive: false,\r\n    isAttribute: false,\r\n    isHighlightActive: false,\r\n    useFloatColors: true,\r\n    highlightedObjectColor: [0, 0, 0],\r\n    highlightColor: DEFAULT_HIGHLIGHT_COLOR\r\n  },\r\n\r\n  vs,\r\n  fs,\r\n  getUniforms\r\n} as const satisfies ShaderModule<PickingProps, PickingUniforms>;\r\n\r\nfunction getUniforms(opts: PickingProps = {}, prevUniforms?: PickingUniforms): PickingUniforms {\r\n  const uniforms = {} as PickingUniforms;\r\n\r\n  if (opts.highlightedObjectColor === undefined) {\r\n    // Unless highlightedObjectColor explicitly null or set, do not update state\r\n  } else if (opts.highlightedObjectColor === null) {\r\n    uniforms.isHighlightActive = false;\r\n  } else {\r\n    uniforms.isHighlightActive = true;\r\n    const highlightedObjectColor = opts.highlightedObjectColor.slice(0, 3) as NumberArray3;\r\n    uniforms.highlightedObjectColor = highlightedObjectColor;\r\n  }\r\n\r\n  if (opts.highlightColor) {\r\n    const color = Array.from(opts.highlightColor, x => x / 255);\r\n    if (!Number.isFinite(color[3])) {\r\n      color[3] = 1;\r\n    }\r\n    uniforms.highlightColor = color as NumberArray4;\r\n  }\r\n\r\n  if (opts.isActive !== undefined) {\r\n    uniforms.isActive = Boolean(opts.isActive);\r\n    uniforms.isAttribute = Boolean(opts.isAttribute);\r\n  }\r\n\r\n  if (opts.useFloatColors !== undefined) {\r\n    uniforms.useFloatColors = Boolean(opts.useFloatColors);\r\n  }\r\n\r\n  return uniforms;\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAKpC,aAAa;;;;AACb,MAAM,uBAAuB,GAAiB;IAAC,CAAC;IAAE,CAAC;IAAE,CAAC;IAAE,CAAC;CAAC,CAAC;AA2C3D,MAAM,EAAE,GAAG,QAAA,EAAU,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAwErB,CAAC;AAEF,MAAM,EAAE,GAAG,QAAA,EAAU,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyDrB,CAAC;AASK,MAAM,OAAO,GAAG;IACrB,KAAK,EAAE,CAAA,CAAkB;IACzB,QAAQ,EAAE,CAAA,CAAqB;IAE/B,IAAI,EAAE,SAAS;IAEf,YAAY,EAAE;QACZ,QAAQ,EAAE,KAAK;QACf,WAAW,EAAE,KAAK;QAClB,iBAAiB,EAAE,KAAK;QACxB,cAAc,EAAE,KAAK;QACrB,sBAAsB,EAAE,WAAW;QACnC,cAAc,EAAE,WAAW;KAC5B;IACD,eAAe,EAAE;QACf,QAAQ,EAAE,KAAK;QACf,WAAW,EAAE,KAAK;QAClB,iBAAiB,EAAE,KAAK;QACxB,cAAc,EAAE,IAAI;QACpB,sBAAsB,EAAE;YAAC,CAAC;YAAE,CAAC;YAAE,CAAC;SAAC;QACjC,cAAc,EAAE,uBAAuB;KACxC;IAED,EAAE;IACF,EAAE;IACF,WAAW;CACmD,CAAC;AAEjE,SAAS,WAAW,CAAC,OAAqB,CAAA,CAAE,EAAE,YAA8B;IAC1E,MAAM,QAAQ,GAAG,CAAA,CAAqB,CAAC;IAEvC,IAAI,IAAI,CAAC,sBAAsB,KAAK,SAAS,EAAE,CAAC;IAC9C,4EAA4E;IAC9E,CAAC,MAAM,IAAI,IAAI,CAAC,sBAAsB,KAAK,IAAI,EAAE,CAAC;QAChD,QAAQ,CAAC,iBAAiB,GAAG,KAAK,CAAC;IACrC,CAAC,MAAM,CAAC;QACN,QAAQ,CAAC,iBAAiB,GAAG,IAAI,CAAC;QAClC,MAAM,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAiB,CAAC;QACvF,QAAQ,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;IAC3D,CAAC;IAED,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,MAAM,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,GAAE,CAAC,CAAC,EAAE,AAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QAC5D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC/B,KAAK,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,CAAC;QACD,QAAQ,CAAC,cAAc,GAAG,KAAqB,CAAC;IAClD,CAAC;IAED,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE,CAAC;QAChC,QAAQ,CAAC,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC3C,QAAQ,CAAC,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACnD,CAAC;IAED,IAAI,IAAI,CAAC,cAAc,KAAK,SAAS,EAAE,CAAC;QACtC,QAAQ,CAAC,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACzD,CAAC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4872, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4878, "column": 0}, "map": {"version":3,"file":"get-shader-layout-wgsl.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/wgsl/get-shader-layout-wgsl.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {ShaderAttributeType, ShaderLayout, log} from '@luma.gl/core';\r\nimport {WgslReflect} from 'wgsl_reflect';\r\n\r\n/**\r\n * Parse a ShaderLayout from WGSL shader source code.\r\n * @param source WGSL source code (can contain both @vertex and @fragment entry points)\r\n * @returns\r\n */\r\nexport function getShaderLayoutFromWGSL(source: string): ShaderLayout {\r\n  const shaderLayout: ShaderLayout = {attributes: [], bindings: []};\r\n\r\n  let parsedWGSL: WgslReflect;\r\n  try {\r\n    parsedWGSL = parseWGSL(source);\r\n  } catch (error: any) {\r\n    log.error(error.message)();\r\n    return shaderLayout;\r\n  }\r\n\r\n  for (const uniform of parsedWGSL.uniforms) {\r\n    const members = [];\r\n    for (const attribute of (uniform.type as any)?.members || []) {\r\n      members.push({\r\n        name: attribute.name,\r\n        type: getType(attribute.type)\r\n      });\r\n    }\r\n\r\n    shaderLayout.bindings.push({\r\n      type: 'uniform',\r\n      name: uniform.name,\r\n      group: uniform.group,\r\n      location: uniform.binding,\r\n      // @ts-expect-error TODO - unused for now but needs fixing\r\n      members\r\n    });\r\n  }\r\n\r\n  for (const texture of parsedWGSL.textures) {\r\n    shaderLayout.bindings.push({\r\n      type: 'texture',\r\n      name: texture.name,\r\n      group: texture.group,\r\n      location: texture.binding\r\n    });\r\n  }\r\n\r\n  for (const sampler of parsedWGSL.samplers) {\r\n    shaderLayout.bindings.push({\r\n      type: 'sampler',\r\n      name: sampler.name,\r\n      group: sampler.group,\r\n      location: sampler.binding\r\n    });\r\n  }\r\n\r\n  const vertex = parsedWGSL.entry.vertex[0]; // \"main\"\r\n\r\n  // Vertex shader inputs\r\n  const attributeCount = vertex?.inputs.length || 0; // inputs to \"main\"\r\n  for (let i = 0; i < attributeCount; i++) {\r\n    const wgslAttribute = vertex.inputs[i];\r\n\r\n    // locationType can be \"builtin\"\r\n    if (wgslAttribute.locationType === 'location') {\r\n      const type = getType(wgslAttribute.type);\r\n\r\n      shaderLayout.attributes.push({\r\n        name: wgslAttribute.name,\r\n        location: Number(wgslAttribute.location),\r\n        type\r\n      });\r\n    }\r\n  }\r\n  return shaderLayout;\r\n}\r\n\r\n/** Get a valid shader attribute type string from a wgsl-reflect type */\r\nfunction getType(type: any): ShaderAttributeType {\r\n  return type.format ? `${type.name}<${type.format.name}>` : type.name;\r\n}\r\n\r\nfunction parseWGSL(source: string): WgslReflect {\r\n  try {\r\n    return new WgslReflect(source);\r\n  } catch (error: any) {\r\n    if (error instanceof Error) {\r\n      throw error;\r\n    }\r\n    let message = 'WGSL parse error';\r\n    if (typeof error === 'object' && error?.message) {\r\n      message += `: ${error.message} `;\r\n    }\r\n    if (typeof error === 'object' && error?.token) {\r\n      message += error.token.line || '';\r\n    }\r\n    throw new Error(message, {cause: error});\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4972, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4978, "column": 0}, "map": {"version":3,"file":"shader-utils.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/lib/glsl-utils/shader-utils.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nconst FS_GLES = /* glsl */ `\\\r\nout vec4 transform_output;\r\nvoid main() {\r\n  transform_output = vec4(0);\r\n}`;\r\nconst FS300 = `#version 300 es\\n${FS_GLES}`;\r\n\r\ntype QualifierInfo = {\r\n  qualifier: string;\r\n  type: string;\r\n  name: string;\r\n};\r\n\r\n// Prase given glsl line and return qualifier details or null\r\nexport function getQualifierDetails(\r\n  line: string,\r\n  qualifiers: string | string[]\r\n): QualifierInfo | null {\r\n  qualifiers = Array.isArray(qualifiers) ? qualifiers : [qualifiers];\r\n  const words = line.replace(/^\\s+/, '').split(/\\s+/);\r\n  // TODO add support for precession qualifiers (highp, mediump and lowp)\r\n  const [qualifier, type, definition] = words;\r\n  if (!qualifiers.includes(qualifier) || !type || !definition) {\r\n    return null;\r\n  }\r\n  const name = definition.split(';')[0];\r\n  return {qualifier, type, name};\r\n}\r\n\r\n/**\r\n * Given the shader input and output variable names,\r\n * builds and return a pass through fragment shader.\r\n */\r\nexport function getPassthroughFS(options?: {\r\n  input?: string;\r\n  inputChannels?: 1 | 2 | 3 | 4;\r\n  output?: string;\r\n}): string {\r\n  const {input, inputChannels, output} = options || {};\r\n  if (!input) {\r\n    // Default shader\r\n    return FS300;\r\n  }\r\n  if (!inputChannels) {\r\n    throw new Error('inputChannels');\r\n  }\r\n  const inputType = channelCountToType(inputChannels);\r\n  const outputValue = convertToVec4(input, inputChannels);\r\n  return `\\\r\n#version 300 es\r\nin ${inputType} ${input};\r\nout vec4 ${output};\r\nvoid main() {\r\n  ${output} = ${outputValue};\r\n}`;\r\n}\r\n\r\n/** convert glsl type to suffix */\r\nexport function typeToChannelSuffix(type: string): 'x' | 'xy' | 'xyz' | 'xyzw' {\r\n  // prettier-ignore\r\n  switch (type) {\r\n    case 'float': return 'x';\r\n    case 'vec2': return 'xy';\r\n    case 'vec3': return 'xyz';\r\n    case 'vec4': return 'xyzw';\r\n    default:\r\n      throw new Error(type);\r\n  }\r\n}\r\n\r\n/** convert glsl type to channel count */\r\nexport function typeToChannelCount(type: string): 1 | 2 | 3 | 4 {\r\n  // prettier-ignore\r\n  switch (type) {\r\n    case 'float': return 1;\r\n    case 'vec2': return 2;\r\n    case 'vec3': return 3;\r\n    case 'vec4': return 4;\r\n    default:\r\n      throw new Error(type);\r\n  }\r\n}\r\nfunction channelCountToType(channels: 1 | 2 | 3 | 4): 'float' | 'vec2' | 'vec3' | 'vec4' {\r\n  // prettier-ignore\r\n  switch (channels) {\r\n    case 1: return 'float';\r\n    case 2: return 'vec2';\r\n    case 3: return 'vec3';\r\n    case 4: return 'vec4';\r\n    default:\r\n      throw new Error(`invalid channels: ${channels}`);\r\n  }\r\n}\r\n\r\n/** Returns glsl instruction for converting to vec4 */\r\nexport function convertToVec4(variable: string, channels: 1 | 2 | 3 | 4): string {\r\n  // prettier-ignore\r\n  switch (channels) {\r\n    case 1: return `vec4(${variable}, 0.0, 0.0, 1.0)`;\r\n    case 2: return `vec4(${variable}, 0.0, 1.0)`;\r\n    case 3: return `vec4(${variable}, 1.0)`;\r\n    case 4: return variable;\r\n    default:\r\n      throw new Error(`invalid channels: ${channels}`);\r\n  }\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5090, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5096, "column": 0}, "map": {"version":3,"file":"fp64-arithmetic-glsl.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/modules/math/fp64/fp64-arithmetic-glsl.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nexport const fp64arithmeticShader = /* glsl */ `\\\r\n\r\nuniform fp64arithmeticUniforms {\r\n  uniform float ONE;\r\n} fp64;\r\n\r\n/*\r\nAbout LUMA_FP64_CODE_ELIMINATION_WORKAROUND\r\n\r\nThe purpose of this workaround is to prevent shader compilers from\r\noptimizing away necessary arithmetic operations by swapping their sequences\r\nor transform the equation to some 'equivalent' form.\r\n\r\nThe method is to multiply an artifical variable, ONE, which will be known to\r\nthe compiler to be 1 only at runtime. The whole expression is then represented\r\nas a polynomial with respective to ONE. In the coefficients of all terms, only one a\r\nand one b should appear\r\n\r\nerr = (a + b) * ONE^6 - a * ONE^5 - (a + b) * ONE^4 + a * ONE^3 - b - (a + b) * ONE^2 + a * ONE\r\n*/\r\n\r\n// Divide float number to high and low floats to extend fraction bits\r\nvec2 split(float a) {\r\n  const float SPLIT = 4097.0;\r\n  float t = a * SPLIT;\r\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\r\n  float a_hi = t * fp64.ONE - (t - a);\r\n  float a_lo = a * fp64.ONE - a_hi;\r\n#else\r\n  float a_hi = t - (t - a);\r\n  float a_lo = a - a_hi;\r\n#endif\r\n  return vec2(a_hi, a_lo);\r\n}\r\n\r\n// Divide float number again when high float uses too many fraction bits\r\nvec2 split2(vec2 a) {\r\n  vec2 b = split(a.x);\r\n  b.y += a.y;\r\n  return b;\r\n}\r\n\r\n// Special sum operation when a > b\r\nvec2 quickTwoSum(float a, float b) {\r\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\r\n  float sum = (a + b) * fp64.ONE;\r\n  float err = b - (sum - a) * fp64.ONE;\r\n#else\r\n  float sum = a + b;\r\n  float err = b - (sum - a);\r\n#endif\r\n  return vec2(sum, err);\r\n}\r\n\r\n// General sum operation\r\nvec2 twoSum(float a, float b) {\r\n  float s = (a + b);\r\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\r\n  float v = (s * fp64.ONE - a) * fp64.ONE;\r\n  float err = (a - (s - v) * fp64.ONE) * fp64.ONE * fp64.ONE * fp64.ONE + (b - v);\r\n#else\r\n  float v = s - a;\r\n  float err = (a - (s - v)) + (b - v);\r\n#endif\r\n  return vec2(s, err);\r\n}\r\n\r\nvec2 twoSub(float a, float b) {\r\n  float s = (a - b);\r\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\r\n  float v = (s * fp64.ONE - a) * fp64.ONE;\r\n  float err = (a - (s - v) * fp64.ONE) * fp64.ONE * fp64.ONE * fp64.ONE - (b + v);\r\n#else\r\n  float v = s - a;\r\n  float err = (a - (s - v)) - (b + v);\r\n#endif\r\n  return vec2(s, err);\r\n}\r\n\r\nvec2 twoSqr(float a) {\r\n  float prod = a * a;\r\n  vec2 a_fp64 = split(a);\r\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\r\n  float err = ((a_fp64.x * a_fp64.x - prod) * fp64.ONE + 2.0 * a_fp64.x *\r\n    a_fp64.y * fp64.ONE * fp64.ONE) + a_fp64.y * a_fp64.y * fp64.ONE * fp64.ONE * fp64.ONE;\r\n#else\r\n  float err = ((a_fp64.x * a_fp64.x - prod) + 2.0 * a_fp64.x * a_fp64.y) + a_fp64.y * a_fp64.y;\r\n#endif\r\n  return vec2(prod, err);\r\n}\r\n\r\nvec2 twoProd(float a, float b) {\r\n  float prod = a * b;\r\n  vec2 a_fp64 = split(a);\r\n  vec2 b_fp64 = split(b);\r\n  float err = ((a_fp64.x * b_fp64.x - prod) + a_fp64.x * b_fp64.y +\r\n    a_fp64.y * b_fp64.x) + a_fp64.y * b_fp64.y;\r\n  return vec2(prod, err);\r\n}\r\n\r\nvec2 sum_fp64(vec2 a, vec2 b) {\r\n  vec2 s, t;\r\n  s = twoSum(a.x, b.x);\r\n  t = twoSum(a.y, b.y);\r\n  s.y += t.x;\r\n  s = quickTwoSum(s.x, s.y);\r\n  s.y += t.y;\r\n  s = quickTwoSum(s.x, s.y);\r\n  return s;\r\n}\r\n\r\nvec2 sub_fp64(vec2 a, vec2 b) {\r\n  vec2 s, t;\r\n  s = twoSub(a.x, b.x);\r\n  t = twoSub(a.y, b.y);\r\n  s.y += t.x;\r\n  s = quickTwoSum(s.x, s.y);\r\n  s.y += t.y;\r\n  s = quickTwoSum(s.x, s.y);\r\n  return s;\r\n}\r\n\r\nvec2 mul_fp64(vec2 a, vec2 b) {\r\n  vec2 prod = twoProd(a.x, b.x);\r\n  // y component is for the error\r\n  prod.y += a.x * b.y;\r\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\r\n  prod = split2(prod);\r\n#endif\r\n  prod = quickTwoSum(prod.x, prod.y);\r\n  prod.y += a.y * b.x;\r\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\r\n  prod = split2(prod);\r\n#endif\r\n  prod = quickTwoSum(prod.x, prod.y);\r\n  return prod;\r\n}\r\n\r\nvec2 div_fp64(vec2 a, vec2 b) {\r\n  float xn = 1.0 / b.x;\r\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\r\n  vec2 yn = mul_fp64(a, vec2(xn, 0));\r\n#else\r\n  vec2 yn = a * xn;\r\n#endif\r\n  float diff = (sub_fp64(a, mul_fp64(b, yn))).x;\r\n  vec2 prod = twoProd(xn, diff);\r\n  return sum_fp64(yn, prod);\r\n}\r\n\r\nvec2 sqrt_fp64(vec2 a) {\r\n  if (a.x == 0.0 && a.y == 0.0) return vec2(0.0, 0.0);\r\n  if (a.x < 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);\r\n\r\n  float x = 1.0 / sqrt(a.x);\r\n  float yn = a.x * x;\r\n#if defined(LUMA_FP64_CODE_ELIMINATION_WORKAROUND)\r\n  vec2 yn_sqr = twoSqr(yn) * fp64.ONE;\r\n#else\r\n  vec2 yn_sqr = twoSqr(yn);\r\n#endif\r\n  float diff = sub_fp64(a, yn_sqr).x;\r\n  vec2 prod = twoProd(x * 0.5, diff);\r\n#if defined(LUMA_FP64_HIGH_BITS_OVERFLOW_WORKAROUND)\r\n  return sum_fp64(split(yn), prod);\r\n#else\r\n  return sum_fp64(vec2(yn, 0.0), prod);\r\n#endif\r\n}\r\n`;\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAE7B,MAAM,oBAAoB,GAAG,QAAA,EAAU,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyK9C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5278, "column": 0}, "map": {"version":3,"file":"fp64-utils.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/modules/math/fp64/fp64-utils.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport type {NumericArray} from '@math.gl/types';\r\n\r\n/**\r\n * Calculate WebGL 64 bit float\r\n * @param a  - the input float number\r\n * @param out - the output array. If not supplied, a new array is created.\r\n * @param startIndex - the index in the output array to fill from. Default 0.\r\n * @returns - the fp64 representation of the input number\r\n */\r\nexport function fp64ify(a: number, out: NumericArray = [], startIndex: number = 0): NumericArray {\r\n  const hiPart = Math.fround(a);\r\n  const loPart = a - hiPart;\r\n  out[startIndex] = hiPart;\r\n  out[startIndex + 1] = loPart;\r\n  return out;\r\n}\r\n\r\n/**\r\n * Calculate the low part of a WebGL 64 bit float\r\n * @param a the input float number\r\n * @returns the lower 32 bit of the number\r\n */\r\nexport function fp64LowPart(a: number): number {\r\n  return a - Math.fround(a);\r\n}\r\n\r\n/**\r\n * Calculate WebGL 64 bit matrix (transposed \"Float64Array\")\r\n * @param matrix  the input matrix\r\n * @returns the fp64 representation of the input matrix\r\n */\r\nexport function fp64ifyMatrix4(matrix: NumericArray): Float32Array {\r\n  // Transpose the projection matrix to column major for GLSL.\r\n  const matrixFP64 = new Float32Array(32);\r\n  for (let i = 0; i < 4; ++i) {\r\n    for (let j = 0; j < 4; ++j) {\r\n      const index = i * 4 + j;\r\n      fp64ify(matrix[j * 4 + i], matrixFP64, index * 2);\r\n    }\r\n  }\r\n  return matrixFP64;\r\n}\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAIpC;;;;;;GAMG;;;;;AACG,SAAU,OAAO,CAAC,CAAS,EAAE,MAAoB,EAAE,EAAE,aAAqB,CAAC;IAC/E,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC9B,MAAM,MAAM,GAAG,CAAC,GAAG,MAAM,CAAC;IAC1B,GAAG,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC;IACzB,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC;IAC7B,OAAO,GAAG,CAAC;AACb,CAAC;AAOK,SAAU,WAAW,CAAC,CAAS;IACnC,OAAO,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5B,CAAC;AAOK,SAAU,cAAc,CAAC,MAAoB;IACjD,4DAA4D;IAC5D,MAAM,UAAU,GAAG,IAAI,YAAY,CAAC,EAAE,CAAC,CAAC;IACxC,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAE,CAAC;QAC3B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,CAAE,CAAC;YAC3B,MAAM,KAAK,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,UAAU,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;QACpD,CAAC;IACH,CAAC;IACD,OAAO,UAAU,CAAC;AACpB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5319, "column": 0}, "map": {"version":3,"file":"fp64-functions-glsl.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/modules/math/fp64/fp64-functions-glsl.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nexport const fp64functionShader = /* glsl */ `\\\r\nconst vec2 E_FP64 = vec2(2.7182817459106445e+00, 8.254840366817007e-08);\r\nconst vec2 LOG2_FP64 = vec2(0.6931471824645996e+00, -1.9046542121259336e-09);\r\nconst vec2 PI_FP64 = vec2(3.1415927410125732, -8.742278012618954e-8);\r\nconst vec2 TWO_PI_FP64 = vec2(6.2831854820251465, -1.7484556025237907e-7);\r\nconst vec2 PI_2_FP64 = vec2(1.5707963705062866, -4.371139006309477e-8);\r\nconst vec2 PI_4_FP64 = vec2(0.7853981852531433, -2.1855695031547384e-8);\r\nconst vec2 PI_16_FP64 = vec2(0.19634954631328583, -5.463923757886846e-9);\r\nconst vec2 PI_16_2_FP64 = vec2(0.39269909262657166, -1.0927847515773692e-8);\r\nconst vec2 PI_16_3_FP64 = vec2(0.5890486240386963, -1.4906100798128818e-9);\r\nconst vec2 PI_180_FP64 = vec2(0.01745329238474369, 1.3519960498364902e-10);\r\n\r\nconst vec2 SIN_TABLE_0_FP64 = vec2(0.19509032368659973, -1.6704714833615242e-9);\r\nconst vec2 SIN_TABLE_1_FP64 = vec2(0.3826834261417389, 6.22335089017767e-9);\r\nconst vec2 SIN_TABLE_2_FP64 = vec2(0.5555702447891235, -1.1769521357507529e-8);\r\nconst vec2 SIN_TABLE_3_FP64 = vec2(0.7071067690849304, 1.2101617041793133e-8);\r\n\r\nconst vec2 COS_TABLE_0_FP64 = vec2(0.9807852506637573, 2.9739473106360492e-8);\r\nconst vec2 COS_TABLE_1_FP64 = vec2(0.9238795042037964, 2.8307490351764386e-8);\r\nconst vec2 COS_TABLE_2_FP64 = vec2(0.8314695954322815, 1.6870263741530778e-8);\r\nconst vec2 COS_TABLE_3_FP64 = vec2(0.7071067690849304, 1.2101617152815436e-8);\r\n\r\nconst vec2 INVERSE_FACTORIAL_3_FP64 = vec2(1.666666716337204e-01, -4.967053879312289e-09); // 1/3!\r\nconst vec2 INVERSE_FACTORIAL_4_FP64 = vec2(4.16666679084301e-02, -1.2417634698280722e-09); // 1/4!\r\nconst vec2 INVERSE_FACTORIAL_5_FP64 = vec2(8.333333767950535e-03, -4.34617203337595e-10); // 1/5!\r\nconst vec2 INVERSE_FACTORIAL_6_FP64 = vec2(1.3888889225199819e-03, -3.3631094437103215e-11); // 1/6!\r\nconst vec2 INVERSE_FACTORIAL_7_FP64 = vec2(1.9841270113829523e-04,  -2.725596874933456e-12); // 1/7!\r\nconst vec2 INVERSE_FACTORIAL_8_FP64 = vec2(2.4801587642286904e-05, -3.406996025904184e-13); // 1/8!\r\nconst vec2 INVERSE_FACTORIAL_9_FP64 = vec2(2.75573188446287533e-06, 3.7935713937038186e-14); // 1/9!\r\nconst vec2 INVERSE_FACTORIAL_10_FP64 = vec2(2.755731998149713e-07, -7.575112367869873e-15); // 1/10!\r\n\r\nfloat nint(float d) {\r\n    if (d == floor(d)) return d;\r\n    return floor(d + 0.5);\r\n}\r\n\r\nvec2 nint_fp64(vec2 a) {\r\n    float hi = nint(a.x);\r\n    float lo;\r\n    vec2 tmp;\r\n    if (hi == a.x) {\r\n        lo = nint(a.y);\r\n        tmp = quickTwoSum(hi, lo);\r\n    } else {\r\n        lo = 0.0;\r\n        if (abs(hi - a.x) == 0.5 && a.y < 0.0) {\r\n            hi -= 1.0;\r\n        }\r\n        tmp = vec2(hi, lo);\r\n    }\r\n    return tmp;\r\n}\r\n\r\n/* k_power controls how much range reduction we would like to have\r\nRange reduction uses the following method:\r\nassume a = k_power * r + m * log(2), k and m being integers.\r\nSet k_power = 4 (we can choose other k to trade accuracy with performance.\r\nwe only need to calculate exp(r) and using exp(a) = 2^m * exp(r)^k_power;\r\n*/\r\n\r\nvec2 exp_fp64(vec2 a) {\r\n  // We need to make sure these two numbers match\r\n  // as bit-wise shift is not available in GLSL 1.0\r\n  const int k_power = 4;\r\n  const float k = 16.0;\r\n\r\n  const float inv_k = 1.0 / k;\r\n\r\n  if (a.x <= -88.0) return vec2(0.0, 0.0);\r\n  if (a.x >= 88.0) return vec2(1.0 / 0.0, 1.0 / 0.0);\r\n  if (a.x == 0.0 && a.y == 0.0) return vec2(1.0, 0.0);\r\n  if (a.x == 1.0 && a.y == 0.0) return E_FP64;\r\n\r\n  float m = floor(a.x / LOG2_FP64.x + 0.5);\r\n  vec2 r = sub_fp64(a, mul_fp64(LOG2_FP64, vec2(m, 0.0))) * inv_k;\r\n  vec2 s, t, p;\r\n\r\n  p = mul_fp64(r, r);\r\n  s = sum_fp64(r, p * 0.5);\r\n  p = mul_fp64(p, r);\r\n  t = mul_fp64(p, INVERSE_FACTORIAL_3_FP64);\r\n\r\n  s = sum_fp64(s, t);\r\n  p = mul_fp64(p, r);\r\n  t = mul_fp64(p, INVERSE_FACTORIAL_4_FP64);\r\n\r\n  s = sum_fp64(s, t);\r\n  p = mul_fp64(p, r);\r\n  t = mul_fp64(p, INVERSE_FACTORIAL_5_FP64);\r\n\r\n  // s = sum_fp64(s, t);\r\n  // p = mul_fp64(p, r);\r\n  // t = mul_fp64(p, INVERSE_FACTORIAL_6_FP64);\r\n\r\n  // s = sum_fp64(s, t);\r\n  // p = mul_fp64(p, r);\r\n  // t = mul_fp64(p, INVERSE_FACTORIAL_7_FP64);\r\n\r\n  s = sum_fp64(s, t);\r\n\r\n\r\n  // At this point, s = exp(r) - 1; but after following 4 recursions, we will get exp(r) ^ 512 - 1.\r\n  for (int i = 0; i < k_power; i++) {\r\n    s = sum_fp64(s * 2.0, mul_fp64(s, s));\r\n  }\r\n\r\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\r\n  s = sum_fp64(s, vec2(fp64.ONE, 0.0));\r\n#else\r\n  s = sum_fp64(s, vec2(1.0, 0.0));\r\n#endif\r\n\r\n  return s * pow(2.0, m);\r\n//   return r;\r\n}\r\n\r\nvec2 log_fp64(vec2 a)\r\n{\r\n  if (a.x == 1.0 && a.y == 0.0) return vec2(0.0, 0.0);\r\n  if (a.x <= 0.0) return vec2(0.0 / 0.0, 0.0 / 0.0);\r\n  vec2 x = vec2(log(a.x), 0.0);\r\n  vec2 s;\r\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\r\n  s = vec2(fp64.ONE, 0.0);\r\n#else\r\n  s = vec2(1.0, 0.0);\r\n#endif\r\n\r\n  x = sub_fp64(sum_fp64(x, mul_fp64(a, exp_fp64(-x))), s);\r\n  return x;\r\n}\r\n\r\nvec2 sin_taylor_fp64(vec2 a) {\r\n  vec2 r, s, t, x;\r\n\r\n  if (a.x == 0.0 && a.y == 0.0) {\r\n    return vec2(0.0, 0.0);\r\n  }\r\n\r\n  x = -mul_fp64(a, a);\r\n  s = a;\r\n  r = a;\r\n\r\n  r = mul_fp64(r, x);\r\n  t = mul_fp64(r, INVERSE_FACTORIAL_3_FP64);\r\n  s = sum_fp64(s, t);\r\n\r\n  r = mul_fp64(r, x);\r\n  t = mul_fp64(r, INVERSE_FACTORIAL_5_FP64);\r\n  s = sum_fp64(s, t);\r\n\r\n  /* keep the following commented code in case we need them\r\n  for extra accuracy from the Taylor expansion*/\r\n\r\n  // r = mul_fp64(r, x);\r\n  // t = mul_fp64(r, INVERSE_FACTORIAL_7_FP64);\r\n  // s = sum_fp64(s, t);\r\n\r\n  // r = mul_fp64(r, x);\r\n  // t = mul_fp64(r, INVERSE_FACTORIAL_9_FP64);\r\n  // s = sum_fp64(s, t);\r\n\r\n  return s;\r\n}\r\n\r\nvec2 cos_taylor_fp64(vec2 a) {\r\n  vec2 r, s, t, x;\r\n\r\n  if (a.x == 0.0 && a.y == 0.0) {\r\n    return vec2(1.0, 0.0);\r\n  }\r\n\r\n  x = -mul_fp64(a, a);\r\n  r = x;\r\n  s = sum_fp64(vec2(1.0, 0.0), r * 0.5);\r\n\r\n  r = mul_fp64(r, x);\r\n  t = mul_fp64(r, INVERSE_FACTORIAL_4_FP64);\r\n  s = sum_fp64(s, t);\r\n\r\n  r = mul_fp64(r, x);\r\n  t = mul_fp64(r, INVERSE_FACTORIAL_6_FP64);\r\n  s = sum_fp64(s, t);\r\n\r\n  /* keep the following commented code in case we need them\r\n  for extra accuracy from the Taylor expansion*/\r\n\r\n  // r = mul_fp64(r, x);\r\n  // t = mul_fp64(r, INVERSE_FACTORIAL_8_FP64);\r\n  // s = sum_fp64(s, t);\r\n\r\n  // r = mul_fp64(r, x);\r\n  // t = mul_fp64(r, INVERSE_FACTORIAL_10_FP64);\r\n  // s = sum_fp64(s, t);\r\n\r\n  return s;\r\n}\r\n\r\nvoid sincos_taylor_fp64(vec2 a, out vec2 sin_t, out vec2 cos_t) {\r\n  if (a.x == 0.0 && a.y == 0.0) {\r\n    sin_t = vec2(0.0, 0.0);\r\n    cos_t = vec2(1.0, 0.0);\r\n  }\r\n\r\n  sin_t = sin_taylor_fp64(a);\r\n  cos_t = sqrt_fp64(sub_fp64(vec2(1.0, 0.0), mul_fp64(sin_t, sin_t)));\r\n}\r\n\r\nvec2 sin_fp64(vec2 a) {\r\n    if (a.x == 0.0 && a.y == 0.0) {\r\n        return vec2(0.0, 0.0);\r\n    }\r\n\r\n    // 2pi range reduction\r\n    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));\r\n    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));\r\n\r\n    vec2 t;\r\n    float q = floor(r.x / PI_2_FP64.x + 0.5);\r\n    int j = int(q);\r\n\r\n    if (j < -2 || j > 2) {\r\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\r\n    }\r\n\r\n    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));\r\n\r\n    q = floor(t.x / PI_16_FP64.x + 0.5);\r\n    int k = int(q);\r\n\r\n    if (k == 0) {\r\n        if (j == 0) {\r\n            return sin_taylor_fp64(t);\r\n        } else if (j == 1) {\r\n            return cos_taylor_fp64(t);\r\n        } else if (j == -1) {\r\n            return -cos_taylor_fp64(t);\r\n        } else {\r\n            return -sin_taylor_fp64(t);\r\n        }\r\n    }\r\n\r\n    int abs_k = int(abs(float(k)));\r\n\r\n    if (abs_k > 4) {\r\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\r\n    } else {\r\n        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));\r\n    }\r\n\r\n    vec2 u = vec2(0.0, 0.0);\r\n    vec2 v = vec2(0.0, 0.0);\r\n\r\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\r\n    if (abs(float(abs_k) - 1.0) < 0.5) {\r\n        u = COS_TABLE_0_FP64;\r\n        v = SIN_TABLE_0_FP64;\r\n    } else if (abs(float(abs_k) - 2.0) < 0.5) {\r\n        u = COS_TABLE_1_FP64;\r\n        v = SIN_TABLE_1_FP64;\r\n    } else if (abs(float(abs_k) - 3.0) < 0.5) {\r\n        u = COS_TABLE_2_FP64;\r\n        v = SIN_TABLE_2_FP64;\r\n    } else if (abs(float(abs_k) - 4.0) < 0.5) {\r\n        u = COS_TABLE_3_FP64;\r\n        v = SIN_TABLE_3_FP64;\r\n    }\r\n#else\r\n    if (abs_k == 1) {\r\n        u = COS_TABLE_0_FP64;\r\n        v = SIN_TABLE_0_FP64;\r\n    } else if (abs_k == 2) {\r\n        u = COS_TABLE_1_FP64;\r\n        v = SIN_TABLE_1_FP64;\r\n    } else if (abs_k == 3) {\r\n        u = COS_TABLE_2_FP64;\r\n        v = SIN_TABLE_2_FP64;\r\n    } else if (abs_k == 4) {\r\n        u = COS_TABLE_3_FP64;\r\n        v = SIN_TABLE_3_FP64;\r\n    }\r\n#endif\r\n\r\n    vec2 sin_t, cos_t;\r\n    sincos_taylor_fp64(t, sin_t, cos_t);\r\n\r\n\r\n\r\n    vec2 result = vec2(0.0, 0.0);\r\n    if (j == 0) {\r\n        if (k > 0) {\r\n            result = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\r\n        } else {\r\n            result = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\r\n        }\r\n    } else if (j == 1) {\r\n        if (k > 0) {\r\n            result = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\r\n        } else {\r\n            result = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\r\n        }\r\n    } else if (j == -1) {\r\n        if (k > 0) {\r\n            result = sub_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));\r\n        } else {\r\n            result = -sum_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));\r\n        }\r\n    } else {\r\n        if (k > 0) {\r\n            result = -sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\r\n        } else {\r\n            result = sub_fp64(mul_fp64(v, cos_t), mul_fp64(u, sin_t));\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nvec2 cos_fp64(vec2 a) {\r\n    if (a.x == 0.0 && a.y == 0.0) {\r\n        return vec2(1.0, 0.0);\r\n    }\r\n\r\n    // 2pi range reduction\r\n    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));\r\n    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));\r\n\r\n    vec2 t;\r\n    float q = floor(r.x / PI_2_FP64.x + 0.5);\r\n    int j = int(q);\r\n\r\n    if (j < -2 || j > 2) {\r\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\r\n    }\r\n\r\n    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));\r\n\r\n    q = floor(t.x / PI_16_FP64.x + 0.5);\r\n    int k = int(q);\r\n\r\n    if (k == 0) {\r\n        if (j == 0) {\r\n            return cos_taylor_fp64(t);\r\n        } else if (j == 1) {\r\n            return -sin_taylor_fp64(t);\r\n        } else if (j == -1) {\r\n            return sin_taylor_fp64(t);\r\n        } else {\r\n            return -cos_taylor_fp64(t);\r\n        }\r\n    }\r\n\r\n    int abs_k = int(abs(float(k)));\r\n\r\n    if (abs_k > 4) {\r\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\r\n    } else {\r\n        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));\r\n    }\r\n\r\n    vec2 u = vec2(0.0, 0.0);\r\n    vec2 v = vec2(0.0, 0.0);\r\n\r\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\r\n    if (abs(float(abs_k) - 1.0) < 0.5) {\r\n        u = COS_TABLE_0_FP64;\r\n        v = SIN_TABLE_0_FP64;\r\n    } else if (abs(float(abs_k) - 2.0) < 0.5) {\r\n        u = COS_TABLE_1_FP64;\r\n        v = SIN_TABLE_1_FP64;\r\n    } else if (abs(float(abs_k) - 3.0) < 0.5) {\r\n        u = COS_TABLE_2_FP64;\r\n        v = SIN_TABLE_2_FP64;\r\n    } else if (abs(float(abs_k) - 4.0) < 0.5) {\r\n        u = COS_TABLE_3_FP64;\r\n        v = SIN_TABLE_3_FP64;\r\n    }\r\n#else\r\n    if (abs_k == 1) {\r\n        u = COS_TABLE_0_FP64;\r\n        v = SIN_TABLE_0_FP64;\r\n    } else if (abs_k == 2) {\r\n        u = COS_TABLE_1_FP64;\r\n        v = SIN_TABLE_1_FP64;\r\n    } else if (abs_k == 3) {\r\n        u = COS_TABLE_2_FP64;\r\n        v = SIN_TABLE_2_FP64;\r\n    } else if (abs_k == 4) {\r\n        u = COS_TABLE_3_FP64;\r\n        v = SIN_TABLE_3_FP64;\r\n    }\r\n#endif\r\n\r\n    vec2 sin_t, cos_t;\r\n    sincos_taylor_fp64(t, sin_t, cos_t);\r\n\r\n    vec2 result = vec2(0.0, 0.0);\r\n    if (j == 0) {\r\n        if (k > 0) {\r\n            result = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\r\n        } else {\r\n            result = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\r\n        }\r\n    } else if (j == 1) {\r\n        if (k > 0) {\r\n            result = -sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\r\n        } else {\r\n            result = sub_fp64(mul_fp64(v, cos_t), mul_fp64(u, sin_t));\r\n        }\r\n    } else if (j == -1) {\r\n        if (k > 0) {\r\n            result = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\r\n        } else {\r\n            result = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\r\n        }\r\n    } else {\r\n        if (k > 0) {\r\n            result = sub_fp64(mul_fp64(v, sin_t), mul_fp64(u, cos_t));\r\n        } else {\r\n            result = -sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n\r\nvec2 tan_fp64(vec2 a) {\r\n    vec2 sin_a;\r\n    vec2 cos_a;\r\n\r\n    if (a.x == 0.0 && a.y == 0.0) {\r\n        return vec2(0.0, 0.0);\r\n    }\r\n\r\n    // 2pi range reduction\r\n    vec2 z = nint_fp64(div_fp64(a, TWO_PI_FP64));\r\n    vec2 r = sub_fp64(a, mul_fp64(TWO_PI_FP64, z));\r\n\r\n    vec2 t;\r\n    float q = floor(r.x / PI_2_FP64.x + 0.5);\r\n    int j = int(q);\r\n\r\n\r\n    if (j < -2 || j > 2) {\r\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\r\n    }\r\n\r\n    t = sub_fp64(r, mul_fp64(PI_2_FP64, vec2(q, 0.0)));\r\n\r\n    q = floor(t.x / PI_16_FP64.x + 0.5);\r\n    int k = int(q);\r\n    int abs_k = int(abs(float(k)));\r\n\r\n    // We just can't get PI/16 * 3.0 very accurately.\r\n    // so let's just store it\r\n    if (abs_k > 4) {\r\n        return vec2(0.0 / 0.0, 0.0 / 0.0);\r\n    } else {\r\n        t = sub_fp64(t, mul_fp64(PI_16_FP64, vec2(q, 0.0)));\r\n    }\r\n\r\n\r\n    vec2 u = vec2(0.0, 0.0);\r\n    vec2 v = vec2(0.0, 0.0);\r\n\r\n    vec2 sin_t, cos_t;\r\n    vec2 s, c;\r\n    sincos_taylor_fp64(t, sin_t, cos_t);\r\n\r\n    if (k == 0) {\r\n        s = sin_t;\r\n        c = cos_t;\r\n    } else {\r\n#if defined(NVIDIA_FP64_WORKAROUND) || defined(INTEL_FP64_WORKAROUND)\r\n        if (abs(float(abs_k) - 1.0) < 0.5) {\r\n            u = COS_TABLE_0_FP64;\r\n            v = SIN_TABLE_0_FP64;\r\n        } else if (abs(float(abs_k) - 2.0) < 0.5) {\r\n            u = COS_TABLE_1_FP64;\r\n            v = SIN_TABLE_1_FP64;\r\n        } else if (abs(float(abs_k) - 3.0) < 0.5) {\r\n            u = COS_TABLE_2_FP64;\r\n            v = SIN_TABLE_2_FP64;\r\n        } else if (abs(float(abs_k) - 4.0) < 0.5) {\r\n            u = COS_TABLE_3_FP64;\r\n            v = SIN_TABLE_3_FP64;\r\n        }\r\n#else\r\n        if (abs_k == 1) {\r\n            u = COS_TABLE_0_FP64;\r\n            v = SIN_TABLE_0_FP64;\r\n        } else if (abs_k == 2) {\r\n            u = COS_TABLE_1_FP64;\r\n            v = SIN_TABLE_1_FP64;\r\n        } else if (abs_k == 3) {\r\n            u = COS_TABLE_2_FP64;\r\n            v = SIN_TABLE_2_FP64;\r\n        } else if (abs_k == 4) {\r\n            u = COS_TABLE_3_FP64;\r\n            v = SIN_TABLE_3_FP64;\r\n        }\r\n#endif\r\n        if (k > 0) {\r\n            s = sum_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\r\n            c = sub_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\r\n        } else {\r\n            s = sub_fp64(mul_fp64(u, sin_t), mul_fp64(v, cos_t));\r\n            c = sum_fp64(mul_fp64(u, cos_t), mul_fp64(v, sin_t));\r\n        }\r\n    }\r\n\r\n    if (j == 0) {\r\n        sin_a = s;\r\n        cos_a = c;\r\n    } else if (j == 1) {\r\n        sin_a = c;\r\n        cos_a = -s;\r\n    } else if (j == -1) {\r\n        sin_a = -c;\r\n        cos_a = s;\r\n    } else {\r\n        sin_a = -s;\r\n        cos_a = -c;\r\n    }\r\n    return div_fp64(sin_a, cos_a);\r\n}\r\n\r\nvec2 radians_fp64(vec2 degree) {\r\n  return mul_fp64(degree, PI_180_FP64);\r\n}\r\n\r\nvec2 mix_fp64(vec2 a, vec2 b, float x) {\r\n  vec2 range = sub_fp64(b, a);\r\n  return sum_fp64(a, mul_fp64(range, vec2(x, 0.0)));\r\n}\r\n\r\n// Vector functions\r\n// vec2 functions\r\nvoid vec2_sum_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {\r\n    out_val[0] = sum_fp64(a[0], b[0]);\r\n    out_val[1] = sum_fp64(a[1], b[1]);\r\n}\r\n\r\nvoid vec2_sub_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {\r\n    out_val[0] = sub_fp64(a[0], b[0]);\r\n    out_val[1] = sub_fp64(a[1], b[1]);\r\n}\r\n\r\nvoid vec2_mul_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {\r\n    out_val[0] = mul_fp64(a[0], b[0]);\r\n    out_val[1] = mul_fp64(a[1], b[1]);\r\n}\r\n\r\nvoid vec2_div_fp64(vec2 a[2], vec2 b[2], out vec2 out_val[2]) {\r\n    out_val[0] = div_fp64(a[0], b[0]);\r\n    out_val[1] = div_fp64(a[1], b[1]);\r\n}\r\n\r\nvoid vec2_mix_fp64(vec2 x[2], vec2 y[2], float a, out vec2 out_val[2]) {\r\n  vec2 range[2];\r\n  vec2_sub_fp64(y, x, range);\r\n  vec2 portion[2];\r\n  portion[0] = range[0] * a;\r\n  portion[1] = range[1] * a;\r\n  vec2_sum_fp64(x, portion, out_val);\r\n}\r\n\r\nvec2 vec2_length_fp64(vec2 x[2]) {\r\n  return sqrt_fp64(sum_fp64(mul_fp64(x[0], x[0]), mul_fp64(x[1], x[1])));\r\n}\r\n\r\nvoid vec2_normalize_fp64(vec2 x[2], out vec2 out_val[2]) {\r\n  vec2 length = vec2_length_fp64(x);\r\n  vec2 length_vec2[2];\r\n  length_vec2[0] = length;\r\n  length_vec2[1] = length;\r\n\r\n  vec2_div_fp64(x, length_vec2, out_val);\r\n}\r\n\r\nvec2 vec2_distance_fp64(vec2 x[2], vec2 y[2]) {\r\n  vec2 diff[2];\r\n  vec2_sub_fp64(x, y, diff);\r\n  return vec2_length_fp64(diff);\r\n}\r\n\r\nvec2 vec2_dot_fp64(vec2 a[2], vec2 b[2]) {\r\n  vec2 v[2];\r\n\r\n  v[0] = mul_fp64(a[0], b[0]);\r\n  v[1] = mul_fp64(a[1], b[1]);\r\n\r\n  return sum_fp64(v[0], v[1]);\r\n}\r\n\r\n// vec3 functions\r\nvoid vec3_sub_fp64(vec2 a[3], vec2 b[3], out vec2 out_val[3]) {\r\n  for (int i = 0; i < 3; i++) {\r\n    out_val[i] = sum_fp64(a[i], b[i]);\r\n  }\r\n}\r\n\r\nvoid vec3_sum_fp64(vec2 a[3], vec2 b[3], out vec2 out_val[3]) {\r\n  for (int i = 0; i < 3; i++) {\r\n    out_val[i] = sum_fp64(a[i], b[i]);\r\n  }\r\n}\r\n\r\nvec2 vec3_length_fp64(vec2 x[3]) {\r\n  return sqrt_fp64(sum_fp64(sum_fp64(mul_fp64(x[0], x[0]), mul_fp64(x[1], x[1])),\r\n    mul_fp64(x[2], x[2])));\r\n}\r\n\r\nvec2 vec3_distance_fp64(vec2 x[3], vec2 y[3]) {\r\n  vec2 diff[3];\r\n  vec3_sub_fp64(x, y, diff);\r\n  return vec3_length_fp64(diff);\r\n}\r\n\r\n// vec4 functions\r\nvoid vec4_fp64(vec4 a, out vec2 out_val[4]) {\r\n  out_val[0].x = a[0];\r\n  out_val[0].y = 0.0;\r\n\r\n  out_val[1].x = a[1];\r\n  out_val[1].y = 0.0;\r\n\r\n  out_val[2].x = a[2];\r\n  out_val[2].y = 0.0;\r\n\r\n  out_val[3].x = a[3];\r\n  out_val[3].y = 0.0;\r\n}\r\n\r\nvoid vec4_scalar_mul_fp64(vec2 a[4], vec2 b, out vec2 out_val[4]) {\r\n  out_val[0] = mul_fp64(a[0], b);\r\n  out_val[1] = mul_fp64(a[1], b);\r\n  out_val[2] = mul_fp64(a[2], b);\r\n  out_val[3] = mul_fp64(a[3], b);\r\n}\r\n\r\nvoid vec4_sum_fp64(vec2 a[4], vec2 b[4], out vec2 out_val[4]) {\r\n  for (int i = 0; i < 4; i++) {\r\n    out_val[i] = sum_fp64(a[i], b[i]);\r\n  }\r\n}\r\n\r\nvoid vec4_dot_fp64(vec2 a[4], vec2 b[4], out vec2 out_val) {\r\n  vec2 v[4];\r\n\r\n  v[0] = mul_fp64(a[0], b[0]);\r\n  v[1] = mul_fp64(a[1], b[1]);\r\n  v[2] = mul_fp64(a[2], b[2]);\r\n  v[3] = mul_fp64(a[3], b[3]);\r\n\r\n  out_val = sum_fp64(sum_fp64(v[0], v[1]), sum_fp64(v[2], v[3]));\r\n}\r\n\r\nvoid mat4_vec4_mul_fp64(vec2 b[16], vec2 a[4], out vec2 out_val[4]) {\r\n  vec2 tmp[4];\r\n\r\n  for (int i = 0; i < 4; i++)\r\n  {\r\n    for (int j = 0; j < 4; j++)\r\n    {\r\n      tmp[j] = b[j + i * 4];\r\n    }\r\n    vec4_dot_fp64(a, tmp, out_val[i]);\r\n  }\r\n}\r\n`;\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAE7B,MAAM,kBAAkpB5C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5996, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6002, "column": 0}, "map": {"version":3,"file":"fp64.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/modules/math/fp64/fp64.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {ShaderModule} from '../../../lib/shader-module/shader-module';\r\n\r\nimport {fp64ify, fp64LowPart, fp64ifyMatrix4} from '../../../modules/math/fp64/fp64-utils';\r\nimport {fp64arithmeticShader} from './fp64-arithmetic-glsl';\r\nimport {fp64functionShader} from './fp64-functions-glsl';\r\n\r\ntype FP64Props = {};\r\ntype FP64Uniforms = {ONE: number};\r\ntype FP64Bindings = {};\r\n\r\ntype FP64Utilities = {\r\n  fp64ify: typeof fp64ify;\r\n  fp64LowPart: typeof fp64LowPart;\r\n  fp64ifyMatrix4: typeof fp64ifyMatrix4;\r\n};\r\n\r\nconst defaultUniforms: FP64Uniforms = {\r\n  // Used in LUMA_FP64_CODE_ELIMINATION_WORKAROUND\r\n  ONE: 1.0\r\n};\r\n\r\n/**\r\n * 64bit arithmetic: add, sub, mul, div (small subset of fp64 module)\r\n */\r\nexport const fp64arithmetic: ShaderModule<FP64Props, FP64Uniforms, FP64Bindings> & FP64Utilities = {\r\n  name: 'fp64arithmetic',\r\n  vs: fp64arithmeticShader,\r\n  defaultUniforms,\r\n  uniformTypes: {ONE: 'f32'},\r\n\r\n  // Additional Functions\r\n  fp64ify,\r\n  fp64LowPart,\r\n  fp64ifyMatrix4\r\n};\r\n\r\n/**\r\n * Full 64 bit math library\r\n */\r\nexport const fp64: ShaderModule<{}> & FP64Utilities = {\r\n  name: 'fp64',\r\n  vs: fp64functionShader,\r\n  dependencies: [fp64arithmetic],\r\n\r\n  // Additional Functions\r\n  fp64ify,\r\n  fp64LowPart,\r\n  fp64ifyMatrix4\r\n};\r\n\r\nexport {fp64ify, fp64LowPart, fp64ifyMatrix4};\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;;AAKpC,OAAO,EAAC,oBAAoB,EAAC,kCAA+B;AAD5D,OAAO,EAAC,OAAO,EAAE,WAAW,EAAE,cAAc,EAAC,iDAA8C;AAE3F,OAAO,EAAC,kBAAkB,EAAC,iCAA8B;;;;AAYzD,MAAM,eAAe,GAAiB;IACpC,gDAAgD;IAChD,GAAG,EAAE,GAAG;CACT,CAAC;AAKK,MAAM,cAAc,GAAwE;IACjG,IAAI,EAAE,gBAAgB;IACtB,EAAE,+MAAE,uBAAoB;IACxB,eAAe;IACf,YAAY,EAAE;QAAC,GAAG,EAAE,KAAK;IAAA,CAAC;IAE1B,uBAAuB;6MACvB,UAAO;iNACP,cAAW;IACX,iOAAc;CACf,CAAC;AAKK,MAAM,IAAI,GAAqC;IACpD,IAAI,EAAE,MAAM;IACZ,EAAE,8MAAE,qBAAkB;IACtB,YAAY,EAAE;QAAC,cAAc;KAAC;IAE9B,uBAAuB;6MACvB,UAAO;iNACP,cAAW;oNACX,iBAAc;CACf,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6044, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6050, "column": 0}, "map": {"version":3,"file":"phong-shaders-glsl.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/modules/lighting/phong-material/phong-shaders-glsl.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nexport const PHONG_VS = /* glsl */ `\\\r\nuniform phongMaterialUniforms {\r\n  uniform float ambient;\r\n  uniform float diffuse;\r\n  uniform float shininess;\r\n  uniform vec3  specularColor;\r\n} material;\r\n`;\r\n\r\nexport const PHONG_FS = /* glsl */ `\\\r\nuniform phongMaterialUniforms {\r\n  uniform float ambient;\r\n  uniform float diffuse;\r\n  uniform float shininess;\r\n  uniform vec3  specularColor;\r\n} material;\r\n\r\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 light_direction, vec3 view_direction, vec3 normal_worldspace, vec3 color) {\r\n  vec3 halfway_direction = normalize(light_direction + view_direction);\r\n  float lambertian = dot(light_direction, normal_worldspace);\r\n  float specular = 0.0;\r\n  if (lambertian > 0.0) {\r\n    float specular_angle = max(dot(normal_worldspace, halfway_direction), 0.0);\r\n    specular = pow(specular_angle, material.shininess);\r\n  }\r\n  lambertian = max(lambertian, 0.0);\r\n  return (lambertian * material.diffuse * surfaceColor + specular * material.specularColor) * color;\r\n}\r\n\r\nvec3 lighting_getLightColor(vec3 surfaceColor, vec3 cameraPosition, vec3 position_worldspace, vec3 normal_worldspace) {\r\n  vec3 lightColor = surfaceColor;\r\n\r\n  if (lighting.enabled == 0) {\r\n    return lightColor;\r\n  }\r\n\r\n  vec3 view_direction = normalize(cameraPosition - position_worldspace);\r\n  lightColor = material.ambient * surfaceColor * lighting.ambientColor;\r\n\r\n  for (int i = 0; i < lighting.pointLightCount; i++) {\r\n    PointLight pointLight = lighting_getPointLight(i);\r\n    vec3 light_position_worldspace = pointLight.position;\r\n    vec3 light_direction = normalize(light_position_worldspace - position_worldspace);\r\n    float light_attenuation = getPointLightAttenuation(pointLight, distance(light_position_worldspace, position_worldspace));\r\n    lightColor += lighting_getLightColor(surfaceColor, light_direction, view_direction, normal_worldspace, pointLight.color / light_attenuation);\r\n  }\r\n\r\n  int totalLights = min(MAX_LIGHTS, lighting.pointLightCount + lighting.directionalLightCount);\r\n  for (int i = lighting.pointLightCount; i < totalLights; i++) {\r\n    DirectionalLight directionalLight = lighting_getDirectionalLight(i);\r\n    lightColor += lighting_getLightColor(surfaceColor, -directionalLight.direction, view_direction, normal_worldspace, directionalLight.color);\r\n  }\r\n  \r\n  return lightColor;\r\n}\r\n`;\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;;AAE7B,MAAM,QAAQ,GAAG,QAAA,EAAU,CAAC,CAAA;;;;;;;CAOlC,CAAC;AAEK,MAAM,QAAQ,GAAG,QAAA,EAAU,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA8ClC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6112, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6118, "column": 0}, "map": {"version":3,"file":"lighting-uniforms-wgsl.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/modules/lighting/lights/lighting-uniforms-wgsl.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nexport const lightingUniformsWGSL = /* wgsl */ `\\\r\n// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\r\nstruct AmbientLight {\r\n  color: vec3<f32>,\r\n};\r\n\r\nstruct PointLight {\r\n  color: vec3<f32>,\r\n  position: vec3<f32>,\r\n  attenuation: vec3<f32>, // 2nd order x:Constant-y:Linear-z:Exponential\r\n};\r\n\r\nstruct DirectionalLight {\r\n  color: vec3<f32>,\r\n  direction: vec3<f32>,\r\n};\r\n\r\nstruct lightingUniforms {\r\n  enabled: i32,\r\n  poightCount: i32,\r\n  directionalLightCount: i32,\r\n\r\n  ambientColor: vec3<f32>,\r\n\r\n  // TODO - support multiple lights by uncommenting arrays below\r\n  lightType: i32,\r\n  lightColor: vec3<f32>,\r\n  lightDirection: vec3<f32>,\r\n  lightPosition: vec3<f32>,\r\n  lightAttenuation: vec3<f32>,\r\n\r\n  // AmbientLight ambientLight;\r\n  // PointLight pointLight[MAX_LIGHTS];\r\n  // DirectionalLight directionalLight[MAX_LIGHTS];\r\n};\r\n\r\n// Binding 0:1 is reserved for lighting (Note: could go into separate bind group as it is stable across draw calls)\r\n@binding(1) @group(0) var<uniform> lighting : lightingUniforms;\r\n\r\nfn lighting_getPointLight(index: i32) -> PointLight {\r\n  return PointLight(lighting.lightColor, lighting.lightPosition, lighting.lightAttenuation);\r\n}\r\n\r\nfn lighting_getDirectionalLight(index: i32) -> DirectionalLight {\r\n  return DirectionalLight(lighting.lightColor, lighting.lightDirection);\r\n} \r\n\r\nfn getPointLightAttenuation(pointLight: PointLight, distance: f32) -> f32 {\r\n  return pointLight.attenuation.x\r\n       + pointLight.attenuation.y * distance\r\n       + pointLight.attenuation.z * distance * distance;\r\n}\r\n`;\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAE7B,MAAM,oBAAoB,GAAG,QAAA,EAAU,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAoD9C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6177, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6183, "column": 0}, "map": {"version":3,"file":"lighting-uniforms-glsl.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/modules/lighting/lights/lighting-uniforms-glsl.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nexport const lightingUniformsGLSL = /* glsl */ `\\\r\nprecision highp int;\r\n\r\n// #if (defined(SHADER_TYPE_FRAGMENT) && defined(LIGHTING_FRAGMENT)) || (defined(SHADER_TYPE_VERTEX) && defined(LIGHTING_VERTEX))\r\nstruct AmbientLight {\r\n  vec3 color;\r\n};\r\n\r\nstruct PointLight {\r\n  vec3 color;\r\n  vec3 position;\r\n  vec3 attenuation; // 2nd order x:Constant-y:Linear-z:Exponential\r\n};\r\n\r\nstruct DirectionalLight {\r\n  vec3 color;\r\n  vec3 direction;\r\n};\r\n\r\nuniform lightingUniforms {\r\n  int enabled;\r\n  int lightType;\r\n\r\n  int directionalLightCount;\r\n  int pointLightCount;\r\n\r\n  vec3 ambientColor;\r\n\r\n  vec3 lightColor0;\r\n  vec3 lightPosition0;\r\n  vec3 lightDirection0;\r\n  vec3 lightAttenuation0;\r\n\r\n  vec3 lightColor1;\r\n  vec3 lightPosition1;\r\n  vec3 lightDirection1;\r\n  vec3 lightAttenuation1;\r\n\r\n  vec3 lightColor2;\r\n  vec3 lightPosition2;\r\n  vec3 lightDirection2;\r\n  vec3 lightAttenuation2;\r\n} lighting;\r\n\r\nPointLight lighting_getPointLight(int index) {\r\n  switch (index) {\r\n    case 0:\r\n      return PointLight(lighting.lightColor0, lighting.lightPosition0, lighting.lightAttenuation0);\r\n    case 1:\r\n      return PointLight(lighting.lightColor1, lighting.lightPosition1, lighting.lightAttenuation1);\r\n    case 2:\r\n    default:  \r\n      return PointLight(lighting.lightColor2, lighting.lightPosition2, lighting.lightAttenuation2);\r\n  }\r\n}\r\n\r\nDirectionalLight lighting_getDirectionalLight(int index) {\r\n  switch (index) {\r\n    case 0:\r\n      return DirectionalLight(lighting.lightColor0, lighting.lightDirection0);\r\n    case 1:\r\n      return DirectionalLight(lighting.lightColor1, lighting.lightDirection1);\r\n    case 2:\r\n    default:   \r\n      return DirectionalLight(lighting.lightColor2, lighting.lightDirection2);\r\n  }\r\n} \r\n\r\nfloat getPointLightAttenuation(PointLight pointLight, float distance) {\r\n  return pointLight.attenuation.x\r\n       + pointLight.attenuation.y * distance\r\n       + pointLight.attenuation.z * distance * distance;\r\n}\r\n\r\n// #endif\r\n`;\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAE7B,MAAM,oBAAoB,GAAG,QAAA,EAAU,CAAC,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2E9C,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6265, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6271, "column": 0}, "map": {"version":3,"file":"lighting.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/modules/lighting/lights/lighting.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {log} from '@luma.gl/core';\r\nimport {ShaderModule} from '../../../lib/shader-module/shader-module';\r\nimport {lightingUniformsGLSL} from './lighting-uniforms-glsl';\r\nimport {lightingUniformsWGSL} from './lighting-uniforms-wgsl';\r\nimport type {NumberArray3} from '@math.gl/core';\r\n\r\n/** Max number of supported lights (in addition to ambient light */\r\nconst MAX_LIGHTS = 3;\r\n\r\n/** Whether to divide */\r\nconst COLOR_FACTOR = 255.0;\r\n\r\n/** Shader type field for lights */\r\n// eslint-disable-next-line no-shadow\r\nexport enum LIGHT_TYPE {\r\n  POINT = 0,\r\n  DIRECTIONAL = 1\r\n}\r\n\r\n/** Lighting helper types */\r\n\r\nexport type Light = AmbientLight | PointLight | DirectionalLight;\r\n\r\nexport type AmbientLight = {\r\n  type: 'ambient';\r\n  color?: Readonly<NumberArray3>;\r\n  intensity?: number;\r\n};\r\n\r\nexport type PointLight = {\r\n  type: 'point';\r\n  position: Readonly<NumberArray3>;\r\n  color?: Readonly<NumberArray3>;\r\n  intensity?: number;\r\n  attenuation?: Readonly<NumberArray3>;\r\n};\r\n\r\nexport type DirectionalLight = {\r\n  type: 'directional';\r\n  direction: Readonly<NumberArray3>;\r\n  color?: Readonly<NumberArray3>;\r\n  intensity?: number;\r\n};\r\n\r\nexport type LightingProps = {\r\n  enabled?: boolean;\r\n  lights?: Light[];\r\n  /** @deprecated */\r\n  ambientLight?: AmbientLight;\r\n  /** @deprecated */\r\n  pointLights?: PointLight[];\r\n  /** @deprecated */\r\n  directionalLights?: DirectionalLight[];\r\n};\r\n\r\nexport type LightingUniforms = {\r\n  enabled: number;\r\n  ambientLightColor: Readonly<NumberArray3>;\r\n  directionalLightCount: number;\r\n  pointLightCount: number;\r\n  lightType: number; // [];\r\n  lightColor0: Readonly<NumberArray3>;\r\n  lightPosition0: Readonly<NumberArray3>;\r\n  lightDirection0: Readonly<NumberArray3>;\r\n  lightAttenuation0: Readonly<NumberArray3>;\r\n  lightColor1: Readonly<NumberArray3>;\r\n  lightPosition1: Readonly<NumberArray3>;\r\n  lightDirection1: Readonly<NumberArray3>;\r\n  lightAttenuation1: Readonly<NumberArray3>;\r\n  lightColor2: Readonly<NumberArray3>;\r\n  lightPosition2: Readonly<NumberArray3>;\r\n  lightDirection2: Readonly<NumberArray3>;\r\n  lightAttenuation2: Readonly<NumberArray3>;\r\n};\r\n\r\n/** UBO ready lighting module */\r\nexport const lighting = {\r\n  props: {} as LightingProps,\r\n  uniforms: {} as LightingUniforms,\r\n\r\n  name: 'lighting',\r\n\r\n  defines: {\r\n    MAX_LIGHTS\r\n  },\r\n\r\n  uniformTypes: {\r\n    enabled: 'i32',\r\n    lightType: 'i32',\r\n\r\n    directionalLightCount: 'i32',\r\n    pointLightCount: 'i32',\r\n\r\n    ambientLightColor: 'vec3<f32>',\r\n\r\n    // TODO define as arrays once we have appropriate uniformTypes\r\n    lightColor0: 'vec3<f32>',\r\n    lightPosition0: 'vec3<f32>',\r\n    // TODO - could combine direction and attenuation\r\n    lightDirection0: 'vec3<f32>',\r\n    lightAttenuation0: 'vec3<f32>',\r\n\r\n    lightColor1: 'vec3<f32>',\r\n    lightPosition1: 'vec3<f32>',\r\n    lightDirection1: 'vec3<f32>',\r\n    lightAttenuation1: 'vec3<f32>',\r\n    lightColor2: 'vec3<f32>',\r\n    lightPosition2: 'vec3<f32>',\r\n    lightDirection2: 'vec3<f32>',\r\n    lightAttenuation2: 'vec3<f32>'\r\n  },\r\n\r\n  defaultUniforms: {\r\n    enabled: 1,\r\n    lightType: LIGHT_TYPE.POINT,\r\n\r\n    directionalLightCount: 0,\r\n    pointLightCount: 0,\r\n\r\n    ambientLightColor: [0.1, 0.1, 0.1],\r\n    lightColor0: [1, 1, 1],\r\n    lightPosition0: [1, 1, 2],\r\n    // TODO - could combine direction and attenuation\r\n    lightDirection0: [1, 1, 1],\r\n    lightAttenuation0: [1, 0, 0],\r\n\r\n    lightColor1: [1, 1, 1],\r\n    lightPosition1: [1, 1, 2],\r\n    lightDirection1: [1, 1, 1],\r\n    lightAttenuation1: [1, 0, 0],\r\n    lightColor2: [1, 1, 1],\r\n    lightPosition2: [1, 1, 2],\r\n    lightDirection2: [1, 1, 1],\r\n    lightAttenuation2: [1, 0, 0]\r\n  },\r\n  source: lightingUniformsWGSL,\r\n  vs: lightingUniformsGLSL,\r\n  fs: lightingUniformsGLSL,\r\n\r\n  getUniforms\r\n} as const satisfies ShaderModule<LightingProps, LightingUniforms, {}>;\r\n\r\nfunction getUniforms(\r\n  props?: LightingProps,\r\n  prevUniforms: Partial<LightingUniforms> = {}\r\n): LightingUniforms {\r\n  // Copy props so we can modify\r\n  props = props ? {...props} : props;\r\n\r\n  // TODO legacy\r\n  if (!props) {\r\n    return {...lighting.defaultUniforms};\r\n  }\r\n  // Support for array of lights. Type of light is detected by type field\r\n  if (props.lights) {\r\n    props = {...props, ...extractLightTypes(props.lights), lights: undefined};\r\n  }\r\n\r\n  // Specify lights separately\r\n  const {ambientLight, pointLights, directionalLights} = props || {};\r\n  const hasLights =\r\n    ambientLight ||\r\n    (pointLights && pointLights.length > 0) ||\r\n    (directionalLights && directionalLights.length > 0);\r\n\r\n  // TODO - this may not be the correct decision\r\n  if (!hasLights) {\r\n    return {...lighting.defaultUniforms, enabled: 0};\r\n  }\r\n\r\n  const uniforms = {\r\n    ...lighting.defaultUniforms,\r\n    ...prevUniforms,\r\n    ...getLightSourceUniforms({ambientLight, pointLights, directionalLights})\r\n  };\r\n\r\n  if (props.enabled !== undefined) {\r\n    uniforms.enabled = props.enabled ? 1 : 0;\r\n  }\r\n\r\n  return uniforms;\r\n}\r\n\r\nfunction getLightSourceUniforms({\r\n  ambientLight,\r\n  pointLights = [],\r\n  directionalLights = []\r\n}: LightingProps): Partial<LightingUniforms> {\r\n  const lightSourceUniforms: Partial<LightingUniforms> = {};\r\n\r\n  lightSourceUniforms.ambientLightColor = convertColor(ambientLight);\r\n\r\n  let currentLight: 0 | 1 | 2 = 0;\r\n\r\n  for (const pointLight of pointLights) {\r\n    lightSourceUniforms.lightType = LIGHT_TYPE.POINT;\r\n\r\n    const i = currentLight as 0 | 1 | 2;\r\n    lightSourceUniforms[`lightColor${i}`] = convertColor(pointLight);\r\n    lightSourceUniforms[`lightPosition${i}`] = pointLight.position;\r\n    lightSourceUniforms[`lightAttenuation${i}`] = pointLight.attenuation || [1, 0, 0];\r\n    currentLight++;\r\n  }\r\n\r\n  for (const directionalLight of directionalLights) {\r\n    lightSourceUniforms.lightType = LIGHT_TYPE.DIRECTIONAL;\r\n\r\n    const i = currentLight as 0 | 1 | 2;\r\n    lightSourceUniforms[`lightColor${i}`] = convertColor(directionalLight);\r\n    lightSourceUniforms[`lightDirection${i}`] = directionalLight.direction;\r\n    currentLight++;\r\n  }\r\n\r\n  if (currentLight > MAX_LIGHTS) {\r\n    log.warn('MAX_LIGHTS exceeded')();\r\n  }\r\n\r\n  lightSourceUniforms.directionalLightCount = directionalLights.length;\r\n  lightSourceUniforms.pointLightCount = pointLights.length;\r\n\r\n  return lightSourceUniforms;\r\n}\r\n\r\nfunction extractLightTypes(lights: Light[]): LightingProps {\r\n  const lightSources: LightingProps = {pointLights: [], directionalLights: []};\r\n  for (const light of lights || []) {\r\n    switch (light.type) {\r\n      case 'ambient':\r\n        // Note: Only uses last ambient light\r\n        // TODO - add ambient light sources on CPU?\r\n        lightSources.ambientLight = light;\r\n        break;\r\n      case 'directional':\r\n        lightSources.directionalLights?.push(light);\r\n        break;\r\n      case 'point':\r\n        lightSources.pointLights?.push(light);\r\n        break;\r\n      default:\r\n      // eslint-disable-next-line\r\n      // console.warn(light.type);\r\n    }\r\n  }\r\n  return lightSources;\r\n}\r\n\r\n/** Take color 0-255 and intensity as input and output 0.0-1.0 range */\r\nfunction convertColor(\r\n  colorDef: {color?: Readonly<NumberArray3>; intensity?: number} = {}\r\n): NumberArray3 {\r\n  const {color = [0, 0, 0], intensity = 1.0} = colorDef;\r\n  return color.map(component => (component * intensity) / COLOR_FACTOR) as NumberArray3;\r\n}\r\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6500, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6506, "column": 0}, "map": {"version":3,"file":"gouraud-material.js","sources":["file://E%3A/parcial2/visioncityv1/src/frontend/node_modules/%40luma.gl/shadertools/src/modules/lighting/gouraud-material/gouraud-material.ts"],"sourcesContent":["// luma.gl\r\n// SPDX-License-Identifier: MIT\r\n// Copyright (c) vis.gl contributors\r\n\r\nimport {NumberArray3} from '@math.gl/types';\r\nimport {ShaderModule} from '../../../lib/shader-module/shader-module';\r\nimport {lighting} from '../lights/lighting';\r\nimport {PHONG_VS, PHONG_FS} from '../phong-material/phong-shaders-glsl';\r\n\r\nexport type GouraudMaterialProps = {\r\n  ambient?: number;\r\n  diffuse?: number;\r\n  /** Specularity exponent */\r\n  shininess?: number;\r\n  specularColor?: [number, number, number];\r\n};\r\n\r\n/** In Gouraud shading, color is calculated for each triangle vertex normal, and then color is interpolated colors across the triangle */\r\nexport const gouraudMaterial: ShaderModule<GouraudMaterialProps> = {\r\n  props: {} as GouraudMaterialProps,\r\n\r\n  name: 'gouraudMaterial',\r\n  // Note these are switched between phong and gouraud\r\n  vs: PHONG_FS.replace('phongMaterial', 'gouraudMaterial'),\r\n  fs: PHONG_VS.replace('phongMaterial', 'gouraudMaterial'),\r\n  defines: {\r\n    LIGHTING_VERTEX: 1\r\n  },\r\n  dependencies: [lighting],\r\n  uniformTypes: {\r\n    ambient: 'f32',\r\n    diffuse: 'f32',\r\n    shininess: 'f32',\r\n    specularColor: 'vec3<f32>'\r\n  },\r\n  defaultUniforms: {\r\n    ambient: 0.35,\r\n    diffuse: 0.6,\r\n    shininess: 32,\r\n    specularColor: [0.15, 0.15, 0.15]\r\n  },\r\n\r\n  getUniforms(props: GouraudMaterialProps) {\r\n    const uniforms = {...props};\r\n    if (uniforms.specularColor) {\r\n      uniforms.specularColor = uniforms.specularColor.map(x => x / 255) as NumberArray3;\r\n    }\r\n    return {...gouraudMaterial.defaultUniforms, ...uniforms};\r\n  }\r\n};\r\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAKpC,OAAO,EAAC,QAAQ,EAAE,QAAQ,EAAC,gDAA6C;AADxE,OAAO,EAAC,QAAQ,EAAC,8BAA2B;;;AAYrC,MAAM,eAAe,GAAuC;IACjE,KAAK,EAAE,CAAA,CAA0B;IAEjC,IAAI,EAAE,iBAAiB;IACvB,oDAAoD;IACpD,EAAE,8NAAE,WAAQ,CAAC,OAAO,CAAC,eAAe,EAAE,iBAAiB,CAAC;IACxD,EAAE,EAAE,uOAAQ,CAAC,OAAO,CAAC,eAAe,EAAE,iBAAiB,CAAC;IACxD,OAAO,EAAE;QACP,eAAe,EAAE,CAAC;KACnB;IACD,YAAY,EAAE;yMAAC,WAAQ;KAAC;IACxB,YAAY,EAAE;QACZ,OAAO,EAAE,KAAK;QACd,OAAO,EAAE,KAAK;QACd,SAAS,EAAE,KAAK;QAChB,aAAa,EAAE,WAAW;KAC3B;IACD,eAAe,EAAE;QACf,OAAO,EAAE,IAAI;QACb,OAAO,EAAE,GAAG;QACZ,SAAS,EAAE,EAAE;QACb,aAAa,EAAE;YAAC,IAAI;YAAE,IAAI;YAAE,IAAI;SAAC;KAClC;IAED,WAAW,EAAC,KAA2B;QACrC,MAAM,QAAQ,GAAG;YAAC,GAAG,KAAK;QAAA,CAAC,CAAC;QAC5B,IAAI,QAAQ,CAAC,aAAa,EAAE,CAAC;YAC3B,QAAQ,CAAC,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,EAAC,CAAC,CAAC,EAAE,AAAC,CAAC,GAAG,GAAG,CAAiB,CAAC;QACpF,CAAC;QACD,OAAO;YAAC,GAAG,eAAe,CAAC,eAAe;YAAE,GAAG,QAAQ;QAAA,CAAC,CAAC;IAC3D,CAAC;CACF,CAAC","ignoreList":[0]}},
    {"offset": {"line": 6557, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}