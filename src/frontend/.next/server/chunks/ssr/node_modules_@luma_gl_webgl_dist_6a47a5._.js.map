{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"uid.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/utils/uid.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nconst uidCounters: Record<string, number> = {};\n\n/**\n * Returns a UID.\n * @param id= - Identifier base name\n * @return uid\n **/\nexport function uid(id: string = 'id'): string {\n  uidCounters[id] = uidCounters[id] || 1;\n  const count = uidCounters[id]++;\n  return `${id}-${count}`;\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAEpC,MAAM,WAAW,GAA2B,CAAA,CAAE,CAAC;AAOzC,SAAU,GAAG,CAAC,KAAa,IAAI;IACnC,WAAW,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC;IACvC,MAAM,KAAK,GAAG,WAAW,CAAC,EAAE,CAAC,EAAE,CAAC;IAChC,OAAO,GAAG,EAAE,CAAA,CAAA,EAAI,KAAK,EAAE,CAAC;AAC1B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 25, "column": 0}, "map": {"version":3,"file":"webgl-extensions.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/context/helpers/webgl-extensions.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {GLExtensions} from '@luma.gl/constants';\n\n/** Ensure extensions are only requested once */\nexport function getWebGLExtension(\n  gl: WebGL2RenderingContext,\n  name: string,\n  extensions: GLExtensions\n): unknown {\n  if (extensions[name] === undefined) {\n    extensions[name] = gl.getExtension(name) || null;\n  }\n  return extensions[name];\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAIpC,8CAAA,EAAgD;;;AAC1C,SAAU,iBAAiB,CAC/B,EAA0B,EAC1B,IAAY,EACZ,UAAwB;IAExB,IAAI,UAAU,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE,CAAC;QACnC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC;IACnD,CAAC;IACD,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;AAC1B,CAAC","ignoreList":[0]}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"file":"vertex-formats.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/converters/vertex-formats.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {GL} from '@luma.gl/constants';\nimport {VertexFormat, VertexType} from '@luma.gl/core';\n\ntype GLDataType =\n  | GL.UNSIGNED_BYTE\n  | GL.BYTE\n  | GL.UNSIGNED_SHORT\n  | GL.SHORT\n  | GL.UNSIGNED_INT\n  | GL.INT\n  | GL.HALF_FLOAT\n  | GL.FLOAT;\n\n/** Get vertex format from GL constants */\nexport function getVertexFormatFromGL(type: GLDataType, components: 1 | 2 | 3 | 4): VertexFormat {\n  const base = getVertexTypeFromGL(type);\n  // prettier-ignore\n  switch (components) {\n    // @ts-expect-error TODO deal with lack of formats\n    case 1: return base;\n    case 2: return `${base}x2`;\n    // @ts-expect-error TODO deal with lack of formats\n    case 3: return `${base}x3`;\n    case 4: return `${base}x4`;\n  }\n  // @ts-ignore unreachable\n  throw new Error(String(components));\n}\n\n/** Get data type from GL constants */\nexport function getVertexTypeFromGL(type: GLDataType, normalized = false): VertexType {\n  // prettier-ignore\n  switch (type) {\n    // WebGPU does not support normalized 32 bit integer attributes\n    case GL.INT: return normalized ? 'sint32' : 'sint32';\n    case GL.UNSIGNED_INT: return normalized ? 'uint32' : 'uint32';\n    case GL.SHORT: return normalized ? 'sint16' : 'unorm16';\n    case GL.UNSIGNED_SHORT: return normalized ? 'uint16' : 'unorm16';\n    case GL.BYTE: return normalized ? 'sint8' : 'snorm16';\n    case GL.UNSIGNED_BYTE: return normalized ? 'uint8' : 'unorm8';\n    case GL.FLOAT: return 'float32';\n    case GL.HALF_FLOAT: return 'float16';\n  }\n  // @ts-ignore unreachable\n  throw new Error(String(type));\n}\n\nexport function getGLFromVertexType(\n  dataType: VertexType\n):\n  | GL.UNSIGNED_BYTE\n  | GL.BYTE\n  | GL.UNSIGNED_SHORT\n  | GL.SHORT\n  | GL.UNSIGNED_INT\n  | GL.INT\n  | GL.HALF_FLOAT\n  | GL.FLOAT {\n  // prettier-ignore\n  switch (dataType) {\n    case 'uint8': return GL.UNSIGNED_BYTE;\n    case 'sint8': return GL.BYTE;\n    case 'unorm8': return GL.UNSIGNED_BYTE;\n    case 'snorm8': return GL.BYTE;\n    case 'uint16': return GL.UNSIGNED_SHORT;\n    case 'sint16': return GL.SHORT;\n    case 'unorm16': return GL.UNSIGNED_SHORT;\n    case 'snorm16': return GL.SHORT;\n    case 'uint32': return GL.UNSIGNED_INT;\n    case 'sint32': return GL.INT;\n    // WebGPU does not support normalized 32 bit integer attributes\n    // case 'unorm32': return GL.UNSIGNED_INT;\n    // case 'snorm32': return GL.INT;\n    case 'float16': return GL.HALF_FLOAT;\n    case 'float32': return GL.FLOAT;\n  }\n  // @ts-ignore unreachable\n  throw new Error(String(dataType));\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;;;;AAgB9B,SAAU,qBAAqB,CAAC,IAAgB,EAAE,UAAyB;IAC/E,MAAM,IAAI,GAAG,mBAAmB,CAAC,IAAI,CAAC,CAAC;IACvC,kBAAkB;IAClB,OAAQ,UAAU,EAAE,CAAC;QACnB,kDAAkD;QAClD,KAAK,CAAC,CAAC;YAAC,OAAO,IAAI,CAAC;QACpB,KAAK,CAAC,CAAC;YAAC,OAAO,GAAG,IAAI,CAAA,EAAA,CAAI,CAAC;QAC3B,kDAAkD;QAClD,KAAK,CAAC,CAAC;YAAC,OAAO,GAAG,IAAI,CAAA,EAAA,CAAI,CAAC;QAC3B,KAAK,CAAC,CAAC;YAAC,OAAO,GAAG,IAAI,CAAA,EAAA,CAAI,CAAC;IAC7B,CAAC;IACD,yBAAyB;IACzB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC;AACtC,CAAC;AAGK,SAAU,mBAAmB,CAAC,IAAgB,EAAE,UAAU,GAAG,KAAK;IACtE,kBAAkB;IAClB,OAAQ,IAAI,EAAE,CAAC;QACb,+DAA+D;QAC/D,KAAA;YAAa,OAAO,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;QACrD,KAAA;YAAsB,OAAO,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC9D,KAAA;YAAe,OAAO,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;QACxD,KAAA;YAAwB,OAAO,UAAU,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,CAAC;QACjE,KAAA;YAAc,OAAO,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,SAAS,CAAC;QACtD,KAAA;YAAuB,OAAO,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC9D,KAAA;YAAe,OAAO,SAAS,CAAC;QAChC,KAAA;YAAoB,OAAO,SAAS,CAAC;IACvC,CAAC;IACD,yBAAyB;IACzB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAChC,CAAC;AAEK,SAAU,mBAAmB,CACjC,QAAoB;IAUpB,kBAAkB;IAClB,OAAQ,QAAQ,EAAE,CAAC;QACjB,KAAK,OAAO,CAAC;YAAC,OAAA,KAAwB;QACtC,KAAK,OAAO,CAAC;YAAC,OAAA,KAAe;QAC7B,KAAK,QAAQ,CAAC;YAAC,OAAA,KAAwB;QACvC,KAAK,QAAQ,CAAC;YAAC,OAAA,KAAe;QAC9B,KAAK,QAAQ,CAAC;YAAC,OAAA,KAAyB;QACxC,KAAK,QAAQ,CAAC;YAAC,OAAA,KAAgB;QAC/B,KAAK,SAAS,CAAC;YAAC,OAAA,KAAyB;QACzC,KAAK,SAAS,CAAC;YAAC,OAAA,KAAgB;QAChC,KAAK,QAAQ,CAAC;YAAC,OAAA,KAAuB;QACtC,KAAK,QAAQ,CAAC;YAAC,OAAA,KAAc;QAC7B,+DAA+D;QAC/D,0CAA0C;QAC1C,iCAAiC;QACjC,KAAK,SAAS,CAAC;YAAC,OAAA,KAAqB;QACrC,KAAK,SAAS,CAAC;YAAC,OAAA,KAAgB;IAClC,CAAC;IACD,yBAAyB;IACzB,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;AACpC,CAAC","ignoreList":[0]}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"file":"webgl-texture-table.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/converters/webgl-texture-table.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  DeviceFeature,\n  TextureFormat,\n  TextureFormatCapabilities,\n  DeviceTextureFormatCapabilities\n} from '@luma.gl/core';\nimport {decodeTextureFormat} from '@luma.gl/core';\nimport {GL, GLPixelType, GLExtensions, GLTexelDataFormat} from '@luma.gl/constants';\nimport {getWebGLExtension} from '../../context/helpers/webgl-extensions';\nimport {getGLFromVertexType} from './vertex-formats';\n\n/* eslint-disable camelcase */\n\n// TEXTURE FEATURES\n\n// Define local webgl extension strings to optimize minification\nconst X_S3TC = 'WEBGL_compressed_texture_s3tc'; // BC1, BC2, BC3\nconst X_S3TC_SRGB = 'WEBGL_compressed_texture_s3tc_srgb'; // BC1, BC2, BC3\nconst X_RGTC = 'EXT_texture_compression_rgtc'; // BC4, BC5\nconst X_BPTC = 'EXT_texture_compression_bptc'; // BC6, BC7\nconst X_ETC2 = 'WEBGL_compressed_texture_etc'; // Renamed from 'WEBGL_compressed_texture_es3'\nconst X_ASTC = 'WEBGL_compressed_texture_astc';\nconst X_ETC1 = 'WEBGL_compressed_texture_etc1';\nconst X_PVRTC = 'WEBGL_compressed_texture_pvrtc';\nconst X_ATC = 'WEBGL_compressed_texture_atc';\n\n// Define local webgl extension strings to optimize minification\nconst EXT_texture_norm16 = 'EXT_texture_norm16';\nconst EXT_render_snorm = 'EXT_render_snorm';\nconst EXT_color_buffer_float = 'EXT_color_buffer_float';\n\n// prettier-ignore\nexport const TEXTURE_FEATURES: Partial<Record<DeviceFeature, string[]>> = {\n  'float32-renderable-webgl': ['EXT_color_buffer_float'],\n  'float16-renderable-webgl': ['EXT_color_buffer_half_float'],\n  'rgb9e5ufloat-renderable-webgl': ['WEBGL_render_shared_exponent'],\n  'snorm8-renderable-webgl': [EXT_render_snorm],\n  'norm16-renderable-webgl': [EXT_texture_norm16],\n  'snorm16-renderable-webgl': [EXT_texture_norm16, EXT_render_snorm],\n\n  'float32-filterable': ['OES_texture_float_linear'],\n  'float16-filterable-webgl': ['OES_texture_half_float_linear'],\n  'texture-filterable-anisotropic-webgl': ['EXT_texture_filter_anisotropic'],\n\n  'texture-blend-float-webgl': ['EXT_float_blend'],\n\n  'texture-compression-bc': [X_S3TC, X_S3TC_SRGB, X_RGTC, X_BPTC],\n  // 'texture-compression-bc3-srgb-webgl': [X_S3TC_SRGB],\n  // 'texture-compression-bc3-webgl': [X_S3TC],\n  'texture-compression-bc5-webgl': [X_RGTC],\n  'texture-compression-bc7-webgl': [X_BPTC],\n  'texture-compression-etc2': [X_ETC2],\n  'texture-compression-astc': [X_ASTC],\n  'texture-compression-etc1-webgl': [X_ETC1],\n  'texture-compression-pvrtc-webgl': [X_PVRTC],\n  'texture-compression-atc-webgl': [X_ATC]\n};\n\nexport function isTextureFeature(feature: DeviceFeature): boolean {\n  return feature in TEXTURE_FEATURES;\n}\n\n/** Checks a texture feature (for Device.features). Mainly compressed texture support */\nexport function checkTextureFeature(\n  gl: WebGL2RenderingContext,\n  feature: DeviceFeature,\n  extensions: GLExtensions\n): boolean {\n  const textureExtensions = TEXTURE_FEATURES[feature] || [];\n  return textureExtensions.every(extension => getWebGLExtension(gl, extension, extensions));\n}\n\n// TEXTURE FORMATS\n\n/** Map a format to webgl and constants */\ntype WebGLFormatInfo = {\n  gl?: GL;\n  /** compressed */\n  x?: string;\n  types?: GLPixelType[];\n  dataFormat?: GLTexelDataFormat;\n  /** if depthTexture is set this is a depth/stencil format that can be set to a texture  */\n  depthTexture?: boolean;\n  /** @deprecated can this format be used with renderbuffers */\n  rb?: boolean;\n};\n\n// TABLES\n\n/**\n * Texture format data -\n * Exported but can change without notice\n */\n// prettier-ignore\nexport const WEBGL_TEXTURE_FORMATS: Record<TextureFormat, WebGLFormatInfo> = {\n  // 8-bit formats\n  'r8unorm': {gl: GL.R8, rb: true},\n  'r8snorm': {gl: GL.R8_SNORM},\n  'r8uint': {gl: GL.R8UI, rb: true},\n  'r8sint': {gl: GL.R8I, rb: true},\n\n  // 16-bit formats\n  'rg8unorm': {gl: GL.RG8, rb: true},\n  'rg8snorm': {gl: GL.RG8_SNORM},\n  'rg8uint': {gl: GL.RG8UI, rb: true},\n  'rg8sint': {gl: GL.RG8I, rb: true},\n\n  'r16uint': {gl: GL.R16UI, rb: true},\n  'r16sint': {gl: GL.R16I, rb: true},\n  'r16float': {gl: GL.R16F, rb: true},\n  'r16unorm-webgl': {gl: GL.R16_EXT, rb: true},\n  'r16snorm-webgl': {gl: GL.R16_SNORM_EXT},\n\n  // Packed 16-bit formats\n  'rgba4unorm-webgl': {gl: GL.RGBA4, rb: true},\n  'rgb565unorm-webgl': {gl: GL.RGB565, rb: true},\n  'rgb5a1unorm-webgl': {gl: GL.RGB5_A1, rb: true},\n\n  // 24-bit formats\n  'rgb8unorm-webgl': {gl: GL.RGB8},\n  'rgb8snorm-webgl': {gl: GL.RGB8_SNORM},\n\n  // 32-bit formats  \n  'rgba8unorm': {gl: GL.RGBA8},\n  'rgba8unorm-srgb': {gl: GL.SRGB8_ALPHA8},\n  'rgba8snorm': {gl: GL.RGBA8_SNORM},\n  'rgba8uint': {gl: GL.RGBA8UI},\n  'rgba8sint': {gl: GL.RGBA8I},\n  // reverse colors, webgpu only\n  'bgra8unorm': {},\n  'bgra8unorm-srgb': {},\n\n  'rg16uint': {gl: GL.RG16UI},\n  'rg16sint': {gl: GL.RG16I},\n  'rg16float': {gl: GL.RG16F, rb: true},\n  'rg16unorm-webgl': {gl: GL.RG16_EXT},\n  'rg16snorm-webgl': {gl: GL.RG16_SNORM_EXT},\n\n  'r32uint': {gl: GL.R32UI, rb: true},\n  'r32sint': {gl: GL.R32I, rb: true},\n  'r32float': {gl: GL.R32F},\n\n  // Packed 32-bit formats\n  'rgb9e5ufloat': {gl: GL.RGB9_E5}, // , filter: true},\n  'rg11b10ufloat': {gl: GL.R11F_G11F_B10F, rb: true},\n  'rgb10a2unorm': {gl: GL.RGB10_A2, rb: true},\n  'rgb10a2uint-webgl': {gl: GL.RGB10_A2UI, rb: true},\n\n  // 48-bit formats\n  'rgb16unorm-webgl': {gl: GL.RGB16_EXT}, // rgb not renderable\n  'rgb16snorm-webgl': {gl: GL.RGB16_SNORM_EXT}, // rgb not renderable\n\n  // 64-bit formats\n  'rg32uint': {gl: GL.RG32UI, rb: true},\n  'rg32sint': {gl: GL.RG32I, rb: true},\n  'rg32float': {gl: GL.RG32F, rb: true},\n  'rgba16uint': {gl: GL.RGBA16UI, rb: true},\n  'rgba16sint': {gl: GL.RGBA16I, rb: true},\n  'rgba16float': {gl: GL.RGBA16F},\n  'rgba16unorm-webgl': {gl: GL.RGBA16_EXT, rb: true},\n  'rgba16snorm-webgl': {gl: GL.RGBA16_SNORM_EXT},\n\n  // 96-bit formats (deprecated!)\n  'rgb32float-webgl': {gl: GL.RGB32F, x: EXT_color_buffer_float, dataFormat: GL.RGB, types: [GL.FLOAT]},\n  \n  // 128-bit formats\n  'rgba32uint': {gl: GL.RGBA32UI, rb: true},\n  'rgba32sint': {gl: GL.RGBA32I, rb: true},\n  'rgba32float': {gl: GL.RGBA32F, rb: true},\n\n  // Depth and stencil formats\n  'stencil8': {gl: GL.STENCIL_INDEX8, rb: true}, // 8 stencil bits\n\n  'depth16unorm': {gl: GL.DEPTH_COMPONENT16, dataFormat: GL.DEPTH_COMPONENT, types: [GL.UNSIGNED_SHORT], rb: true}, // 16 depth bits\n  'depth24plus': {gl: GL.DEPTH_COMPONENT24, dataFormat: GL.DEPTH_COMPONENT, types: [GL.UNSIGNED_INT]},\n  'depth32float': {gl: GL.DEPTH_COMPONENT32F, dataFormat: GL.DEPTH_COMPONENT, types: [GL.FLOAT], rb: true},\n\n  // The depth component of the \"depth24plus\" and \"depth24plus-stencil8\" formats may be implemented as either a 24-bit depth value or a \"depth32float\" value.\n  'depth24plus-stencil8': {gl: GL.DEPTH24_STENCIL8, rb: true, depthTexture: true, dataFormat: GL.DEPTH_STENCIL, types: [GL.UNSIGNED_INT_24_8]},\n  // \"depth32float-stencil8\" feature - TODO below is render buffer only?\n  'depth32float-stencil8': {gl: GL.DEPTH32F_STENCIL8, dataFormat: GL.DEPTH_STENCIL, types: [GL.FLOAT_32_UNSIGNED_INT_24_8_REV], rb: true},\n\n  // BC compressed formats: check device.features.has(\"texture-compression-bc\");\n\n  'bc1-rgb-unorm-webgl': {gl: GL.COMPRESSED_RGB_S3TC_DXT1_EXT, x: X_S3TC},\n  'bc1-rgb-unorm-srgb-webgl': {gl: GL.COMPRESSED_SRGB_S3TC_DXT1_EXT, x: X_S3TC_SRGB},\n\n  'bc1-rgba-unorm': {gl: GL.COMPRESSED_RGBA_S3TC_DXT1_EXT, x: X_S3TC},\n  'bc1-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_S3TC_DXT1_EXT, x: X_S3TC_SRGB},\n  'bc2-rgba-unorm': {gl: GL.COMPRESSED_RGBA_S3TC_DXT3_EXT, x: X_S3TC},\n  'bc2-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT, x: X_S3TC_SRGB},\n  'bc3-rgba-unorm': {gl: GL.COMPRESSED_RGBA_S3TC_DXT5_EXT, x: X_S3TC},\n  'bc3-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT, x: X_S3TC_SRGB},\n  'bc4-r-unorm': {gl: GL.COMPRESSED_RED_RGTC1_EXT, x: X_RGTC},\n  'bc4-r-snorm': {gl: GL.COMPRESSED_SIGNED_RED_RGTC1_EXT, x: X_RGTC},\n  'bc5-rg-unorm': {gl: GL.COMPRESSED_RED_GREEN_RGTC2_EXT, x: X_RGTC},\n  'bc5-rg-snorm': {gl: GL.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT, x: X_RGTC},\n  'bc6h-rgb-ufloat': {gl: GL.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT, x: X_BPTC},\n  'bc6h-rgb-float': {gl: GL.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT, x: X_BPTC},\n  'bc7-rgba-unorm': {gl: GL.COMPRESSED_RGBA_BPTC_UNORM_EXT, x: X_BPTC},\n  'bc7-rgba-unorm-srgb': {gl: GL.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT, x: X_BPTC},\n\n  // WEBGL_compressed_texture_etc: device.features.has(\"texture-compression-etc2\")\n  // Note: Supposedly guaranteed availability compressed formats in WebGL2, but through CPU decompression\n\n  'etc2-rgb8unorm': {gl: GL.COMPRESSED_RGB8_ETC2},\n  'etc2-rgb8unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ETC2},\n  'etc2-rgb8a1unorm': {gl: GL.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2},\n  'etc2-rgb8a1unorm-srgb': {gl: GL.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2},\n  'etc2-rgba8unorm': {gl: GL.COMPRESSED_RGBA8_ETC2_EAC},\n  'etc2-rgba8unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC},\n\n  'eac-r11unorm': {gl: GL.COMPRESSED_R11_EAC},\n  'eac-r11snorm': {gl: GL.COMPRESSED_SIGNED_R11_EAC},\n  'eac-rg11unorm': {gl: GL.COMPRESSED_RG11_EAC},\n  'eac-rg11snorm': {gl: GL.COMPRESSED_SIGNED_RG11_EAC},\n\n  // X_ASTC compressed formats: device.features.has(\"texture-compression-astc\")\n\n  'astc-4x4-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_4x4_KHR},\n  'astc-4x4-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR},\n  'astc-5x4-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_5x4_KHR},\n  'astc-5x4-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR},\n  'astc-5x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_5x5_KHR},\n  'astc-5x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR},\n  'astc-6x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_6x5_KHR},\n  'astc-6x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR},\n  'astc-6x6-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_6x6_KHR},\n  'astc-6x6-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR},\n  'astc-8x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_8x5_KHR},\n  'astc-8x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR},\n  'astc-8x6-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_8x6_KHR},\n  'astc-8x6-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR},\n  'astc-8x8-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_8x8_KHR},\n  'astc-8x8-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR},\n  'astc-10x5-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x10_KHR},\n  'astc-10x5-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR},\n  'astc-10x6-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x6_KHR},\n  'astc-10x6-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR},\n  'astc-10x8-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x8_KHR},\n  'astc-10x8-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR},\n  'astc-10x10-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_10x10_KHR},\n  'astc-10x10-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR},\n  'astc-12x10-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_12x10_KHR},\n  'astc-12x10-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR},\n  'astc-12x12-unorm': {gl: GL.COMPRESSED_RGBA_ASTC_12x12_KHR},\n  'astc-12x12-unorm-srgb': {gl: GL.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR},\n\n  // WEBGL_compressed_texture_pvrtc\n\n  'pvrtc-rgb4unorm-webgl': {gl: GL.COMPRESSED_RGB_PVRTC_4BPPV1_IMG},\n  'pvrtc-rgba4unorm-webgl': {gl: GL.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG},\n  'pvrtc-rbg2unorm-webgl': {gl: GL.COMPRESSED_RGB_PVRTC_2BPPV1_IMG},\n  'pvrtc-rgba2unorm-webgl': {gl: GL.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG},\n\n  // WEBGL_compressed_texture_etc1\n\n  'etc1-rbg-unorm-webgl': {gl: GL.COMPRESSED_RGB_ETC1_WEBGL},\n\n  // WEBGL_compressed_texture_atc\n\n  'atc-rgb-unorm-webgl': {gl: GL.COMPRESSED_RGB_ATC_WEBGL},\n  'atc-rgba-unorm-webgl': {gl: GL.COMPRESSED_RGBA_ATC_EXPLICIT_ALPHA_WEBGL},\n  'atc-rgbai-unorm-webgl': {gl: GL.COMPRESSED_RGBA_ATC_INTERPOLATED_ALPHA_WEBGL}\n};\n\n// FUNCTIONS\n\n/** Checks if a texture format is supported */\nexport function isWebGLTextureFormatCapabilitiesed(\n  gl: WebGL2RenderingContext,\n  format: TextureFormat,\n  extensions: GLExtensions\n): boolean {\n  const webglTextureInfo = WEBGL_TEXTURE_FORMATS[format];\n  // Check that we have a GL constant\n  if (!webglTextureInfo?.gl) {\n    return false;\n  }\n\n  // Check extensions\n  const extension = webglTextureInfo.x;\n  if (extension) {\n    return Boolean(getWebGLExtension(gl, extension, extensions));\n  }\n  return true;\n}\n\n/** Checks if a texture format is supported, renderable, filterable etc */\nexport function getTextureFormatCapabilitiesWebGL(\n  gl: WebGL2RenderingContext,\n  formatSupport: TextureFormatCapabilities,\n  extensions: GLExtensions\n): DeviceTextureFormatCapabilities {\n  let supported = formatSupport.create;\n  const webglFormatInfo = WEBGL_TEXTURE_FORMATS[formatSupport.format];\n\n  // Support Check that we have a GL constant\n  if (webglFormatInfo?.gl === undefined) {\n    supported = false;\n  }\n\n  if (webglFormatInfo?.x) {\n    supported = supported && Boolean(getWebGLExtension(gl, webglFormatInfo.x, extensions));\n  }\n\n  return {\n    format: formatSupport.format,\n    // @ts-ignore\n    create: supported && formatSupport.create,\n    // @ts-ignore\n    render: supported && formatSupport.render,\n    // @ts-ignore\n    filter: supported && formatSupport.filter,\n    // @ts-ignore\n    blend: supported && formatSupport.blend,\n    // @ts-ignore\n    store: supported && formatSupport.store\n  };\n}\n\n/** Get parameters necessary to work with format in WebGL: internalFormat, dataFormat, type, compressed, */\nexport function getTextureFormatWebGL(format: TextureFormat): {\n  internalFormat: GL;\n  format: GLTexelDataFormat;\n  type: GLPixelType;\n  compressed: boolean;\n} {\n  const formatData = WEBGL_TEXTURE_FORMATS[format];\n  const webglFormat = convertTextureFormatToGL(format);\n  const decoded = decodeTextureFormat(format);\n  return {\n    internalFormat: webglFormat,\n    format:\n      formatData?.dataFormat ||\n      getWebGLPixelDataFormat(decoded.channels, decoded.integer, decoded.normalized, webglFormat),\n    // depth formats don't have a type\n    type: decoded.dataType\n      ? getGLFromVertexType(decoded.dataType)\n      : formatData?.types?.[0] || GL.UNSIGNED_BYTE,\n    compressed: decoded.compressed || false\n  };\n}\n\nexport function getDepthStencilAttachmentWebGL(\n  format: TextureFormat\n): GL.DEPTH_ATTACHMENT | GL.STENCIL_ATTACHMENT | GL.DEPTH_STENCIL_ATTACHMENT {\n  const formatInfo = decodeTextureFormat(format);\n  switch (formatInfo.attachment) {\n    case 'depth':\n      return GL.DEPTH_ATTACHMENT;\n    case 'stencil':\n      return GL.STENCIL_ATTACHMENT;\n    case 'depth-stencil':\n      return GL.DEPTH_STENCIL_ATTACHMENT;\n    default:\n      throw new Error(`Not a depth stencil format: ${format}`);\n  }\n}\n\n/** TODO - VERY roundabout legacy way of calculating bytes per pixel */\nexport function getTextureFormatBytesPerPixel(format: TextureFormat): number {\n  const formatInfo = decodeTextureFormat(format);\n  return formatInfo.bytesPerPixel;\n}\n\n// DATA TYPE HELPERS\n\nexport function getWebGLPixelDataFormat(\n  channels: 'r' | 'rg' | 'rgb' | 'rgba' | 'bgra',\n  integer: boolean,\n  normalized: boolean,\n  format: GL\n): GLTexelDataFormat {\n  // WebGL1 formats use same internalFormat\n  if (format === GL.RGBA || format === GL.RGB) {\n    return format;\n  }\n  // prettier-ignore\n  switch (channels) {\n    case 'r': return integer && !normalized ? GL.RED_INTEGER : GL.RED;\n    case 'rg': return integer && !normalized ? GL.RG_INTEGER : GL.RG;\n    case 'rgb': return integer && !normalized ? GL.RGB_INTEGER : GL.RGB;\n    case 'rgba': return integer && !normalized ? GL.RGBA_INTEGER : GL.RGBA;\n    case 'bgra': throw new Error('bgra pixels not supported by WebGL');\n    default: return GL.RGBA;\n  }\n}\n\n/**\n * Map WebGPU style texture format strings to GL constants\n */\nfunction convertTextureFormatToGL(format: TextureFormat): GL | undefined {\n  const formatInfo = WEBGL_TEXTURE_FORMATS[format];\n  const webglFormat = formatInfo?.gl;\n  if (webglFormat === undefined) {\n    throw new Error(`Unsupported texture format ${format}`);\n  }\n  return webglFormat;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 788, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 794, "column": 0}, "map": {"version":3,"file":"webgl-framebuffer.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-framebuffer.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {FramebufferProps} from '@luma.gl/core';\nimport {Framebuffer} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLTexture} from './webgl-texture';\nimport {WEBGLTextureView} from './webgl-texture-view';\nimport {getDepthStencilAttachmentWebGL} from '../converters/webgl-texture-table';\n\nexport type Attachment = WEBGLTextureView | WEBGLTexture; // | WEBGLRenderbuffer;\n\n/** luma.gl Framebuffer, WebGL implementation  */\nexport class WEBGLFramebuffer extends Framebuffer {\n  device: WebGLDevice;\n  gl: WebGL2RenderingContext;\n  handle: WebGLFramebuffer;\n\n  colorAttachments: WEBGLTextureView[] = [];\n  depthStencilAttachment: WEBGLTextureView | null = null;\n\n  constructor(device: WebGLDevice, props: FramebufferProps) {\n    super(device, props);\n\n    // WebGL default framebuffer handle is null\n    const isDefaultFramebuffer = props.handle === null;\n\n    this.device = device;\n    this.gl = device.gl;\n    this.handle =\n      this.props.handle || isDefaultFramebuffer ? this.props.handle : this.gl.createFramebuffer();\n\n    if (!isDefaultFramebuffer) {\n      // default framebuffer handle is null, so we can't set spector metadata...\n      device.setSpectorMetadata(this.handle, {id: this.props.id, props: this.props});\n\n      // Auto create textures for attachments if needed\n      this.autoCreateAttachmentTextures();\n\n      this.updateAttachments();\n    }\n  }\n\n  /** destroys any auto created resources etc. */\n  override destroy(): void {\n    super.destroy(); // destroys owned resources etc.\n    if (!this.destroyed && this.handle !== null) {\n      this.gl.deleteFramebuffer(this.handle);\n      // this.handle = null;\n    }\n  }\n\n  protected updateAttachments(): void {\n    /** Attach from a map of attachments */\n    // @ts-expect-error native bindFramebuffer is overridden by our state tracker\n    const prevHandle: WebGLFramebuffer | null = this.gl.bindFramebuffer(\n      GL.FRAMEBUFFER,\n      this.handle\n    );\n\n    // Walk the attachments\n    for (let i = 0; i < this.colorAttachments.length; ++i) {\n      const attachment = this.colorAttachments[i];\n      if (attachment) {\n        const attachmentPoint = GL.COLOR_ATTACHMENT0 + i;\n        this._attachTextureView(attachmentPoint, attachment);\n      }\n    }\n\n    if (this.depthStencilAttachment) {\n      const attachmentPoint = getDepthStencilAttachmentWebGL(\n        this.depthStencilAttachment.props.format\n      );\n      this._attachTextureView(attachmentPoint, this.depthStencilAttachment);\n    }\n\n    /** Check the status */\n    if (this.device.props.debug) {\n      const status = this.gl.checkFramebufferStatus(GL.FRAMEBUFFER) as GL;\n      if (status !== GL.FRAMEBUFFER_COMPLETE) {\n        throw new Error(`Framebuffer ${_getFrameBufferStatus(status)}`);\n      }\n    }\n\n    this.gl.bindFramebuffer(GL.FRAMEBUFFER, prevHandle);\n  }\n\n  // PRIVATE\n\n  /** In WebGL we must use renderbuffers for depth/stencil attachments (unless we have extensions) */\n  // protected override createDepthStencilTexture(format: TextureFormat): Texture {\n  //   // return new WEBGLRenderbuffer(this.device, {\n  //   return new WEBGLTexture(this.device, {\n  //     id: `${this.id}-depth-stencil`,\n  //     format,\n  //     width: this.width,\n  //     height: this.height,\n  //     mipmaps: false\n  //   });\n  // }\n\n  /**\n   * @param attachment\n   * @param texture\n   * @param layer = 0 - index into WEBGLTextureArray and Texture3D or face for `TextureCubeMap`\n   * @param level = 0 - mipmapLevel\n   */\n  protected _attachTextureView(attachment: GL, textureView: WEBGLTextureView): void {\n    const {gl} = this.device;\n    const {texture} = textureView;\n    const level = textureView.props.baseMipLevel;\n    const layer = textureView.props.baseArrayLayer;\n\n    gl.bindTexture(texture.glTarget, texture.handle);\n\n    switch (texture.glTarget) {\n      case GL.TEXTURE_2D_ARRAY:\n      case GL.TEXTURE_3D:\n        gl.framebufferTextureLayer(GL.FRAMEBUFFER, attachment, texture.handle, level, layer);\n        break;\n\n      case GL.TEXTURE_CUBE_MAP:\n        // layer must be a cubemap face (or if index, converted to cube map face)\n        const face = mapIndexToCubeMapFace(layer);\n        gl.framebufferTexture2D(GL.FRAMEBUFFER, attachment, face, texture.handle, level);\n        break;\n\n      case GL.TEXTURE_2D:\n        gl.framebufferTexture2D(GL.FRAMEBUFFER, attachment, GL.TEXTURE_2D, texture.handle, level);\n        break;\n\n      default:\n        throw new Error('Illegal texture type');\n    }\n\n    gl.bindTexture(texture.glTarget, null);\n  }\n}\n\n// Helper functions\n\n// Map an index to a cube map face constant\nfunction mapIndexToCubeMapFace(layer: number | GL): GL {\n  // TEXTURE_CUBE_MAP_POSITIVE_X is a big value (0x8515)\n  // if smaller assume layer is index, otherwise assume it is already a cube map face constant\n  return layer < (GL.TEXTURE_CUBE_MAP_POSITIVE_X as number)\n    ? layer + GL.TEXTURE_CUBE_MAP_POSITIVE_X\n    : layer;\n}\n\n// Helper METHODS\n// Get a string describing the framebuffer error if installed\nfunction _getFrameBufferStatus(status: GL) {\n  switch (status) {\n    case GL.FRAMEBUFFER_COMPLETE:\n      return 'success';\n    case GL.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:\n      return 'Mismatched attachments';\n    case GL.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:\n      return 'No attachments';\n    case GL.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:\n      return 'Height/width mismatch';\n    case GL.FRAMEBUFFER_UNSUPPORTED:\n      return 'Unsupported or split attachments';\n    // WebGL2\n    case GL.FRAMEBUFFER_INCOMPLETE_MULTISAMPLE:\n      return 'Samples mismatch';\n    // OVR_multiview2 extension\n    // case GL.FRAMEBUFFER_INCOMPLETE_VIEW_TARGETS_OVR: return 'baseViewIndex mismatch';\n    default:\n      return `${status}`;\n  }\n}\n\n/**\n * Attachment resize is expected to be a noop if size is same\n *\nprotected override resizeAttachments(width: number, height: number): this {\n  // for default framebuffer, just update the stored size\n  if (this.handle === null) {\n    // assert(width === undefined && height === undefined);\n    this.width = this.gl.drawingBufferWidth;\n    this.height = this.gl.drawingBufferHeight;\n    return this;\n  }\n\n  if (width === undefined) {\n    width = this.gl.drawingBufferWidth;\n  }\n  if (height === undefined) {\n    height = this.gl.drawingBufferHeight;\n  }\n\n  // TODO Not clear that this is better than default destroy/create implementation\n\n  for (const colorAttachment of this.colorAttachments) {\n    colorAttachment.texture.clone({width, height});\n  }\n  if (this.depthStencilAttachment) {\n    this.depthStencilAttachment.texture.resize({width, height});\n  }\n  return this;\n}\n*/\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 959, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 965, "column": 0}, "map": {"version":3,"file":"webgl-canvas-context.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/webgl-canvas-context.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {CanvasContextProps, TextureFormat} from '@luma.gl/core';\nimport {CanvasContext} from '@luma.gl/core';\nimport {WebGLDevice} from './webgl-device';\nimport {WEBGLFramebuffer} from './resources/webgl-framebuffer';\n\n/**\n * A WebGL Canvas Context which manages the canvas and handles drawing buffer resizing etc\n */\nexport class WebGLCanvasContext extends CanvasContext {\n  readonly device: WebGLDevice;\n  readonly format: TextureFormat = 'rgba8unorm';\n  readonly depthStencilFormat: TextureFormat = 'depth24plus';\n\n  presentationSize: [number, number];\n  private _framebuffer: WEBGLFramebuffer | null = null;\n\n  get [Symbol.toStringTag](): string {\n    return 'WebGLCanvasContext';\n  }\n\n  constructor(device: WebGLDevice, props: CanvasContextProps) {\n    // Note: Base class creates / looks up the canvas (unless under Node.js)\n    super(props);\n    this.device = device;\n    this.presentationSize = [-1, -1];\n    this._setAutoCreatedCanvasId(`${this.device.id}-canvas`);\n    this.update();\n  }\n\n  getCurrentFramebuffer(): WEBGLFramebuffer {\n    this.update();\n    // Setting handle to null returns a reference to the default framebuffer\n    this._framebuffer = this._framebuffer || new WEBGLFramebuffer(this.device, {handle: null});\n    return this._framebuffer;\n  }\n\n  /** Resizes and updates render targets if necessary */\n  update() {\n    const size = this.getPixelSize();\n    const sizeChanged =\n      size[0] !== this.presentationSize[0] || size[1] !== this.presentationSize[1];\n    if (sizeChanged) {\n      this.presentationSize = size;\n      this.resize();\n    }\n  }\n\n  /**\n   * Resize the canvas' drawing buffer.\n   *\n   * Can match the canvas CSS size, and optionally also consider devicePixelRatio\n   * Can be called every frame\n   *\n   * Regardless of size, the drawing buffer will always be scaled to the viewport, but\n   * for best visual results, usually set to either:\n   *  canvas CSS width x canvas CSS height\n   *  canvas CSS width * devicePixelRatio x canvas CSS height * devicePixelRatio\n   * See http://webgl2fundamentals.org/webgl/lessons/webgl-resizing-the-canvas.html\n   */\n  resize(options?: {width?: number; height?: number; useDevicePixels?: boolean | number}): void {\n    if (!this.device.gl) return;\n\n    // Resize browser context .\n    if (this.canvas) {\n      const devicePixelRatio = this.getDevicePixelRatio(options?.useDevicePixels);\n      this.setDevicePixelRatio(devicePixelRatio, options);\n      return;\n    }\n  }\n\n  commit() {\n    // gl.commit was ultimately removed from the WebGL standard??\n    // if (this.offScreen && this.gl.commit) {\n    //   // @ts-expect-error gl.commit is not officially part of WebGL2RenderingContext\n    //   this.gl.commit();\n    // }\n  }\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAKpC,OAAO,EAAC,gBAAgB,EAAC,yCAAsC;AAF/D,OAAO,EAAC,aAAa,EAAC,MAAM,eAAe,CAAC;;;AAOtC,MAAO,kBAAmB,sLAAQ,gBAAa;IAC1C,MAAM,CAAc;IACpB,MAAM,GAAkB,YAAY,CAAC;IACrC,kBAAkB,GAAkB,aAAa,CAAC;IAE3D,gBAAgB,CAAmB;IAC3B,YAAY,GAA4B,IAAI,CAAC;IAErD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,GAAA;QACtB,OAAO,oBAAoB,CAAC;IAC9B,CAAC;IAED,YAAY,MAAmB,EAAE,KAAyB,CAAA;QACxD,wEAAwE;QACxE,KAAK,CAAC,KAAK,CAAC,CAAC;QACb,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG;YAAC,CAAC,CAAC;YAAE,CAAC,CAAC;SAAC,CAAC;QACjC,IAAI,CAAC,uBAAuB,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAA,OAAA,CAAS,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,qBAAqB,GAAA;QACnB,IAAI,CAAC,MAAM,EAAE,CAAC;QACd,wEAAwE;QACxE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,kMAAI,mBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE;YAAC,MAAM,EAAE,IAAI;QAAA,CAAC,CAAC,CAAC;QAC3F,OAAO,IAAI,CAAC,YAAY,CAAC;IAC3B,CAAC;IAED,oDAAA,EAAsD,CACtD,MAAM,GAAA;QACJ,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QACjC,MAAM,WAAW,GACf,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;QAC/E,IAAI,WAAW,EAAE,CAAC;YAChB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;YAC7B,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;IACH,CAAC;IAED;;;;;;;;;;;OAWG,CACH,MAAM,CAAC,OAA+E,EAAA;QACpF,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO;QAE5B,2BAA2B;QAC3B,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,MAAM,gBAAgB,GAAG,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;YAC5E,IAAI,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;YACpD,OAAO;QACT,CAAC;IACH,CAAC;IAED,MAAM,GAAA;IACJ,6DAA6D;IAC7D,0CAA0C;IAC1C,mFAAmF;IACnF,sBAAsB;IACtB,IAAI;IACN,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 1039, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1045, "column": 0}, "map": {"version":3,"file":"create-browser-context.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/context/helpers/create-browser-context.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/**\n * ContextProps\n * @param onContextLost\n * @param onContextRestored *\n */\ntype ContextProps = {\n  /** Called when a context is lost */\n  onContextLost: (event: Event) => void;\n  /** Called when a context is restored */\n  onContextRestored: (event: Event) => void;\n};\n\n/**\n * Create a WebGL context for a canvas\n * Note calling this multiple time on the same canvas does return the same context\n * @param canvas A canvas element or offscreen canvas\n */\nexport function createBrowserContext(\n  canvas: HTMLCanvasElement | OffscreenCanvas,\n  props: ContextProps,\n  webglContextAttributes: WebGLContextAttributes\n): WebGL2RenderingContext {\n  // Try to extract any extra information about why context creation failed\n  let errorMessage = '';\n  // const onCreateError = error => (errorMessage = error.statusMessage || errorMessage);\n\n  // Avoid multiple listeners?\n  // canvas.removeEventListener('webglcontextcreationerror', onCreateError, false);\n  // canvas.addEventListener('webglcontextcreationerror', onCreateError, false);\n\n  const webglProps: WebGLContextAttributes = {\n    preserveDrawingBuffer: true,\n    // failIfMajorPerformanceCaveat: true,\n    ...webglContextAttributes\n  };\n\n  // Create the desired context\n  let gl: WebGL2RenderingContext | null = null;\n\n  // Create a webgl2 context\n  gl ||= canvas.getContext('webgl2', webglProps);\n  if (webglProps.failIfMajorPerformanceCaveat) {\n    errorMessage ||=\n      'Only software GPU is available. Set `failIfMajorPerformanceCaveat: false` to allow.';\n  }\n\n  // Creation failed with failIfMajorPerformanceCaveat - Try a Software GPU\n  if (!gl && !webglContextAttributes.failIfMajorPerformanceCaveat) {\n    webglProps.failIfMajorPerformanceCaveat = false;\n    gl = canvas.getContext('webgl2', webglProps);\n    // @ts-expect-error\n    gl.luma ||= {};\n    // @ts-expect-error\n    gl.luma.softwareRenderer = true;\n  }\n\n  if (!gl) {\n    gl = canvas.getContext('webgl', {}) as WebGL2RenderingContext;\n    if (gl) {\n      gl = null;\n      errorMessage ||= 'Your browser only supports WebGL1';\n    }\n  }\n\n  if (!gl) {\n    errorMessage ||= 'Your browser does not support WebGL';\n    throw new Error(`Failed to create WebGL context: ${errorMessage}`);\n  }\n\n  // Carefully extract and wrap callbacks to prevent addEventListener from rebinding them.\n  const {onContextLost, onContextRestored} = props;\n  canvas.addEventListener('webglcontextlost', (event: Event) => onContextLost(event), false);\n  canvas.addEventListener(\n    'webglcontextrestored',\n    (event: Event) => onContextRestored(event),\n    false\n  );\n\n  // @ts-expect-error\n  gl.luma ||= {};\n  return gl;\n}\n\n/* TODO - can we call this asynchronously to catch the error events?\nexport async function createBrowserContextAsync(canvas: HTMLCanvasElement | OffscreenCanvas, props: ContextProps): Promise<WebGL2RenderingContext> {\n  props = {...DEFAULT_CONTEXT_PROPS, ...props};\n\n // Try to extract any extra information about why context creation failed\n let errorMessage = null;\n const onCreateError = (error) => (errorMessage = error.statusMessage || errorMessage);\n canvas.addEventListener('webglcontextcreationerror', onCreateError, false);\n\n const gl = createBrowserContext(canvas, props);\n\n // Give the listener a chance to fire\n await new Promise(resolve => setTimeout(resolve, 0));\n\n canvas.removeEventListener('webglcontextcreationerror', onCreateError, false);\n\n return gl;\n}\n*/\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAcpC;;;;GAIG;;;AACG,SAAU,oBAAoB,CAClC,MAA2C,EAC3C,KAAmB,EACnB,sBAA8C;IAE9C,yEAAyE;IACzE,IAAI,YAAY,GAAG,EAAE,CAAC;IACtB,uFAAuF;IAEvF,4BAA4B;IAC5B,iFAAiF;IACjF,8EAA8E;IAE9E,MAAM,UAAU,GAA2B;QACzC,qBAAqB,EAAE,IAAI;QAC3B,sCAAsC;QACtC,GAAG,sBAAsB;KAC1B,CAAC;IAEF,6BAA6B;IAC7B,IAAI,EAAE,GAAkC,IAAI,CAAC;IAE7C,0BAA0B;IAC1B,EAAE,KAAK,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IAC/C,IAAI,UAAU,CAAC,4BAA4B,EAAE,CAAC;QAC5C,YAAY,KACV,qFAAqF,CAAC;IAC1F,CAAC;IAED,yEAAyE;IACzE,IAAI,CAAC,EAAE,IAAI,CAAC,sBAAsB,CAAC,4BAA4B,EAAE,CAAC;QAChE,UAAU,CAAC,4BAA4B,GAAG,KAAK,CAAC;QAChD,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QAC7C,mBAAmB;QACnB,EAAE,CAAC,IAAI,KAAK,CAAA,CAAE,CAAC;QACf,mBAAmB;QACnB,EAAE,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAClC,CAAC;IAED,IAAI,CAAC,EAAE,EAAE,CAAC;QACR,EAAE,GAAG,MAAM,CAAC,UAAU,CAAC,OAAO,EAAE,CAAA,CAAE,CAA2B,CAAC;QAC9D,IAAI,EAAE,EAAE,CAAC;YACP,EAAE,GAAG,IAAI,CAAC;YACV,YAAY,KAAK,mCAAmC,CAAC;QACvD,CAAC;IACH,CAAC;IAED,IAAI,CAAC,EAAE,EAAE,CAAC;QACR,YAAY,KAAK,qCAAqC,CAAC;QACvD,MAAM,IAAI,KAAK,CAAC,CAAA,gCAAA,EAAmC,YAAY,EAAE,CAAC,CAAC;IACrE,CAAC;IAED,wFAAwF;IACxF,MAAM,EAAC,aAAa,EAAE,iBAAiB,EAAC,GAAG,KAAK,CAAC;IACjD,MAAM,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC,KAAY,EAAE,CAAG,CAAD,YAAc,CAAC,KAAK,CAAC,EAAE,KAAK,CAAC,CAAC;IAC3F,MAAM,CAAC,gBAAgB,CACrB,sBAAsB,EACtB,CAAC,KAAY,EAAE,CAAG,CAAD,gBAAkB,CAAC,KAAK,CAAC,EAC1C,KAAK,CACN,CAAC;IAEF,mBAAmB;IACnB,EAAE,CAAC,IAAI,KAAK,CAAA,CAAE,CAAC;IACf,OAAO,EAAE,CAAC;AACZ,CAAC,CAED;;;;;;;;;;;;;;;;;;EAkBE","ignoreList":[0]}},
    {"offset": {"line": 1120, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1126, "column": 0}, "map": {"version":3,"file":"load-script.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/utils/load-script.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/**\n * Load a script (identified by an url). When the url returns, the\n * content of this file is added into a new script element, attached to the DOM (body element)\n * @param scriptUrl defines the url of the script to laod\n * @param scriptId defines the id of the script element\n */\nexport async function loadScript(scriptUrl: string, scriptId?: string): Promise<Event> {\n  const head = document.getElementsByTagName('head')[0];\n  if (!head) {\n    throw new Error('loadScript');\n  }\n\n  const script = document.createElement('script');\n  script.setAttribute('type', 'text/javascript');\n  script.setAttribute('src', scriptUrl);\n  if (scriptId) {\n    script.id = scriptId;\n  }\n\n  return new Promise((resolve, reject) => {\n    script.onload = resolve;\n    script.onerror = error =>\n      reject(new Error(`Unable to load script '${scriptUrl}': ${error as string}`));\n    head.appendChild(script);\n  });\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAEpC;;;;;GAKG;;;AACI,KAAK,UAAU,UAAU,CAAC,SAAiB,EAAE,QAAiB;IACnE,MAAM,IAAI,GAAG,QAAQ,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IACtD,IAAI,CAAC,IAAI,EAAE,CAAC;QACV,MAAM,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC;IAChC,CAAC;IAED,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAChD,MAAM,CAAC,YAAY,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;IAC/C,MAAM,CAAC,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IACtC,IAAI,QAAQ,EAAE,CAAC;QACb,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAC;IACvB,CAAC;IAED,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QACrC,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC;QACxB,MAAM,CAAC,OAAO,IAAG,KAAK,CAAC,EAAE,AACvB,MAAM,CAAC,IAAI,KAAK,CAAC,CAAA,uBAAA,EAA0B,SAAS,CAAA,GAAA,EAAM,KAAe,EAAE,CAAC,CAAC,CAAC;QAChF,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC3B,CAAC,CAAC,CAAC;AACL,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1160, "column": 0}, "map": {"version":3,"file":"spector.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/context/debug/spector.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {log} from '@luma.gl/core';\nimport {loadScript} from '../../utils/load-script';\n\nimport type {Spector} from './spector-types';\n\n/** Spector debug initialization options */\ntype SpectorProps = {\n  /** Whether spector.js is enabled */\n  debugSpectorJS?: boolean;\n  /** URL to load spector script from. Typically a CDN URL */\n  debugSpectorJSUrl?: string;\n  /** Canvas to monitor */\n  gl?: WebGL2RenderingContext;\n};\n\nconst LOG_LEVEL = 1;\n\nlet spector: Spector = null;\nlet initialized: boolean = false;\n\ndeclare global {\n  // @ts-ignore\n  // eslint-disable-next-line no-var\n  var SPECTOR: Spector;\n}\n\nexport const DEFAULT_SPECTOR_PROPS: Required<SpectorProps> = {\n  debugSpectorJS: log.get('debug-spectorjs'),\n  // https://github.com/BabylonJS/Spector.js#basic-usage\n  // https://forum.babylonjs.com/t/spectorcdn-is-temporarily-off/48241\n  // spectorUrl: 'https://spectorcdn.babylonjs.com/spector.bundle.js';\n  debugSpectorJSUrl: 'https://cdn.jsdelivr.net/npm/spectorjs@0.9.30/dist/spector.bundle.js',\n  gl: undefined!\n};\n\n/** Loads spector from CDN if not already installed */\nexport async function loadSpectorJS(props: {debugSpectorJSUrl?: string}): Promise<void> {\n  if (!globalThis.SPECTOR) {\n    try {\n      await loadScript(props.debugSpectorJSUrl || DEFAULT_SPECTOR_PROPS.debugSpectorJSUrl);\n    } catch (error) {\n      log.warn(String(error));\n    }\n  }\n}\n\nexport function initializeSpectorJS(props: SpectorProps): Spector | null {\n  props = {...DEFAULT_SPECTOR_PROPS, ...props};\n  if (!props.debugSpectorJS) {\n    return null;\n  }\n\n  if (!spector && globalThis.SPECTOR && !globalThis.luma?.spector) {\n    log.probe(LOG_LEVEL, 'SPECTOR found and initialized. Start with `luma.spector.displayUI()`')();\n    const {Spector: SpectorJS} = globalThis.SPECTOR as any;\n    spector = new SpectorJS();\n    if (globalThis.luma) {\n      (globalThis.luma as any).spector = spector;\n    }\n  }\n\n  if (!spector) {\n    return null;\n  }\n\n  if (!initialized) {\n    initialized = true;\n\n    // enables recording some extra information merged in the capture like texture memory sizes and formats\n    spector.spyCanvases();\n    // A callback when results are ready\n    spector?.onCaptureStarted.add((capture: unknown) =>\n      log.info('Spector capture started:', capture)()\n    );\n    spector?.onCapture.add((capture: unknown) => {\n      log.info('Spector capture complete:', capture)();\n      // Use undocumented Spector API to open the UI with our capture\n      // See https://github.com/BabylonJS/Spector.js/blob/767ad1195a25b85a85c381f400eb50a979239eca/src/spector.ts#L124\n      spector?.getResultUI();\n      // @ts-expect-error private\n      spector?.resultView.display();\n      // @ts-expect-error private\n      spector?.resultView.addCapture(capture);\n    });\n  }\n\n  if (props.gl) {\n    // capture startup\n    const gl = props.gl;\n    // @ts-expect-error\n    const device = gl.device;\n    spector?.startCapture(props.gl, 500); // 500 commands\n    // @ts-expect-error\n    gl.device = device;\n\n    new Promise(resolve => setTimeout(resolve, 2000)).then(_ => {\n      log.info('Spector capture stopped after 2 seconds')();\n      spector?.stopCapture();\n      // spector?.displayUI();\n    });\n  }\n\n  return spector;\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;;;AAEpC,OAAO,EAAC,GAAG,EAAC,MAAM,eAAe,CAAC;AAClC,OAAO,EAAC,UAAU,EAAC,mCAAgC;;;AAcnD,MAAM,SAAS,GAAG,CAAC,CAAC;AAEpB,IAAI,OAAO,GAAY,IAAI,CAAC;AAC5B,IAAI,WAAW,GAAY,KAAK,CAAC;AAQ1B,MAAM,qBAAqB,GAA2B;IAC3D,cAAc,EAAE,mKAAG,CAAC,GAAG,CAAC,iBAAiB,CAAC;IAC1C,sDAAsD;IACtD,oEAAoE;IACpE,oEAAoE;IACpE,iBAAiB,EAAE,sEAAsE;IACzF,EAAE,EAAE,SAAU;CACf,CAAC;AAGK,KAAK,UAAU,aAAa,CAAC,KAAmC;IACrE,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;QACxB,IAAI,CAAC;YACH,mLAAM,aAAA,AAAU,EAAC,KAAK,CAAC,iBAAiB,IAAI,qBAAqB,CAAC,iBAAiB,CAAC,CAAC;QACvF,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC;yKACf,MAAG,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1B,CAAC;IACH,CAAC;AACH,CAAC;AAEK,SAAU,mBAAmB,CAAC,KAAmB;IACrD,KAAK,GAAG;QAAC,GAAG,qBAAqB;QAAE,GAAG,KAAK;IAAA,CAAC,CAAC;IAC7C,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;QAC1B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,CAAC,OAAO,IAAI,UAAU,CAAC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC;qKAChE,MAAG,CAAC,KAAK,CAAC,SAAS,EAAE,sEAAsE,CAAC,EAAE,CAAC;QAC/F,MAAM,EAAC,OAAO,EAAE,SAAS,EAAC,GAAG,UAAU,CAAC,OAAc,CAAC;QACvD,OAAO,GAAG,IAAI,SAAS,EAAE,CAAC;QAC1B,IAAI,UAAU,CAAC,IAAI,EAAE,CAAC;YACnB,UAAU,CAAC,IAAY,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7C,CAAC;IACH,CAAC;IAED,IAAI,CAAC,OAAO,EAAE,CAAC;QACb,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,CAAC,WAAW,EAAE,CAAC;QACjB,WAAW,GAAG,IAAI,CAAC;QAEnB,uGAAuG;QACvG,OAAO,CAAC,WAAW,EAAE,CAAC;QACtB,oCAAoC;QACpC,OAAO,EAAE,gBAAgB,CAAC,GAAG,CAAC,CAAC,OAAgB,EAAE,EAAE,2JACjD,OAAG,CAAC,IAAI,CAAC,0BAA0B,EAAE,OAAO,CAAC,EAAE,CAChD,CAAC;QACF,OAAO,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,OAAgB,EAAE,EAAE;yKAC1C,MAAG,CAAC,IAAI,CAAC,2BAA2B,EAAE,OAAO,CAAC,EAAE,CAAC;YACjD,+DAA+D;YAC/D,gHAAgH;YAChH,OAAO,EAAE,WAAW,EAAE,CAAC;YACvB,2BAA2B;YAC3B,OAAO,EAAE,UAAU,CAAC,OAAO,EAAE,CAAC;YAC9B,2BAA2B;YAC3B,OAAO,EAAE,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,KAAK,CAAC,EAAE,EAAE,CAAC;QACb,kBAAkB;QAClB,MAAM,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC;QACpB,mBAAmB;QACnB,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC;QACzB,OAAO,EAAE,YAAY,CAAC,KAAK,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,eAAe;QACrD,mBAAmB;QACnB,EAAE,CAAC,MAAM,GAAG,MAAM,CAAC;QAEnB,IAAI,OAAO,EAAC,OAAO,CAAC,EAAE,AAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,IAAI,EAAC,CAAC,CAAC,EAAE;yKACzD,MAAG,CAAC,IAAI,CAAC,yCAAyC,CAAC,EAAE,CAAC;YACtD,OAAO,EAAE,WAAW,EAAE,CAAC;QACvB,wBAAwB;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 1244, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1250, "column": 0}, "map": {"version":3,"file":"webgl-device-info.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/device-helpers/webgl-device-info.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {DeviceInfo} from '@luma.gl/core';\nimport {GL, GLExtensions} from '@luma.gl/constants';\nimport {getWebGLExtension} from '../../context/helpers/webgl-extensions';\n\n/** @returns strings identifying the GPU vendor and driver. */\nexport function getDeviceInfo(gl: WebGL2RenderingContext, extensions: GLExtensions): DeviceInfo {\n  // \"Masked\" info is always available, but don't contain much useful information\n  const vendorMasked = gl.getParameter(GL.VENDOR);\n  const rendererMasked = gl.getParameter(GL.RENDERER);\n\n  // If we are lucky, unmasked info is available\n  // https://www.khronos.org/registry/webgl/extensions/WEBGL_debug_renderer_info/\n  getWebGLExtension(gl, 'WEBGL_debug_renderer_info', extensions);\n  const ext = extensions.WEBGL_debug_renderer_info;\n  const vendorUnmasked = gl.getParameter(ext ? ext.UNMASKED_VENDOR_WEBGL : GL.VENDOR);\n  const rendererUnmasked = gl.getParameter(ext ? ext.UNMASKED_RENDERER_WEBGL : GL.RENDERER);\n  const vendor = vendorUnmasked || vendorMasked;\n  const renderer = rendererUnmasked || rendererMasked;\n\n  // Driver version\n  const version = gl.getParameter(GL.VERSION) as string;\n\n  // \"Sniff\" the GPU type and backend from the info. This works best if unmasked info is available.\n  const gpu = identifyGPUVendor(vendor, renderer);\n  const gpuBackend = identifyGPUBackend(vendor, renderer);\n  const gpuType = identifyGPUType(vendor, renderer);\n\n  // Determine GLSL version\n  // For now, skip parsing of the long version string, just use context type below to deduce version\n  // const version = gl.getParameter(GL.SHADING_LANGUAGE_VERSION) as string;\n  // const shadingLanguageVersion = parseGLSLVersion(version);\n  const shadingLanguage = 'glsl';\n  const shadingLanguageVersion = 300;\n\n  return {\n    type: 'webgl',\n    gpu,\n    gpuType,\n    gpuBackend,\n    vendor,\n    renderer,\n    version,\n    shadingLanguage,\n    shadingLanguageVersion\n  };\n}\n\n/** \"Sniff\" the GPU type from the info. This works best if unmasked info is available. */\nfunction identifyGPUVendor(\n  vendor: string,\n  renderer: string\n): 'nvidia' | 'intel' | 'apple' | 'amd' | 'software' | 'unknown' {\n  if (/NVIDIA/i.exec(vendor) || /NVIDIA/i.exec(renderer)) {\n    return 'nvidia';\n  }\n  if (/INTEL/i.exec(vendor) || /INTEL/i.exec(renderer)) {\n    return 'intel';\n  }\n  if (/Apple/i.exec(vendor) || /Apple/i.exec(renderer)) {\n    return 'apple';\n  }\n  if (\n    /AMD/i.exec(vendor) ||\n    /AMD/i.exec(renderer) ||\n    /ATI/i.exec(vendor) ||\n    /ATI/i.exec(renderer)\n  ) {\n    return 'amd';\n  }\n  if (/SwiftShader/i.exec(vendor) || /SwiftShader/i.exec(renderer)) {\n    return 'software';\n  }\n\n  return 'unknown';\n}\n\n/** \"Sniff\" the GPU backend from the info. This works best if unmasked info is available. */\nfunction identifyGPUBackend(vendor: string, renderer: string): 'opengl' | 'metal' | 'unknown' {\n  if (/Metal/i.exec(vendor) || /Metal/i.exec(renderer)) {\n    return 'metal';\n  }\n  if (/ANGLE/i.exec(vendor) || /ANGLE/i.exec(renderer)) {\n    return 'opengl';\n  }\n  return 'unknown';\n}\n\nfunction identifyGPUType(\n  vendor: string,\n  renderer: string\n): 'discrete' | 'integrated' | 'cpu' | 'unknown' {\n  if (/SwiftShader/i.exec(vendor) || /SwiftShader/i.exec(renderer)) {\n    return 'cpu';\n  }\n\n  const gpuVendor = identifyGPUVendor(vendor, renderer);\n  switch (gpuVendor) {\n    case 'intel':\n      return 'integrated';\n    case 'software':\n      return 'cpu';\n    case 'unknown':\n      return 'unknown';\n    default:\n      return 'discrete';\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1338, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1344, "column": 0}, "map": {"version":3,"file":"webgl-device-limits.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/device-helpers/webgl-device-limits.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {DeviceLimits} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\n\n// prettier-ignore\nexport class WebGLDeviceLimits extends DeviceLimits {\n  get maxTextureDimension1D() { return 0; } // WebGL does not support 1D textures\n  get maxTextureDimension2D() { return this.getParameter(GL.MAX_TEXTURE_SIZE); }\n  get maxTextureDimension3D() { return this.getParameter(GL.MAX_3D_TEXTURE_SIZE); }\n  get maxTextureArrayLayers() { return this.getParameter(GL.MAX_ARRAY_TEXTURE_LAYERS); }\n  get maxBindGroups() { return 0; }\n  get maxDynamicUniformBuffersPerPipelineLayout() { return 0; } // TBD\n  get maxDynamicStorageBuffersPerPipelineLayout() { return 0; } // TBD\n  get maxSampledTexturesPerShaderStage() { return this.getParameter(GL.MAX_VERTEX_TEXTURE_IMAGE_UNITS); } // ) TBD\n  get maxSamplersPerShaderStage() { return this.getParameter(GL.MAX_COMBINED_TEXTURE_IMAGE_UNITS); }\n  get maxStorageBuffersPerShaderStage() { return 0; } // TBD\n  get maxStorageTexturesPerShaderStage() { return 0; } // TBD\n  get maxUniformBuffersPerShaderStage() { return this.getParameter(GL.MAX_UNIFORM_BUFFER_BINDINGS); }\n  get maxUniformBufferBindingSize() { return this.getParameter(GL.MAX_UNIFORM_BLOCK_SIZE); }\n  get maxStorageBufferBindingSize() { return 0; }\n  get minUniformBufferOffsetAlignment() { return this.getParameter(GL.UNIFORM_BUFFER_OFFSET_ALIGNMENT); }\n  get minStorageBufferOffsetAlignment() { return 0; } \n  get maxVertexBuffers() { return 16; } // WebGL 2 supports 16 buffers, see https://github.com/gpuweb/gpuweb/issues/4284\n  get maxVertexAttributes() { return this.getParameter(GL.MAX_VERTEX_ATTRIBS); }\n  get maxVertexBufferArrayStride() { return 2048; } // TBD, this is just the default value from WebGPU\n  get maxInterStageShaderComponents() { return this.getParameter(GL.MAX_VARYING_COMPONENTS); }\n  get maxComputeWorkgroupStorageSize() { return 0; } // WebGL does not support compute shaders\n  get maxComputeInvocationsPerWorkgroup() { return 0; } // WebGL does not support compute shaders\n  get maxComputeWorkgroupSizeX() { return 0; } // WebGL does not support compute shaders\n  get maxComputeWorkgroupSizeY() { return 0; } // WebGL does not support compute shaders\n  get maxComputeWorkgroupSizeZ() { return 0; } // WebGL does not support compute shaders\n  get maxComputeWorkgroupsPerDimension() { return 0;} // WebGL does not support compute shaders\n\n  // PRIVATE\n\n  protected gl: WebGL2RenderingContext;\n  protected limits: Partial<Record<GL, number>> = {};\n\n  constructor(gl: WebGL2RenderingContext) {\n    super();\n    this.gl = gl;\n  }\n\n  protected getParameter(parameter: GL): number {\n    if (this.limits[parameter] === undefined) {\n      this.limits[parameter] = this.gl.getParameter(parameter);\n    }\n    return this.limits[parameter] || 0;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1452, "column": 0}, "map": {"version":3,"file":"webgl-device-features.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/device-helpers/webgl-device-features.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Feature detection for WebGL\n// Provides a function that enables simple checking of which WebGL features are\n\nimport {DeviceFeature, DeviceFeatures} from '@luma.gl/core';\nimport {GLExtensions} from '@luma.gl/constants';\nimport {getWebGLExtension} from '../../context/helpers/webgl-extensions';\nimport {\n  isTextureFeature,\n  checkTextureFeature,\n  TEXTURE_FEATURES\n} from '../converters/webgl-texture-table';\n\n/**\n * Defines luma.gl \"feature\" names and semantics\n * when value is 'string' it is the name of the extension that enables this feature\n */\nconst WEBGL_FEATURES: Partial<Record<DeviceFeature, boolean | string>> = {\n  // optional WebGPU features\n  'depth-clip-control': 'EXT_depth_clamp', // TODO these seem subtly different\n  // 'timestamp-query' // GPUQueryType \"timestamp-query\"\n  // \"indirect-first-instance\"\n  // Textures are handled by getTextureFeatures()\n  // 'depth32float-stencil8' // GPUTextureFormat 'depth32float-stencil8'\n\n  // optional WebGL features\n  'timer-query-webgl': 'EXT_disjoint_timer_query_webgl2',\n  'compilation-status-async-webgl': 'KHR_parallel_shader_compile',\n  'polygon-mode-webgl': 'WEBGL_polygon_mode',\n  'provoking-vertex-webgl': 'WEBGL_provoking_vertex',\n  'shader-clip-cull-distance-webgl': 'WEBGL_clip_cull_distance',\n  'shader-noperspective-interpolation-webgl': 'NV_shader_noperspective_interpolation',\n  'shader-conservative-depth-webgl': 'EXT_conservative_depth'\n\n  // Textures are handled by getTextureFeatures()\n};\n\n/**\n * WebGL extensions exposed as luma.gl features\n * To minimize GL log noise and improve performance, this class ensures that\n * - WebGL extensions are not queried until the corresponding feature is checked.\n * - WebGL extensions are only queried once.\n */\nexport class WebGLDeviceFeatures extends DeviceFeatures {\n  protected gl: WebGL2RenderingContext;\n  protected extensions: GLExtensions;\n  protected testedFeatures = new Set<DeviceFeature>();\n\n  constructor(\n    gl: WebGL2RenderingContext,\n    extensions: GLExtensions,\n    disabledFeatures: Partial<Record<DeviceFeature, boolean>>\n  ) {\n    super([], disabledFeatures);\n    this.gl = gl;\n    this.extensions = extensions;\n    // TODO - is this really needed?\n    // Enable EXT_float_blend first: https://developer.mozilla.org/en-US/docs/Web/API/EXT_float_blend\n    getWebGLExtension(gl, 'EXT_color_buffer_float', extensions);\n  }\n\n  *[Symbol.iterator](): IterableIterator<DeviceFeature> {\n    const features = this.getFeatures();\n    for (const feature of features) {\n      if (this.has(feature)) {\n        yield feature;\n      }\n    }\n    return [];\n  }\n\n  override has(feature: DeviceFeature): boolean {\n    if (this.disabledFeatures?.[feature]) {\n      return false;\n    }\n\n    // We have already tested this feature\n    if (!this.testedFeatures.has(feature)) {\n      this.testedFeatures.add(feature);\n\n      // Check the feature once\n      if (isTextureFeature(feature) && checkTextureFeature(this.gl, feature, this.extensions)) {\n        this.features.add(feature);\n      }\n\n      if (this.getWebGLFeature(feature)) {\n        this.features.add(feature);\n      }\n    }\n    return this.features.has(feature);\n  }\n\n  // FOR DEVICE\n\n  initializeFeatures() {\n    // Initialize all features by checking them.\n    // Except WEBGL_polygon_mode since Chrome logs ugly console warnings\n    const features = this.getFeatures().filter(feature => feature !== 'polygon-mode-webgl');\n    for (const feature of features) {\n      this.has(feature);\n    }\n  }\n\n  // IMPLEMENTATION\n\n  getFeatures() {\n    return [...Object.keys(WEBGL_FEATURES), ...Object.keys(TEXTURE_FEATURES)] as DeviceFeature[];\n  }\n\n  /** Extract all WebGL features */\n  protected getWebGLFeature(feature: DeviceFeature): boolean {\n    const featureInfo = WEBGL_FEATURES[feature];\n    // string value requires checking the corresponding WebGL extension\n    const isSupported =\n      typeof featureInfo === 'string'\n        ? Boolean(getWebGLExtension(this.gl, featureInfo, this.extensions))\n        : Boolean(featureInfo);\n\n    return isSupported;\n  }\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAEpC,8BAA8B;AAC9B,+EAA+E;;;;AAI/E,OAAO,EAAC,iBAAiB,EAAC,kDAA+C;AACzE,OAAO,EACL,gBAAgB,EAChB,mBAAmB,EACnB,gBAAgB,EACjB,6CAA0C;AAP3C,OAAO,EAAgB,cAAc,EAAC,MAAM,eAAe,CAAC;;;;AAS5D;;;GAGG,CACH,MAAM,cAAc,GAAqD;IACvE,2BAA2B;IAC3B,oBAAoB,EAAE,iBAAiB,EAAE,mCAAmC;IAC5E,sDAAsD;IACtD,4BAA4B;IAC5B,+CAA+C;IAC/C,sEAAsE;IAEtE,0BAA0B;IAC1B,mBAAmB,EAAE,iCAAiC;IACtD,gCAAgC,EAAE,6BAA6B;IAC/D,oBAAoB,EAAE,oBAAoB;IAC1C,wBAAwB,EAAE,wBAAwB;IAClD,iCAAiC,EAAE,0BAA0B;IAC7D,0CAA0C,EAAE,uCAAuC;IACnF,iCAAiC,EAAE,wBAAwB;CAG5D,CAAC;AAQI,MAAO,mBAAoB,2KAAQ,iBAAc;IAC3C,EAAE,CAAyB;IAC3B,UAAU,CAAe;IACzB,cAAc,GAAG,IAAI,GAAG,EAAiB,CAAC;IAEpD,YACE,EAA0B,EAC1B,UAAwB,EACxB,gBAAyD,CAAA;QAEzD,KAAK,CAAC,EAAE,EAAE,gBAAgB,CAAC,CAAC;QAC5B,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QACb,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,gCAAgC;QAChC,iGAAiG;uMACjG,oBAAA,AAAiB,EAAC,EAAE,EAAE,wBAAwB,EAAE,UAAU,CAAC,CAAC;IAC9D,CAAC;IAED,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAA;QAChB,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QACpC,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAE,CAAC;YAC/B,IAAI,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;gBACtB,MAAM,OAAO,CAAC;YAChB,CAAC;QACH,CAAC;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAEQ,GAAG,CAAC,OAAsB,EAAA;QACjC,IAAI,IAAI,CAAC,gBAAgB,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC;YACrC,OAAO,KAAK,CAAC;QACf,CAAC;QAED,sCAAsC;QACtC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC;YACtC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAEjC,yBAAyB;YACzB,4MAAI,mBAAA,AAAgB,EAAC,OAAO,CAAC,KAAI,6NAAmB,AAAnB,EAAoB,IAAI,CAAC,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;gBACxF,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC;YAED,IAAI,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC;gBAClC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACpC,CAAC;IAED,aAAa;IAEb,kBAAkB,GAAA;QAChB,4CAA4C;QAC5C,oEAAoE;QACpE,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC,MAAM,EAAC,OAAO,CAAC,EAAE,AAAC,OAAO,KAAK,oBAAoB,CAAC,CAAC;QACxF,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAE,CAAC;YAC/B,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACpB,CAAC;IACH,CAAC;IAED,iBAAiB;IAEjB,WAAW,GAAA;QACT,OAAO,CAAC;eAAG,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;eAAG,MAAM,CAAC,IAAI,qMAAC,mBAAgB,CAAC;SAAoB,CAAC;IAC/F,CAAC;IAED,+BAAA,EAAiC,CACvB,eAAe,CAAC,OAAsB,EAAA;QAC9C,MAAM,WAAW,GAAG,cAAc,CAAC,OAAO,CAAC,CAAC;QAC5C,mEAAmE;QACnE,MAAM,WAAW,GACf,OAAO,WAAW,KAAK,QAAQ,GAC3B,OAAO,gMAAC,oBAAA,AAAiB,EAAC,IAAI,CAAC,EAAE,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,GACjE,OAAO,CAAC,WAAW,CAAC,CAAC;QAE3B,OAAO,WAAW,CAAC;IACrB,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 1546, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1552, "column": 0}, "map": {"version":3,"file":"webgl-parameter-tables.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/context/parameters/webgl-parameter-tables.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Tables describing WebGL parameters\nimport {GL, GLParameters} from '@luma.gl/constants';\n\n// DEFAULT SETTINGS - FOR FAST CACHE INITIALIZATION AND CONTEXT RESETS\n\n/* eslint-disable no-shadow */\n\nexport const GL_PARAMETER_DEFAULTS: GLParameters = {\n  [GL.BLEND]: false,\n  [GL.BLEND_COLOR]: new Float32Array([0, 0, 0, 0]),\n  [GL.BLEND_EQUATION_RGB]: GL.FUNC_ADD,\n  [GL.BLEND_EQUATION_ALPHA]: GL.FUNC_ADD,\n  [GL.BLEND_SRC_RGB]: GL.ONE,\n  [GL.BLEND_DST_RGB]: GL.ZERO,\n  [GL.BLEND_SRC_ALPHA]: GL.ONE,\n  [GL.BLEND_DST_ALPHA]: GL.ZERO,\n  [GL.COLOR_CLEAR_VALUE]: new Float32Array([0, 0, 0, 0]), // TBD\n  [GL.COLOR_WRITEMASK]: [true, true, true, true],\n  [GL.CULL_FACE]: false,\n  [GL.CULL_FACE_MODE]: GL.BACK,\n  [GL.DEPTH_TEST]: false,\n  [GL.DEPTH_CLEAR_VALUE]: 1,\n  [GL.DEPTH_FUNC]: GL.LESS,\n  [GL.DEPTH_RANGE]: new Float32Array([0, 1]), // TBD\n  [GL.DEPTH_WRITEMASK]: true,\n  [GL.DITHER]: true,\n  [GL.CURRENT_PROGRAM]: null,\n  // FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: null,\n  [GL.RENDERBUFFER_BINDING]: null,\n  [GL.VERTEX_ARRAY_BINDING]: null,\n  [GL.ARRAY_BUFFER_BINDING]: null,\n  [GL.FRONT_FACE]: GL.CCW,\n  [GL.GENERATE_MIPMAP_HINT]: GL.DONT_CARE,\n  [GL.LINE_WIDTH]: 1,\n  [GL.POLYGON_OFFSET_FILL]: false,\n  [GL.POLYGON_OFFSET_FACTOR]: 0,\n  [GL.POLYGON_OFFSET_UNITS]: 0,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: false,\n  [GL.SAMPLE_COVERAGE]: false,\n  [GL.SAMPLE_COVERAGE_VALUE]: 1.0,\n  [GL.SAMPLE_COVERAGE_INVERT]: false,\n  [GL.SCISSOR_TEST]: false,\n  // Note: Dynamic value. If scissor test enabled we expect users to set correct scissor box\n  [GL.SCISSOR_BOX]: new Int32Array([0, 0, 1024, 1024]),\n  [GL.STENCIL_TEST]: false,\n  [GL.STENCIL_CLEAR_VALUE]: 0,\n  [GL.STENCIL_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_BACK_WRITEMASK]: 0xffffffff,\n  [GL.STENCIL_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_REF]: 0,\n  [GL.STENCIL_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_BACK_FUNC]: GL.ALWAYS,\n  [GL.STENCIL_BACK_REF]: 0,\n  [GL.STENCIL_BACK_VALUE_MASK]: 0xffffffff,\n  [GL.STENCIL_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_PASS_DEPTH_PASS]: GL.KEEP,\n  [GL.STENCIL_BACK_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: GL.KEEP,\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: GL.KEEP,\n  // Dynamic value: We use [0, 0, 1024, 1024] as default, but usually this is updated in each frame.\n  [GL.VIEWPORT]: [0, 0, 1024, 1024],\n\n  [GL.TRANSFORM_FEEDBACK_BINDING]: null,\n  [GL.COPY_READ_BUFFER_BINDING]: null,\n  [GL.COPY_WRITE_BUFFER_BINDING]: null,\n  [GL.PIXEL_PACK_BUFFER_BINDING]: null,\n  [GL.PIXEL_UNPACK_BUFFER_BINDING]: null,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: GL.DONT_CARE,\n  [GL.READ_FRAMEBUFFER_BINDING]: null,\n  [GL.RASTERIZER_DISCARD]: false,\n\n  [GL.PACK_ALIGNMENT]: 4,\n  [GL.UNPACK_ALIGNMENT]: 4,\n  [GL.UNPACK_FLIP_Y_WEBGL]: false,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: false,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: GL.BROWSER_DEFAULT_WEBGL,\n  [GL.PACK_ROW_LENGTH]: 0,\n  [GL.PACK_SKIP_PIXELS]: 0,\n  [GL.PACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_ROW_LENGTH]: 0,\n  [GL.UNPACK_IMAGE_HEIGHT]: 0,\n  [GL.UNPACK_SKIP_PIXELS]: 0,\n  [GL.UNPACK_SKIP_ROWS]: 0,\n  [GL.UNPACK_SKIP_IMAGES]: 0\n};\n\n// SETTER TABLES - ENABLES SETTING ANY PARAMETER WITH A COMMON API\n\nconst enable = (gl: WebGL2RenderingContext, value: unknown, key: GL) =>\n  value ? gl.enable(key) : gl.disable(key);\nconst hint = (gl: WebGL2RenderingContext, value: GL, key: GL) => gl.hint(key, value);\nconst pixelStorei = (gl: WebGL2RenderingContext, value: number | boolean, key: GL) =>\n  gl.pixelStorei(key, value);\n\nconst bindFramebuffer = (gl: WebGL2RenderingContext, value: unknown, key: GL) => {\n  const target = key === GL.FRAMEBUFFER_BINDING ? GL.DRAW_FRAMEBUFFER : GL.READ_FRAMEBUFFER;\n  return gl.bindFramebuffer(target, value as WebGLFramebuffer);\n};\n\nconst bindBuffer = (gl: WebGL2RenderingContext, value: unknown, key: GL) => {\n  const bindingMap: Partial<Record<GL, GL>> = {\n    [GL.ARRAY_BUFFER_BINDING]: GL.ARRAY_BUFFER,\n    [GL.COPY_READ_BUFFER_BINDING]: GL.COPY_READ_BUFFER,\n    [GL.COPY_WRITE_BUFFER_BINDING]: GL.COPY_WRITE_BUFFER,\n    [GL.PIXEL_PACK_BUFFER_BINDING]: GL.PIXEL_PACK_BUFFER,\n    [GL.PIXEL_UNPACK_BUFFER_BINDING]: GL.PIXEL_UNPACK_BUFFER\n  };\n  const glTarget = bindingMap[key];\n\n  gl.bindBuffer(glTarget as number, value as WebGLBuffer | null);\n};\n\n// Utility\nfunction isArray(array: unknown): boolean {\n  return Array.isArray(array) || (ArrayBuffer.isView(array) && !(array instanceof DataView));\n}\n\n// Map from WebGL parameter names to corresponding WebGL setter functions\n// WegGL constants are read by parameter names, but set by function names\n// NOTE: When value type is a string, it will be handled by 'GL_COMPOSITE_PARAMETER_SETTERS'\nexport const GL_PARAMETER_SETTERS = {\n  [GL.BLEND]: enable,\n  [GL.BLEND_COLOR]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.blendColor(...value),\n  [GL.BLEND_EQUATION_RGB]: 'blendEquation',\n  [GL.BLEND_EQUATION_ALPHA]: 'blendEquation',\n  [GL.BLEND_SRC_RGB]: 'blendFunc',\n  [GL.BLEND_DST_RGB]: 'blendFunc',\n  [GL.BLEND_SRC_ALPHA]: 'blendFunc',\n  [GL.BLEND_DST_ALPHA]: 'blendFunc',\n  [GL.COLOR_CLEAR_VALUE]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.clearColor(...value),\n  [GL.COLOR_WRITEMASK]: (gl: WebGL2RenderingContext, value: [boolean, boolean, boolean, boolean]) =>\n    gl.colorMask(...value),\n  [GL.CULL_FACE]: enable,\n  [GL.CULL_FACE_MODE]: (gl: WebGL2RenderingContext, value) => gl.cullFace(value),\n  [GL.DEPTH_TEST]: enable,\n  [GL.DEPTH_CLEAR_VALUE]: (gl: WebGL2RenderingContext, value) => gl.clearDepth(value),\n  [GL.DEPTH_FUNC]: (gl: WebGL2RenderingContext, value) => gl.depthFunc(value),\n  [GL.DEPTH_RANGE]: (gl: WebGL2RenderingContext, value: [number, number]) =>\n    gl.depthRange(...value),\n  [GL.DEPTH_WRITEMASK]: (gl: WebGL2RenderingContext, value) => gl.depthMask(value),\n  [GL.DITHER]: enable,\n  [GL.FRAGMENT_SHADER_DERIVATIVE_HINT]: hint,\n\n  [GL.CURRENT_PROGRAM]: (gl: WebGL2RenderingContext, value) => gl.useProgram(value),\n  [GL.RENDERBUFFER_BINDING]: (gl: WebGL2RenderingContext, value) =>\n    gl.bindRenderbuffer(GL.RENDERBUFFER, value),\n  [GL.TRANSFORM_FEEDBACK_BINDING]: (gl: WebGL2RenderingContext, value) =>\n    gl.bindTransformFeedback?.(GL.TRANSFORM_FEEDBACK, value),\n  [GL.VERTEX_ARRAY_BINDING]: (gl: WebGL2RenderingContext, value) => gl.bindVertexArray(value),\n  // NOTE: FRAMEBUFFER_BINDING and DRAW_FRAMEBUFFER_BINDING(WebGL2) refer same state.\n  [GL.FRAMEBUFFER_BINDING]: bindFramebuffer,\n  [GL.READ_FRAMEBUFFER_BINDING]: bindFramebuffer,\n\n  // Buffers\n  [GL.ARRAY_BUFFER_BINDING]: bindBuffer,\n  [GL.COPY_READ_BUFFER_BINDING]: bindBuffer,\n  [GL.COPY_WRITE_BUFFER_BINDING]: bindBuffer,\n  [GL.PIXEL_PACK_BUFFER_BINDING]: bindBuffer,\n  [GL.PIXEL_UNPACK_BUFFER_BINDING]: bindBuffer,\n\n  [GL.FRONT_FACE]: (gl: WebGL2RenderingContext, value) => gl.frontFace(value),\n  [GL.GENERATE_MIPMAP_HINT]: hint,\n  [GL.LINE_WIDTH]: (gl: WebGL2RenderingContext, value) => gl.lineWidth(value),\n  [GL.POLYGON_OFFSET_FILL]: enable,\n  [GL.POLYGON_OFFSET_FACTOR]: 'polygonOffset',\n  [GL.POLYGON_OFFSET_UNITS]: 'polygonOffset',\n  [GL.RASTERIZER_DISCARD]: enable,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: enable,\n  [GL.SAMPLE_COVERAGE]: enable,\n  [GL.SAMPLE_COVERAGE_VALUE]: 'sampleCoverage',\n  [GL.SAMPLE_COVERAGE_INVERT]: 'sampleCoverage',\n  [GL.SCISSOR_TEST]: enable,\n  [GL.SCISSOR_BOX]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.scissor(...value),\n  [GL.STENCIL_TEST]: enable,\n  [GL.STENCIL_CLEAR_VALUE]: (gl: WebGL2RenderingContext, value) => gl.clearStencil(value),\n  [GL.STENCIL_WRITEMASK]: (gl: WebGL2RenderingContext, value) =>\n    gl.stencilMaskSeparate(GL.FRONT, value),\n  [GL.STENCIL_BACK_WRITEMASK]: (gl: WebGL2RenderingContext, value) =>\n    gl.stencilMaskSeparate(GL.BACK, value),\n  [GL.STENCIL_FUNC]: 'stencilFuncFront',\n  [GL.STENCIL_REF]: 'stencilFuncFront',\n  [GL.STENCIL_VALUE_MASK]: 'stencilFuncFront',\n  [GL.STENCIL_BACK_FUNC]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_REF]: 'stencilFuncBack',\n  [GL.STENCIL_BACK_VALUE_MASK]: 'stencilFuncBack',\n  [GL.STENCIL_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_FAIL]: 'stencilOpFront',\n  [GL.STENCIL_PASS_DEPTH_PASS]: 'stencilOpFront',\n  [GL.STENCIL_BACK_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: 'stencilOpBack',\n  [GL.STENCIL_BACK_PASS_DEPTH_PASS]: 'stencilOpBack',\n  [GL.VIEWPORT]: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.viewport(...value),\n\n  // WEBGL2 EXTENSIONS\n\n  // EXT_depth_clamp https://registry.khronos.org/webgl/extensions/EXT_depth_clamp/\n\n  [GL.DEPTH_CLAMP_EXT]: enable,\n\n  // WEBGL_provoking_vertex https://registry.khronos.org/webgl/extensions/WEBGL_provoking_vertex/\n\n  // [GL.PROVOKING_VERTEX_WEBL]: TODO - extension function needed\n\n  // WEBGL_polygon_mode https://registry.khronos.org/webgl/extensions/WEBGL_polygon_mode/\n\n  // POLYGON_MODE_WEBGL  TODO - extension function needed\n  [GL.POLYGON_OFFSET_LINE_WEBGL]: enable,\n\n  // WEBGL_clip_cull_distance https://registry.khronos.org/webgl/extensions/WEBGL_clip_cull_distance/\n\n  [GL.CLIP_DISTANCE0_WEBGL]: enable,\n  [GL.CLIP_DISTANCE1_WEBGL]: enable,\n  [GL.CLIP_DISTANCE2_WEBGL]: enable,\n  [GL.CLIP_DISTANCE3_WEBGL]: enable,\n  [GL.CLIP_DISTANCE4_WEBGL]: enable,\n  [GL.CLIP_DISTANCE5_WEBGL]: enable,\n  [GL.CLIP_DISTANCE6_WEBGL]: enable,\n  [GL.CLIP_DISTANCE7_WEBGL]: enable,\n\n  // PIXEL PACK/UNPACK MODES\n  [GL.PACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_ALIGNMENT]: pixelStorei,\n  [GL.UNPACK_FLIP_Y_WEBGL]: pixelStorei,\n  [GL.UNPACK_PREMULTIPLY_ALPHA_WEBGL]: pixelStorei,\n  [GL.UNPACK_COLORSPACE_CONVERSION_WEBGL]: pixelStorei,\n  [GL.PACK_ROW_LENGTH]: pixelStorei,\n  [GL.PACK_SKIP_PIXELS]: pixelStorei,\n  [GL.PACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_ROW_LENGTH]: pixelStorei,\n  [GL.UNPACK_IMAGE_HEIGHT]: pixelStorei,\n  [GL.UNPACK_SKIP_PIXELS]: pixelStorei,\n  [GL.UNPACK_SKIP_ROWS]: pixelStorei,\n  [GL.UNPACK_SKIP_IMAGES]: pixelStorei,\n\n  // Function-style setters\n  framebuffer: (gl: WebGL2RenderingContext, framebuffer) => {\n    // accepts 1) a WebGLFramebuffer 2) null (default framebuffer), or 3) luma.gl Framebuffer class\n    // framebuffer is null when restoring to default framebuffer, otherwise use the WebGL handle.\n    const handle = framebuffer && 'handle' in framebuffer ? framebuffer.handle : framebuffer;\n    return gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  },\n  blend: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.BLEND) : gl.disable(GL.BLEND),\n  blendColor: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.blendColor(...value),\n  blendEquation: (gl: WebGL2RenderingContext, args: number | [number, number]) => {\n    const separateModes = typeof args === 'number' ? ([args, args] as [number, number]) : args;\n    gl.blendEquationSeparate(...separateModes);\n  },\n  blendFunc: (\n    gl: WebGL2RenderingContext,\n    args: [number, number] | [number, number, number, number]\n  ) => {\n    const separateFuncs =\n      args?.length === 2 ? ([...args, ...args] as [number, number, number, number]) : args;\n    gl.blendFuncSeparate(...separateFuncs);\n  },\n\n  clearColor: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.clearColor(...value),\n  clearDepth: (gl: WebGL2RenderingContext, value) => gl.clearDepth(value),\n  clearStencil: (gl: WebGL2RenderingContext, value) => gl.clearStencil(value),\n\n  colorMask: (gl: WebGL2RenderingContext, value: [boolean, boolean, boolean, boolean]) =>\n    gl.colorMask(...value),\n\n  cull: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.CULL_FACE) : gl.disable(GL.CULL_FACE),\n  cullFace: (gl: WebGL2RenderingContext, value) => gl.cullFace(value),\n\n  depthTest: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST),\n  depthFunc: (gl: WebGL2RenderingContext, value) => gl.depthFunc(value),\n  depthMask: (gl: WebGL2RenderingContext, value) => gl.depthMask(value),\n  depthRange: (gl: WebGL2RenderingContext, value: [number, number]) => gl.depthRange(...value),\n\n  dither: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.DITHER) : gl.disable(GL.DITHER),\n\n  derivativeHint: (gl: WebGL2RenderingContext, value) => {\n    // gl1: 'OES_standard_derivatives'\n    gl.hint(GL.FRAGMENT_SHADER_DERIVATIVE_HINT, value);\n  },\n\n  frontFace: (gl: WebGL2RenderingContext, value) => gl.frontFace(value),\n\n  mipmapHint: (gl: WebGL2RenderingContext, value) => gl.hint(GL.GENERATE_MIPMAP_HINT, value),\n\n  lineWidth: (gl: WebGL2RenderingContext, value) => gl.lineWidth(value),\n\n  polygonOffsetFill: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.POLYGON_OFFSET_FILL) : gl.disable(GL.POLYGON_OFFSET_FILL),\n  polygonOffset: (gl: WebGL2RenderingContext, value: [number, number]) =>\n    gl.polygonOffset(...value),\n\n  sampleCoverage: (gl: WebGL2RenderingContext, value: [number, boolean?]) =>\n    gl.sampleCoverage(value[0], value[1] || false),\n\n  scissorTest: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.SCISSOR_TEST) : gl.disable(GL.SCISSOR_TEST),\n  scissor: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.scissor(...value),\n\n  stencilTest: (gl: WebGL2RenderingContext, value) =>\n    value ? gl.enable(GL.STENCIL_TEST) : gl.disable(GL.STENCIL_TEST),\n  stencilMask: (gl: WebGL2RenderingContext, value) => {\n    value = isArray(value) ? value : [value, value];\n    const [mask, backMask] = value;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, backMask);\n  },\n  stencilFunc: (gl: WebGL2RenderingContext, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [func, ref, mask, backFunc, backRef, backMask] = args;\n    gl.stencilFuncSeparate(GL.FRONT, func, ref, mask);\n    gl.stencilFuncSeparate(GL.BACK, backFunc, backRef, backMask);\n  },\n  stencilOp: (gl: WebGL2RenderingContext, args) => {\n    args = isArray(args) && args.length === 3 ? [...args, ...args] : args;\n    const [sfail, dpfail, dppass, backSfail, backDpfail, backDppass] = args;\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, backSfail, backDpfail, backDppass);\n  },\n\n  viewport: (gl: WebGL2RenderingContext, value: [number, number, number, number]) =>\n    gl.viewport(...value)\n};\n\nfunction getValue(glEnum, values, cache) {\n  return values[glEnum] !== undefined ? values[glEnum] : cache[glEnum];\n}\n\n// COMPOSITE_WEBGL_PARAMETER_\nexport const GL_COMPOSITE_PARAMETER_SETTERS = {\n  blendEquation: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.blendEquationSeparate(\n      getValue(GL.BLEND_EQUATION_RGB, values, cache),\n      getValue(GL.BLEND_EQUATION_ALPHA, values, cache)\n    ),\n  blendFunc: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.blendFuncSeparate(\n      getValue(GL.BLEND_SRC_RGB, values, cache),\n      getValue(GL.BLEND_DST_RGB, values, cache),\n      getValue(GL.BLEND_SRC_ALPHA, values, cache),\n      getValue(GL.BLEND_DST_ALPHA, values, cache)\n    ),\n  polygonOffset: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.polygonOffset(\n      getValue(GL.POLYGON_OFFSET_FACTOR, values, cache),\n      getValue(GL.POLYGON_OFFSET_UNITS, values, cache)\n    ),\n  sampleCoverage: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.sampleCoverage(\n      getValue(GL.SAMPLE_COVERAGE_VALUE, values, cache),\n      getValue(GL.SAMPLE_COVERAGE_INVERT, values, cache)\n    ),\n  stencilFuncFront: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FUNC, values, cache),\n      getValue(GL.STENCIL_REF, values, cache),\n      getValue(GL.STENCIL_VALUE_MASK, values, cache)\n    ),\n  stencilFuncBack: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilFuncSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FUNC, values, cache),\n      getValue(GL.STENCIL_BACK_REF, values, cache),\n      getValue(GL.STENCIL_BACK_VALUE_MASK, values, cache)\n    ),\n  stencilOpFront: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.FRONT,\n      getValue(GL.STENCIL_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_PASS_DEPTH_PASS, values, cache)\n    ),\n  stencilOpBack: (gl: WebGL2RenderingContext, values, cache) =>\n    gl.stencilOpSeparate(\n      GL.BACK,\n      getValue(GL.STENCIL_BACK_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_FAIL, values, cache),\n      getValue(GL.STENCIL_BACK_PASS_DEPTH_PASS, values, cache)\n    )\n};\n\ntype UpdateFunc = (params: Record<string, any>) => void;\n\n// Setter functions intercepted for cache updates\nexport const GL_HOOKED_SETTERS = {\n  // GENERIC SETTERS\n\n  enable: (update: UpdateFunc, capability: GL) =>\n    update({\n      [capability]: true\n    }),\n  disable: (update: UpdateFunc, capability: GL) =>\n    update({\n      [capability]: false\n    }),\n  pixelStorei: (update: UpdateFunc, pname: GL, value) =>\n    update({\n      [pname]: value\n    }),\n  hint: (update: UpdateFunc, pname: GL, value: GL) =>\n    update({\n      [pname]: value\n    }),\n\n  // SPECIFIC SETTERS\n  useProgram: (update: UpdateFunc, value) =>\n    update({\n      [GL.CURRENT_PROGRAM]: value\n    }),\n  bindRenderbuffer: (update: UpdateFunc, target, value) =>\n    update({\n      [GL.RENDERBUFFER_BINDING]: value\n    }),\n  bindTransformFeedback: (update: UpdateFunc, target, value) =>\n    update({\n      [GL.TRANSFORM_FEEDBACK_BINDING]: value\n    }),\n  bindVertexArray: (update: UpdateFunc, value) =>\n    update({\n      [GL.VERTEX_ARRAY_BINDING]: value\n    }),\n\n  bindFramebuffer: (update: UpdateFunc, target, framebuffer) => {\n    switch (target) {\n      case GL.FRAMEBUFFER:\n        return update({\n          [GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer,\n          [GL.READ_FRAMEBUFFER_BINDING]: framebuffer\n        });\n      case GL.DRAW_FRAMEBUFFER:\n        return update({[GL.DRAW_FRAMEBUFFER_BINDING]: framebuffer});\n      case GL.READ_FRAMEBUFFER:\n        return update({[GL.READ_FRAMEBUFFER_BINDING]: framebuffer});\n      default:\n        return null;\n    }\n  },\n  bindBuffer: (update: UpdateFunc, target, buffer) => {\n    const pname = {\n      [GL.ARRAY_BUFFER]: [GL.ARRAY_BUFFER_BINDING],\n      [GL.COPY_READ_BUFFER]: [GL.COPY_READ_BUFFER_BINDING],\n      [GL.COPY_WRITE_BUFFER]: [GL.COPY_WRITE_BUFFER_BINDING],\n      [GL.PIXEL_PACK_BUFFER]: [GL.PIXEL_PACK_BUFFER_BINDING],\n      [GL.PIXEL_UNPACK_BUFFER]: [GL.PIXEL_UNPACK_BUFFER_BINDING]\n    }[target];\n\n    if (pname) {\n      return update({[pname]: buffer});\n    }\n    // targets that should not be cached\n    return {valueChanged: true};\n  },\n\n  blendColor: (update: UpdateFunc, r: number, g: number, b: number, a: number) =>\n    update({\n      [GL.BLEND_COLOR]: new Float32Array([r, g, b, a])\n    }),\n\n  blendEquation: (update: UpdateFunc, mode) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: mode,\n      [GL.BLEND_EQUATION_ALPHA]: mode\n    }),\n\n  blendEquationSeparate: (update: UpdateFunc, modeRGB, modeAlpha) =>\n    update({\n      [GL.BLEND_EQUATION_RGB]: modeRGB,\n      [GL.BLEND_EQUATION_ALPHA]: modeAlpha\n    }),\n\n  blendFunc: (update: UpdateFunc, src, dst) =>\n    update({\n      [GL.BLEND_SRC_RGB]: src,\n      [GL.BLEND_DST_RGB]: dst,\n      [GL.BLEND_SRC_ALPHA]: src,\n      [GL.BLEND_DST_ALPHA]: dst\n    }),\n\n  blendFuncSeparate: (update: UpdateFunc, srcRGB, dstRGB, srcAlpha, dstAlpha) =>\n    update({\n      [GL.BLEND_SRC_RGB]: srcRGB,\n      [GL.BLEND_DST_RGB]: dstRGB,\n      [GL.BLEND_SRC_ALPHA]: srcAlpha,\n      [GL.BLEND_DST_ALPHA]: dstAlpha\n    }),\n\n  clearColor: (update: UpdateFunc, r: number, g: number, b: number, a: number) =>\n    update({\n      [GL.COLOR_CLEAR_VALUE]: new Float32Array([r, g, b, a])\n    }),\n\n  clearDepth: (update: UpdateFunc, depth: number) =>\n    update({\n      [GL.DEPTH_CLEAR_VALUE]: depth\n    }),\n\n  clearStencil: (update: UpdateFunc, s: number) =>\n    update({\n      [GL.STENCIL_CLEAR_VALUE]: s\n    }),\n\n  colorMask: (update: UpdateFunc, r: number, g: number, b: number, a: number) =>\n    update({\n      [GL.COLOR_WRITEMASK]: [r, g, b, a]\n    }),\n\n  cullFace: (update: UpdateFunc, mode) =>\n    update({\n      [GL.CULL_FACE_MODE]: mode\n    }),\n\n  depthFunc: (update: UpdateFunc, func) =>\n    update({\n      [GL.DEPTH_FUNC]: func\n    }),\n\n  depthRange: (update: UpdateFunc, zNear: number, zFar: number) =>\n    update({\n      [GL.DEPTH_RANGE]: new Float32Array([zNear, zFar])\n    }),\n\n  depthMask: (update: UpdateFunc, mask: number) =>\n    update({\n      [GL.DEPTH_WRITEMASK]: mask\n    }),\n\n  frontFace: (update: UpdateFunc, face) =>\n    update({\n      [GL.FRONT_FACE]: face\n    }),\n\n  lineWidth: (update: UpdateFunc, width) =>\n    update({\n      [GL.LINE_WIDTH]: width\n    }),\n\n  polygonOffset: (update: UpdateFunc, factor, units) =>\n    update({\n      [GL.POLYGON_OFFSET_FACTOR]: factor,\n      [GL.POLYGON_OFFSET_UNITS]: units\n    }),\n\n  sampleCoverage: (update: UpdateFunc, value, invert) =>\n    update({\n      [GL.SAMPLE_COVERAGE_VALUE]: value,\n      [GL.SAMPLE_COVERAGE_INVERT]: invert\n    }),\n\n  scissor: (update: UpdateFunc, x, y, width, height) =>\n    update({\n      [GL.SCISSOR_BOX]: new Int32Array([x, y, width, height])\n    }),\n\n  stencilMask: (update: UpdateFunc, mask) =>\n    update({\n      [GL.STENCIL_WRITEMASK]: mask,\n      [GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilMaskSeparate: (update: UpdateFunc, face, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_WRITEMASK : GL.STENCIL_BACK_WRITEMASK]: mask\n    }),\n\n  stencilFunc: (update: UpdateFunc, func, ref, mask) =>\n    update({\n      [GL.STENCIL_FUNC]: func,\n      [GL.STENCIL_REF]: ref,\n      [GL.STENCIL_VALUE_MASK]: mask,\n      [GL.STENCIL_BACK_FUNC]: func,\n      [GL.STENCIL_BACK_REF]: ref,\n      [GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilFuncSeparate: (update: UpdateFunc, face, func, ref, mask) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FUNC : GL.STENCIL_BACK_FUNC]: func,\n      [face === GL.FRONT ? GL.STENCIL_REF : GL.STENCIL_BACK_REF]: ref,\n      [face === GL.FRONT ? GL.STENCIL_VALUE_MASK : GL.STENCIL_BACK_VALUE_MASK]: mask\n    }),\n\n  stencilOp: (update: UpdateFunc, fail, zfail, zpass) =>\n    update({\n      [GL.STENCIL_FAIL]: fail,\n      [GL.STENCIL_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_PASS_DEPTH_PASS]: zpass,\n      [GL.STENCIL_BACK_FAIL]: fail,\n      [GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  stencilOpSeparate: (update: UpdateFunc, face, fail, zfail, zpass) =>\n    update({\n      [face === GL.FRONT ? GL.STENCIL_FAIL : GL.STENCIL_BACK_FAIL]: fail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_FAIL : GL.STENCIL_BACK_PASS_DEPTH_FAIL]: zfail,\n      [face === GL.FRONT ? GL.STENCIL_PASS_DEPTH_PASS : GL.STENCIL_BACK_PASS_DEPTH_PASS]: zpass\n    }),\n\n  viewport: (update: UpdateFunc, x, y, width, height) =>\n    update({\n      [GL.VIEWPORT]: [x, y, width, height]\n    })\n};\n\n// GETTER TABLE - FOR READING OUT AN ENTIRE CONTEXT\n\nconst isEnabled = (gl: WebGL2RenderingContext, key) => gl.isEnabled(key);\n\n// Exceptions for any keys that cannot be queried by gl.getParameters\nexport const GL_PARAMETER_GETTERS = {\n  [GL.BLEND]: isEnabled,\n  [GL.CULL_FACE]: isEnabled,\n  [GL.DEPTH_TEST]: isEnabled,\n  [GL.DITHER]: isEnabled,\n  [GL.POLYGON_OFFSET_FILL]: isEnabled,\n  [GL.SAMPLE_ALPHA_TO_COVERAGE]: isEnabled,\n  [GL.SAMPLE_COVERAGE]: isEnabled,\n  [GL.SCISSOR_TEST]: isEnabled,\n  [GL.STENCIL_TEST]: isEnabled,\n  [GL.RASTERIZER_DISCARD]: isEnabled\n};\n\nexport const NON_CACHE_PARAMETERS = new Set([\n  // setter not intercepted\n  GL.ACTIVE_TEXTURE,\n  GL.TRANSFORM_FEEDBACK_ACTIVE,\n  GL.TRANSFORM_FEEDBACK_PAUSED,\n\n  // setters bindBufferRange/bindBufferBase cannot be pruned based on cache\n  GL.TRANSFORM_FEEDBACK_BUFFER_BINDING,\n  GL.UNIFORM_BUFFER_BINDING,\n\n  // states depending on VERTEX_ARRAY_BINDING\n  GL.ELEMENT_ARRAY_BUFFER_BINDING,\n  // states depending on READ_FRAMEBUFFER_BINDING\n  GL.IMPLEMENTATION_COLOR_READ_FORMAT,\n  GL.IMPLEMENTATION_COLOR_READ_TYPE,\n  // states depending on FRAMEBUFFER_BINDING\n  GL.READ_BUFFER,\n  GL.DRAW_BUFFER0,\n  GL.DRAW_BUFFER1,\n  GL.DRAW_BUFFER2,\n  GL.DRAW_BUFFER3,\n  GL.DRAW_BUFFER4,\n  GL.DRAW_BUFFER5,\n  GL.DRAW_BUFFER6,\n  GL.DRAW_BUFFER7,\n  GL.DRAW_BUFFER8,\n  GL.DRAW_BUFFER9,\n  GL.DRAW_BUFFER10,\n  GL.DRAW_BUFFER11,\n  GL.DRAW_BUFFER12,\n  GL.DRAW_BUFFER13,\n  GL.DRAW_BUFFER14,\n  GL.DRAW_BUFFER15,\n  // states depending on ACTIVE_TEXTURE\n  GL.SAMPLER_BINDING,\n  GL.TEXTURE_BINDING_2D,\n  GL.TEXTURE_BINDING_2D_ARRAY,\n  GL.TEXTURE_BINDING_3D,\n  GL.TEXTURE_BINDING_CUBE_MAP\n]);\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2126, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2132, "column": 0}, "map": {"version":3,"file":"unified-parameter-api.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/context/parameters/unified-parameter-api.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Provides a unified API for getting and setting any WebGL parameter\n// Also knows default values of all parameters, enabling fast cache initialization\n// Provides base functionality for the state caching.\nimport type {GLParameters} from '@luma.gl/constants';\nimport {\n  GL_PARAMETER_DEFAULTS,\n  GL_PARAMETER_SETTERS,\n  GL_COMPOSITE_PARAMETER_SETTERS,\n  GL_PARAMETER_GETTERS\n} from './webgl-parameter-tables';\n\nexport type {GLParameters};\n\n/**\n * Sets any GL parameter regardless of function (gl.blendMode, ...)\n *\n * @note requires a `cache` object to be set on the context (gl.state.cache)\n * This object is used to fill in any missing values for composite setter functions\n */\nexport function setGLParameters(gl: WebGL2RenderingContext, parameters: GLParameters): void {\n  if (isObjectEmpty(parameters)) {\n    return;\n  }\n\n  const compositeSetters = {};\n\n  // HANDLE PRIMITIVE SETTERS (and make note of any composite setters)\n\n  for (const key in parameters) {\n    const glConstant = Number(key);\n    const setter = GL_PARAMETER_SETTERS[key];\n    if (setter) {\n      // Composite setters should only be called once, so save them\n      if (typeof setter === 'string') {\n        compositeSetters[setter] = true;\n      } else {\n        // if (gl[glConstant] !== undefined) {\n        // TODO - added above check since this is being called on WebGL2 parameters in WebGL1...\n        // TODO - deep equal on values? only call setter if value has changed?\n        // NOTE - the setter will automatically update this.state\n        setter(gl, parameters[key], glConstant);\n      }\n    }\n  }\n\n  // HANDLE COMPOSITE SETTERS\n\n  // NOTE: any non-provided values needed by composite setters are filled in from state cache\n  // The cache parameter is automatically retrieved from the context\n  // This depends on `trackContextState`, which is technically a \"circular\" dependency.\n  // But it is too inconvenient to always require a cache parameter here.\n  // This is the ONLY external dependency in this module/\n  // @ts-expect-error\n  const cache = gl.state && gl.state.cache;\n  if (cache) {\n    for (const key in compositeSetters) {\n      // TODO - avoid calling composite setters if values have not changed.\n      const compositeSetter = GL_COMPOSITE_PARAMETER_SETTERS[key];\n      // Note - if `trackContextState` has been called,\n      // the setter will automatically update this.state.cache\n      compositeSetter(gl, parameters, cache);\n    }\n  }\n\n  // Add a log for the else case?\n}\n\n/**\n * Reads the entire WebGL state from a context\n\n  // default to querying all parameters\n\n  * @returns - a newly created map, with values keyed by GL parameters\n *\n * @note Copies the state from a context (gl.getParameter should not be overriden)\n * Reads the entire WebGL state from a context\n *\n * @note This can generates a huge amount of synchronous driver roundtrips and should be\n * considered a very slow operation, to be used only if/when a context already manipulated\n * by external code needs to be synchronized for the first time\n */\nexport function getGLParameters(\n  gl: WebGL2RenderingContext,\n  parameters: keyof GLParameters | (keyof GLParameters)[] | GLParameters = GL_PARAMETER_DEFAULTS\n): GLParameters {\n  // support both arrays of parameters and objects (keys represent parameters)\n\n  if (typeof parameters === 'number') {\n    // single GL enum\n    const key = parameters;\n    const getter = GL_PARAMETER_GETTERS[key];\n    return getter ? getter(gl, key) : gl.getParameter(key);\n  }\n\n  const parameterKeys = Array.isArray(parameters) ? parameters : Object.keys(parameters);\n\n  const state = {};\n  for (const key of parameterKeys) {\n    const getter = GL_PARAMETER_GETTERS[key];\n    state[key] = getter ? getter(gl, Number(key)) : gl.getParameter(Number(key));\n  }\n  return state;\n}\n\n/**\n * Reset all parameters to a (almost) pure context state\n * @note viewport and scissor will be set to the values in GL_PARAMETER_DEFAULTS,\n * NOT the canvas size dimensions, so they will have to be properly set after\n * calling this function.\n */\nexport function resetGLParameters(gl: WebGL2RenderingContext): void {\n  setGLParameters(gl, GL_PARAMETER_DEFAULTS);\n}\n\n// Helpers\n\n// Returns true if given object is empty, false otherwise.\nfunction isObjectEmpty(object) {\n  // @ts-ignore dummy key variable\n  for (const key in object) {\n    return false;\n  }\n  return true;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2211, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2217, "column": 0}, "map": {"version":3,"file":"deep-array-equal.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/context/state-tracker/deep-array-equal.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/** deeply compare two arrays */\nexport function deepArrayEqual(x: any, y: any): boolean {\n  if (x === y) {\n    return true;\n  }\n  const isArrayX = Array.isArray(x) || ArrayBuffer.isView(x);\n  const isArrayY = Array.isArray(y) || ArrayBuffer.isView(y);\n  // @ts-expect-error TODO fix\n  if (isArrayX && isArrayY && x.length === y.length) {\n    // @ts-expect-error TODO fix\n    for (let i = 0; i < x.length; ++i) {\n      if (x[i] !== y[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAEpC,8BAAA,EAAgC;;;AAC1B,SAAU,cAAc,CAAC,CAAM,EAAE,CAAM;IAC3C,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC;QACZ,OAAO,IAAI,CAAC;IACd,CAAC;IACD,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3D,MAAM,QAAQ,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC3D,4BAA4B;IAC5B,IAAI,QAAQ,IAAI,QAAQ,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;QAClD,4BAA4B;QAC5B,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE,CAAC;YAClC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAClB,OAAO,KAAK,CAAC;YACf,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IACD,OAAO,KAAK,CAAC;AACf,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2241, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2247, "column": 0}, "map": {"version":3,"file":"webgl-state-tracker.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/context/state-tracker/webgl-state-tracker.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {setGLParameters, getGLParameters} from '../parameters/unified-parameter-api';\nimport {deepArrayEqual} from './deep-array-equal';\nimport {\n  GL_PARAMETER_DEFAULTS,\n  GL_HOOKED_SETTERS,\n  NON_CACHE_PARAMETERS\n} from '../parameters/webgl-parameter-tables';\n\n// HELPER CLASS - WebGLStateTracker\n\n/**\n * Support for listening to context state changes and intercepting state queries\n * NOTE: this system does not handle buffer bindings\n */\nexport class WebGLStateTracker {\n  static get(gl: WebGL2RenderingContext): WebGLStateTracker {\n    // @ts-expect-error\n    return gl.state as WebGLStateTracker;\n  }\n\n  gl: WebGL2RenderingContext;\n  program: unknown = null;\n  stateStack: object[] = [];\n  enable = true;\n  cache: Record<string, any> = null!;\n  log;\n\n  protected initialized = false;\n\n  constructor(\n    gl: WebGL2RenderingContext,\n    props?: {\n      log; // Logging function, called when gl parameter change calls are actually issued\n    }\n  ) {\n    this.gl = gl;\n    this.log = props?.log || (() => {});\n\n    this._updateCache = this._updateCache.bind(this);\n    Object.seal(this);\n  }\n\n  push(values = {}) {\n    this.stateStack.push({});\n  }\n\n  pop() {\n    // assert(this.stateStack.length > 0);\n    // Use the saved values in the state stack to restore parameters\n    const oldValues = this.stateStack[this.stateStack.length - 1];\n    setGLParameters(this.gl, oldValues);\n    // Don't pop until we have reset parameters (to make sure other \"stack frames\" are not affected)\n    this.stateStack.pop();\n  }\n\n  /**\n   * Initialize WebGL state caching on a context\n   * can be called multiple times to enable/disable\n   *\n   * @note After calling this function, context state will be cached\n   * .push() and .pop() will be available for saving,\n   * temporarily modifying, and then restoring state.\n   */\n  trackState(gl: WebGL2RenderingContext, options?: {copyState?: boolean}): void {\n    this.cache = options.copyState ? getGLParameters(gl) : Object.assign({}, GL_PARAMETER_DEFAULTS);\n\n    if (this.initialized) {\n      throw new Error('WebGLStateTracker');\n    }\n    this.initialized = true;\n\n    // @ts-expect-error\n    this.gl.state = this;\n\n    installProgramSpy(gl);\n\n    // intercept all setter functions in the table\n    for (const key in GL_HOOKED_SETTERS) {\n      const setter = GL_HOOKED_SETTERS[key];\n      installSetterSpy(gl, key, setter);\n    }\n\n    // intercept all getter functions in the table\n    installGetterOverride(gl, 'getParameter');\n    installGetterOverride(gl, 'isEnabled');\n  }\n\n  /**\n  // interceptor for context set functions - update our cache and our stack\n  // values (Object) - the key values for this setter\n   * @param values\n   * @returns\n   */\n  _updateCache(values: {[key: number | string]: any}) {\n    let valueChanged = false;\n    let oldValue; // = undefined\n\n    const oldValues: {[key: number | string]: any} | null =\n      this.stateStack.length > 0 ? this.stateStack[this.stateStack.length - 1] : null;\n\n    for (const key in values) {\n      // assert(key !== undefined);\n      const value = values[key];\n      const cached = this.cache[key];\n      // Check that value hasn't already been shadowed\n      if (!deepArrayEqual(value, cached)) {\n        valueChanged = true;\n        oldValue = cached;\n\n        // First, save current value being shadowed\n        // If a state stack frame is active, save the current parameter values for pop\n        // but first check that value hasn't already been shadowed and saved\n        if (oldValues && !(key in oldValues)) {\n          oldValues[key] = cached;\n        }\n\n        // Save current value being shadowed\n        this.cache[key] = value;\n      }\n    }\n\n    return {valueChanged, oldValue};\n  }\n}\n\n// HELPER FUNCTIONS - INSTALL GET/SET INTERCEPTORS (SPYS) ON THE CONTEXT\n\n/**\n// Overrides a WebGL2RenderingContext state \"getter\" function\n// to return values directly from cache\n * @param gl\n * @param functionName\n */\nfunction installGetterOverride(gl: WebGL2RenderingContext, functionName: string) {\n  // Get the original function from the WebGL2RenderingContext\n  const originalGetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function get(pname) {\n    if (pname === undefined || NON_CACHE_PARAMETERS.has(pname)) {\n      // Invalid or blacklisted parameter, do not cache\n      return originalGetterFunc(pname);\n    }\n\n    const glState = WebGLStateTracker.get(gl);\n    if (!(pname in glState.cache)) {\n      // WebGL limits are not prepopulated in the cache, call the original getter when first queried.\n      glState.cache[pname] = originalGetterFunc(pname);\n    }\n\n    // Optionally call the original function to do a \"hard\" query from the WebGL2RenderingContext\n    return glState.enable\n      ? // Call the getter the params so that it can e.g. serve from a cache\n        glState.cache[pname]\n      : // Optionally call the original function to do a \"hard\" query from the WebGL2RenderingContext\n        originalGetterFunc(pname);\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(gl[functionName], 'name', {\n    value: `${functionName}-from-cache`,\n    configurable: false\n  });\n}\n\n/**\n// Overrides a WebGL2RenderingContext state \"setter\" function\n// to call a setter spy before the actual setter. Allows us to keep a cache\n// updated with a copy of the WebGL context state.\n * @param gl\n * @param functionName\n * @param setter\n * @returns\n */\nfunction installSetterSpy(gl: WebGL2RenderingContext, functionName: string, setter: Function) {\n  // Get the original function from the WebGL2RenderingContext\n  if (!gl[functionName]) {\n    // TODO - remove?\n    // This could happen if we try to intercept WebGL2 method on a WebGL1 context\n    return;\n  }\n\n  const originalSetterFunc = gl[functionName].bind(gl);\n\n  // Wrap it with a spy so that we can update our state cache when it gets called\n  gl[functionName] = function set(...params) {\n    // Update the value\n    // Call the setter with the state cache and the params so that it can store the parameters\n    const glState = WebGLStateTracker.get(gl);\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    const {valueChanged, oldValue} = setter(glState._updateCache, ...params);\n\n    // Call the original WebGL2RenderingContext func to make sure the context actually gets updated\n    if (valueChanged) {\n      originalSetterFunc(...params);\n    }\n\n    // Note: if the original function fails to set the value, our state cache will be bad\n    // No solution for this at the moment, but assuming that this is unlikely to be a real problem\n    // We could call the setter after the originalSetterFunc. Concern is that this would\n    // cause different behavior in debug mode, where originalSetterFunc can throw exceptions\n\n    return oldValue;\n  };\n\n  // Set the name of this anonymous function to help in debugging and profiling\n  Object.defineProperty(gl[functionName], 'name', {\n    value: `${functionName}-to-cache`,\n    configurable: false\n  });\n}\n\nfunction installProgramSpy(gl: WebGL2RenderingContext): void {\n  const originalUseProgram = gl.useProgram.bind(gl);\n\n  gl.useProgram = function useProgramLuma(handle) {\n    const glState = WebGLStateTracker.get(gl);\n    if (glState.program !== handle) {\n      originalUseProgram(handle);\n      glState.program = handle;\n    }\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2424, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2430, "column": 0}, "map": {"version":3,"file":"webgl-developer-tools.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/context/debug/webgl-developer-tools.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {log} from '@luma.gl/core';\n// Rename constant to prevent inlining. We need the full set of constants for generating debug strings.\nimport {GL as GLEnum} from '@luma.gl/constants';\nimport {isBrowser} from '@probe.gl/env';\nimport {loadScript} from '../../utils/load-script';\n\nconst WEBGL_DEBUG_CDN_URL = 'https://unpkg.com/webgl-debug@2.0.1/index.js';\n\ntype DebugContextProps = {\n  debugWebGL?: boolean;\n  traceWebGL?: boolean;\n};\n\ntype ContextData = {\n  realContext?: WebGL2RenderingContext;\n  debugContext?: WebGL2RenderingContext;\n};\n\n// Helper to get shared context data\nfunction getWebGLContextData(gl: any): ContextData {\n  gl.luma = gl.luma || {};\n  return gl.luma;\n}\n\ndeclare global {\n  // eslint-disable-next-line no-var\n  var WebGLDebugUtils: any;\n}\n\n/**\n * Loads Khronos WebGLDeveloperTools from CDN if not already installed\n * const WebGLDebugUtils = require('webgl-debug');\n * @see https://github.com/KhronosGroup/WebGLDeveloperTools\n * @see https://github.com/vorg/webgl-debug\n */\nexport async function loadWebGLDeveloperTools(): Promise<void> {\n  if (isBrowser() && !globalThis.WebGLDebugUtils) {\n    globalThis.global = globalThis.global || globalThis;\n    // @ts-expect-error Developer tools expects global to be set\n    globalThis.global.module = {};\n    await loadScript(WEBGL_DEBUG_CDN_URL);\n  }\n}\n\n// Returns (a potentially new) context with debug instrumentation turned off or on.\n// Note that this actually returns a new context\nexport function makeDebugContext(\n  gl: WebGL2RenderingContext,\n  props: DebugContextProps = {}\n): WebGL2RenderingContext {\n  return props.debugWebGL || props.traceWebGL ? getDebugContext(gl, props) : getRealContext(gl);\n}\n\n// Returns the real context from either of the real/debug contexts\nfunction getRealContext(gl: WebGL2RenderingContext): WebGL2RenderingContext {\n  const data = getWebGLContextData(gl);\n  // If the context has a realContext member, it is a debug context so return the realContext\n  return data.realContext ? data.realContext : gl;\n}\n\n// Returns the debug context from either of the real/debug contexts\nfunction getDebugContext(\n  gl: WebGL2RenderingContext,\n  props: DebugContextProps\n): WebGL2RenderingContext {\n  if (!globalThis.WebGLDebugUtils) {\n    log.warn('webgl-debug not loaded')();\n    return gl;\n  }\n\n  const data = getWebGLContextData(gl);\n\n  // If this already has a debug context, return it.\n  if (data.debugContext) {\n    return data.debugContext;\n  }\n\n  // Create a new debug context\n  globalThis.WebGLDebugUtils.init({...GLEnum, ...gl});\n  const glDebug = globalThis.WebGLDebugUtils.makeDebugContext(\n    gl,\n    onGLError.bind(null, props),\n    onValidateGLFunc.bind(null, props)\n  );\n\n  // Make sure we have all WebGL2 and extension constants (todo dynamic import to circumvent minification?)\n  for (const key in GLEnum) {\n    if (!(key in glDebug) && typeof GLEnum[key] === 'number') {\n      glDebug[key] = GLEnum[key];\n    }\n  }\n\n  // Ensure we have a clean prototype on the instrumented object\n  // Note: setPrototypeOf does come with perf warnings, but we already take a bigger perf reduction\n  // by synchronizing the WebGL errors after each WebGL call.\n  class WebGLDebugContext {}\n  Object.setPrototypeOf(glDebug, Object.getPrototypeOf(gl));\n  Object.setPrototypeOf(WebGLDebugContext, glDebug);\n  const debugContext = Object.create(WebGLDebugContext);\n  // Store the debug context\n  data.realContext = gl;\n  data.debugContext = debugContext;\n  debugContext.debug = true;\n\n  // Return it\n  return debugContext;\n}\n\n// DEBUG TRACING\n\nfunction getFunctionString(functionName: string, functionArgs): string {\n  // Cover bug in webgl-debug-tools\n  functionArgs = Array.from(functionArgs).map(arg => (arg === undefined ? 'undefined' : arg));\n  let args = globalThis.WebGLDebugUtils.glFunctionArgsToString(functionName, functionArgs);\n  args = `${args.slice(0, 100)}${args.length > 100 ? '...' : ''}`;\n  return `gl.${functionName}(${args})`;\n}\n\nfunction onGLError(props: DebugContextProps, err, functionName: string, args: any[]): void {\n  // Cover bug in webgl-debug-tools\n  args = Array.from(args).map(arg => (arg === undefined ? 'undefined' : arg));\n  const errorMessage = globalThis.WebGLDebugUtils.glEnumToString(err);\n  const functionArgs = globalThis.WebGLDebugUtils.glFunctionArgsToString(functionName, args);\n  const message = `${errorMessage} in gl.${functionName}(${functionArgs})`;\n  log.error(message)();\n  debugger; // eslint-disable-line\n  // throw new Error(message);\n}\n\n// Don't generate function string until it is needed\nfunction onValidateGLFunc(\n  props: DebugContextProps,\n  functionName: string,\n  functionArgs: any[]\n): void {\n  let functionString: string = '';\n  if (log.level >= 1) {\n    functionString = getFunctionString(functionName, functionArgs);\n    if (props.traceWebGL) {\n      log.log(1, functionString)();\n    }\n  }\n\n  for (const arg of functionArgs) {\n    if (arg === undefined) {\n      functionString = functionString || getFunctionString(functionName, functionArgs);\n      debugger; // eslint-disable-line\n      // throw new Error(`Undefined argument: ${functionString}`);\n    }\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2542, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2548, "column": 0}, "map": {"version":3,"file":"webgl-buffer.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-buffer.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {BufferProps} from '@luma.gl/core';\nimport {Buffer} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {WebGLDevice} from '../webgl-device';\n\n/** WebGL Buffer interface */\nexport class WEBGLBuffer extends Buffer {\n  readonly device: WebGLDevice;\n  readonly gl: WebGL2RenderingContext;\n  readonly handle: WebGLBuffer;\n\n  /** Target in OpenGL defines the type of buffer */\n  readonly glTarget: GL.ARRAY_BUFFER | GL.ELEMENT_ARRAY_BUFFER | GL.UNIFORM_BUFFER;\n  /** Usage is a hint on how frequently the buffer will be updates */\n  readonly glUsage: GL.STATIC_DRAW | GL.DYNAMIC_DRAW;\n  /** Index type is needed when issuing draw calls, so we pre-compute it */\n  readonly glIndexType: GL.UNSIGNED_SHORT | GL.UNSIGNED_INT = GL.UNSIGNED_SHORT;\n\n  /** Number of bytes allocated on the GPU for this buffer */\n  byteLength: number;\n  /** Number of bytes used */\n  bytesUsed: number;\n\n  constructor(device: WebGLDevice, props: BufferProps = {}) {\n    super(device, props);\n\n    this.device = device;\n    this.gl = this.device.gl;\n\n    const handle = typeof props === 'object' ? props.handle : undefined;\n    this.handle = handle || this.gl.createBuffer();\n    device.setSpectorMetadata(this.handle, {...this.props, data: typeof this.props.data});\n\n    // - In WebGL1, need to make sure we use GL.ELEMENT_ARRAY_BUFFER when initializing element buffers\n    //   otherwise buffer type will lock to generic (non-element) buffer\n    // - In WebGL2, we can use GL.COPY_READ_BUFFER which avoids locking the type here\n    this.glTarget = getWebGLTarget(this.props.usage);\n    this.glUsage = getWebGLUsage(this.props.usage);\n    this.glIndexType = this.props.indexType === 'uint32' ? GL.UNSIGNED_INT : GL.UNSIGNED_SHORT;\n\n    // Set data: (re)initializes the buffer\n    if (props.data) {\n      this._initWithData(props.data, props.byteOffset, props.byteLength);\n    } else {\n      this._initWithByteLength(props.byteLength || 0);\n    }\n  }\n\n  // PRIVATE METHODS\n\n  /** Allocate a new buffer and initialize to contents of typed array */\n  _initWithData(\n    data: ArrayBuffer | ArrayBufferView,\n    byteOffset: number = 0,\n    byteLength: number = data.byteLength + byteOffset\n  ): void {\n    // const glTarget = this.device.isWebGL2 ? GL.COPY_WRITE_BUFFER : this.glTarget;\n    const glTarget = this.glTarget;\n    this.gl.bindBuffer(glTarget, this.handle);\n    this.gl.bufferData(glTarget, byteLength, this.glUsage);\n    this.gl.bufferSubData(glTarget, byteOffset, data);\n    this.gl.bindBuffer(glTarget, null);\n\n    this.bytesUsed = byteLength;\n    this.byteLength = byteLength;\n\n    this._setDebugData(data, byteOffset, byteLength);\n    this.trackAllocatedMemory(byteLength);\n  }\n\n  // Allocate a GPU buffer of specified size.\n  _initWithByteLength(byteLength: number): this {\n    // assert(byteLength >= 0);\n\n    // Workaround needed for Safari (#291):\n    // gl.bufferData with size equal to 0 crashes. Instead create zero sized array.\n    let data = byteLength;\n    if (byteLength === 0) {\n      // @ts-expect-error\n      data = new Float32Array(0);\n    }\n\n    // const glTarget = this.device.isWebGL2 ? GL.COPY_WRITE_BUFFER : this.glTarget;\n    const glTarget = this.glTarget;\n\n    this.gl.bindBuffer(glTarget, this.handle);\n    this.gl.bufferData(glTarget, data, this.glUsage);\n    this.gl.bindBuffer(glTarget, null);\n\n    this.bytesUsed = byteLength;\n    this.byteLength = byteLength;\n\n    this._setDebugData(null, 0, byteLength);\n    this.trackAllocatedMemory(byteLength);\n\n    return this;\n  }\n\n  override destroy(): void {\n    if (!this.destroyed && this.handle) {\n      this.removeStats();\n      this.trackDeallocatedMemory();\n      this.gl.deleteBuffer(this.handle);\n      this.destroyed = true;\n      // @ts-expect-error\n      this.handle = null;\n    }\n  }\n\n  override write(data: ArrayBufferView, byteOffset: number = 0): void {\n    const srcOffset = 0;\n    const byteLength = undefined; // data.byteLength;\n\n    // Create the buffer - binding it here for the first time locks the type\n    // In WebGL2, use GL.COPY_WRITE_BUFFER to avoid locking the type\n    const glTarget = GL.COPY_WRITE_BUFFER;\n    this.gl.bindBuffer(glTarget, this.handle);\n    // WebGL2: subData supports additional srcOffset and length parameters\n    if (srcOffset !== 0 || byteLength !== undefined) {\n      this.gl.bufferSubData(glTarget, byteOffset, data, srcOffset, byteLength);\n    } else {\n      this.gl.bufferSubData(glTarget, byteOffset, data);\n    }\n    this.gl.bindBuffer(glTarget, null);\n\n    this._setDebugData(data, byteOffset, data.byteLength);\n  }\n\n  /** Asynchronously read data from the buffer */\n  override async readAsync(byteOffset = 0, byteLength?: number): Promise<Uint8Array> {\n    return this.readSyncWebGL(byteOffset, byteLength);\n  }\n\n  /** Synchronously read data from the buffer. WebGL only. */\n  override readSyncWebGL(byteOffset = 0, byteLength?: number): Uint8Array {\n    byteLength = byteLength ?? this.byteLength - byteOffset;\n    const data = new Uint8Array(byteLength);\n    const dstOffset = 0;\n\n    // Use GL.COPY_READ_BUFFER to avoid disturbing other targets and locking type\n    this.gl.bindBuffer(GL.COPY_READ_BUFFER, this.handle);\n    this.gl.getBufferSubData(GL.COPY_READ_BUFFER, byteOffset, data, dstOffset, byteLength);\n    this.gl.bindBuffer(GL.COPY_READ_BUFFER, null);\n\n    // Update local `data` if offsets are 0\n    this._setDebugData(data, byteOffset, byteLength);\n\n    return data;\n  }\n}\n\n/**\n * Returns a WebGL buffer target\n *\n * @param usage\n * static MAP_READ = 0x01;\n * static MAP_WRITE = 0x02;\n * static COPY_SRC = 0x0004;\n * static COPY_DST = 0x0008;\n * static INDEX = 0x0010;\n * static VERTEX = 0x0020;\n * static UNIFORM = 0x0040;\n * static STORAGE = 0x0080;\n * static INDIRECT = 0x0100;\n * static QUERY_RESOLVE = 0x0200;\n *\n * @returns WebGL buffer targe\n *\n * Buffer bind points in WebGL2\n * gl.COPY_READ_BUFFER: Buffer for copying from one buffer object to another.\n * gl.COPY_WRITE_BUFFER: Buffer for copying from one buffer object to another.\n * gl.TRANSFORM_FEEDBACK_BUFFER: Buffer for transform feedback operations.\n * gl.PIXEL_PACK_BUFFER: Buffer used for pixel transfer operations.\n * gl.PIXEL_UNPACK_BUFFER: Buffer used for pixel transfer operations.\n */\nfunction getWebGLTarget(\n  usage: number\n): GL.ARRAY_BUFFER | GL.ELEMENT_ARRAY_BUFFER | GL.UNIFORM_BUFFER {\n  if (usage & Buffer.INDEX) {\n    return GL.ELEMENT_ARRAY_BUFFER;\n  }\n  if (usage & Buffer.VERTEX) {\n    return GL.ARRAY_BUFFER;\n  }\n  if (usage & Buffer.UNIFORM) {\n    return GL.UNIFORM_BUFFER;\n  }\n\n  // Binding a buffer for the first time locks the type\n  // In WebGL2, we can use GL.COPY_WRITE_BUFFER to avoid locking the type\n  return GL.ARRAY_BUFFER;\n}\n\n/** @todo usage is not passed correctly */\nfunction getWebGLUsage(usage: number): GL.STATIC_DRAW | GL.DYNAMIC_DRAW {\n  if (usage & Buffer.INDEX) {\n    return GL.STATIC_DRAW;\n  }\n  if (usage & Buffer.VERTEX) {\n    return GL.STATIC_DRAW;\n  }\n  if (usage & Buffer.UNIFORM) {\n    return GL.DYNAMIC_DRAW;\n  }\n  return GL.STATIC_DRAW;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2714, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2720, "column": 0}, "map": {"version":3,"file":"with-parameters.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/context/state-tracker/with-parameters.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {GLParameters, setGLParameters} from '../parameters/unified-parameter-api';\nimport {WebGLStateTracker} from './webgl-state-tracker';\n\n/**\n * Execute a function with a set of temporary WebGL parameter overrides\n * - Saves current \"global\" WebGL context settings\n * - Sets the supplies WebGL context parameters,\n * - Executes supplied function\n * - Restores parameters\n * - Returns the return value of the supplied function\n */\nexport function withGLParameters(\n  gl: WebGL2RenderingContext,\n  parameters: GLParameters & {nocatch?: boolean},\n  func: any\n): any {\n  if (isObjectEmpty(parameters)) {\n    // Avoid setting state if no parameters provided. Just call and return\n    return func(gl);\n  }\n\n  const {nocatch = true} = parameters;\n\n  const webglState = WebGLStateTracker.get(gl);\n  webglState.push();\n  setGLParameters(gl, parameters);\n\n  // Setup is done, call the function\n  let value;\n\n  if (nocatch) {\n    // Avoid try catch to minimize stack size impact for safe execution paths\n    value = func(gl);\n    webglState.pop();\n  } else {\n    // Wrap in a try-catch to ensure that parameters are restored on exceptions\n    try {\n      value = func(gl);\n    } finally {\n      webglState.pop();\n    }\n  }\n\n  return value;\n}\n\n// Helpers\n\n// Returns true if given object is empty, false otherwise.\nfunction isObjectEmpty(object) {\n  // @ts-ignore - dummy key variable\n  for (const key in object) {\n    return false;\n  }\n  return true;\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAGpC,OAAO,EAAC,iBAAiB,EAAC,iCAA8B;AADxD,OAAO,EAAe,eAAe,EAAC,+CAA4C;;;AAW5E,SAAU,gBAAgB,CAC9B,EAA0B,EAC1B,UAA8C,EAC9C,IAAS;IAET,IAAI,aAAa,CAAC,UAAU,CAAC,EAAE,CAAC;QAC9B,sEAAsE;QACtE,OAAO,IAAI,CAAC,EAAE,CAAC,CAAC;IAClB,CAAC;IAED,MAAM,EAAC,OAAO,GAAG,IAAI,EAAC,GAAG,UAAU,CAAC;IAEpC,MAAM,UAAU,6MAAG,oBAAiB,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;IAC7C,UAAU,CAAC,IAAI,EAAE,CAAC;8MAClB,kBAAe,AAAf,EAAgB,EAAE,EAAE,UAAU,CAAC,CAAC;IAEhC,mCAAmC;IACnC,IAAI,KAAK,CAAC;IAEV,IAAI,OAAO,EAAE,CAAC;QACZ,yEAAyE;QACzE,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QACjB,UAAU,CAAC,GAAG,EAAE,CAAC;IACnB,CAAC,MAAM,CAAC;QACN,2EAA2E;QAC3E,IAAI,CAAC;YACH,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;QACnB,CAAC,QAAS,CAAC;YACT,UAAU,CAAC,GAAG,EAAE,CAAC;QACnB,CAAC;IACH,CAAC;IAED,OAAO,KAAK,CAAC;AACf,CAAC;AAED,UAAU;AAEV,0DAA0D;AAC1D,SAAS,aAAa,CAAC,MAAM;IAC3B,kCAAkC;IAClC,IAAK,MAAM,GAAG,IAAI,MAAM,CAAE,CAAC;QACzB,OAAO,KAAK,CAAC;IACf,CAAC;IACD,OAAO,IAAI,CAAC;AACd,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2764, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2770, "column": 0}, "map": {"version":3,"file":"typed-array-utils.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/helpers/typed-array-utils.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {TypedArray, TypedArrayConstructor} from '@math.gl/types';\nimport {GL, GLDataType, GLPixelType} from '@luma.gl/constants';\n\nconst ERR_TYPE_DEDUCTION = 'Failed to deduce GL constant from typed array';\n\n/**\n * Converts TYPED ARRAYS to corresponding GL constant\n * Used to auto deduce gl parameter types\n * @deprecated Use getDataTypeFromTypedArray\n * @param arrayOrType\n * @returns\n */\nexport function getGLTypeFromTypedArray(arrayOrType: TypedArray): GLDataType {\n  // If typed array, look up constructor\n  const type = ArrayBuffer.isView(arrayOrType) ? arrayOrType.constructor : arrayOrType;\n  switch (type) {\n    case Float32Array:\n      return GL.FLOAT;\n    case Uint16Array:\n      return GL.UNSIGNED_SHORT;\n    case Uint32Array:\n      return GL.UNSIGNED_INT;\n    case Uint8Array:\n      return GL.UNSIGNED_BYTE;\n    case Uint8ClampedArray:\n      return GL.UNSIGNED_BYTE;\n    case Int8Array:\n      return GL.BYTE;\n    case Int16Array:\n      return GL.SHORT;\n    case Int32Array:\n      return GL.INT;\n    default:\n      throw new Error(ERR_TYPE_DEDUCTION);\n  }\n}\n\n/**\n * Converts GL constant to corresponding TYPED ARRAY\n * Used to auto deduce gl parameter types\n * @deprecated Use getTypedArrayFromDataType\n * @param glType\n * @param param1\n * @returns\n */\n// eslint-disable-next-line complexity\nexport function getTypedArrayFromGLType(\n  glType: GLDataType | GLPixelType,\n  options?: {\n    clamped?: boolean;\n  }\n): TypedArrayConstructor {\n  const {clamped = true} = options || {};\n  // Sorted in some order of likelihood to reduce amount of comparisons\n  switch (glType) {\n    case GL.FLOAT:\n      return Float32Array;\n    case GL.UNSIGNED_SHORT:\n    case GL.UNSIGNED_SHORT_5_6_5:\n    case GL.UNSIGNED_SHORT_4_4_4_4:\n    case GL.UNSIGNED_SHORT_5_5_5_1:\n      return Uint16Array;\n    case GL.UNSIGNED_INT:\n      return Uint32Array;\n    case GL.UNSIGNED_BYTE:\n      return clamped ? Uint8ClampedArray : Uint8Array;\n    case GL.BYTE:\n      return Int8Array;\n    case GL.SHORT:\n      return Int16Array;\n    case GL.INT:\n      return Int32Array;\n    default:\n      throw new Error('Failed to deduce typed array type from GL constant');\n  }\n}\n\n/**\n * Flip rows (can be used on arrays returned from `Framebuffer.readPixels`)\n * https: *stackoverflow.com/questions/41969562/\n * how-can-i-flip-the-result-of-webglrenderingcontext-readpixels\n * @param param0\n */\nexport function flipRows(options: {\n  data: TypedArray;\n  width: number;\n  height: number;\n  bytesPerPixel?: number;\n  temp?: Uint8Array;\n}): void {\n  const {data, width, height, bytesPerPixel = 4, temp} = options;\n  const bytesPerRow = width * bytesPerPixel;\n\n  // make a temp buffer to hold one row\n  const tempBuffer = temp || new Uint8Array(bytesPerRow);\n  for (let y = 0; y < height / 2; ++y) {\n    const topOffset = y * bytesPerRow;\n    const bottomOffset = (height - y - 1) * bytesPerRow;\n    // make copy of a row on the top half\n    tempBuffer.set(data.subarray(topOffset, topOffset + bytesPerRow));\n    // copy a row from the bottom half to the top\n    data.copyWithin(topOffset, bottomOffset, bottomOffset + bytesPerRow);\n    // copy the copy of the top half row to the bottom half\n    data.set(tempBuffer, bottomOffset);\n  }\n}\n\nexport function scalePixels(options: {data: TypedArray; width: number; height: number}): {\n  data: Uint8Array;\n  width: number;\n  height: number;\n} {\n  const {data, width, height} = options;\n  const newWidth = Math.round(width / 2);\n  const newHeight = Math.round(height / 2);\n  const newData = new Uint8Array(newWidth * newHeight * 4);\n  for (let y = 0; y < newHeight; y++) {\n    for (let x = 0; x < newWidth; x++) {\n      for (let c = 0; c < 4; c++) {\n        newData[(y * newWidth + x) * 4 + c] = data[(y * 2 * width + x * 2) * 4 + c];\n      }\n    }\n  }\n  return {data: newData, width: newWidth, height: newHeight};\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2864, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2870, "column": 0}, "map": {"version":3,"file":"format-utils.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/helpers/format-utils.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {GL} from '@luma.gl/constants';\n\n// Returns number of components in a specific readPixels WebGL format\nexport function glFormatToComponents(format) {\n  switch (format) {\n    case GL.ALPHA:\n    case GL.R32F:\n    case GL.RED:\n    case GL.RED_INTEGER:\n      return 1;\n    case GL.RG32I:\n    case GL.RG32UI:\n    case GL.RG32F:\n    case GL.RG_INTEGER:\n    case GL.RG:\n      return 2;\n    case GL.RGB:\n    case GL.RGB_INTEGER:\n    case GL.RGB32F:\n      return 3;\n    case GL.RGBA:\n    case GL.RGBA_INTEGER:\n    case GL.RGBA32F:\n      return 4;\n    // TODO: Add support for additional WebGL2 formats\n    default:\n      return 0;\n  }\n}\n\n// Return byte count for given readPixels WebGL type\nexport function glTypeToBytes(type) {\n  switch (type) {\n    case GL.UNSIGNED_BYTE:\n      return 1;\n    case GL.UNSIGNED_SHORT_5_6_5:\n    case GL.UNSIGNED_SHORT_4_4_4_4:\n    case GL.UNSIGNED_SHORT_5_5_5_1:\n      return 2;\n    case GL.FLOAT:\n      return 4;\n    // TODO: Add support for additional WebGL2 types\n    default:\n      return 0;\n  }\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;;;AAK9B,SAAU,oBAAoB,CAAC,MAAM;IACzC,OAAQ,MAAM,EAAE,CAAC;QACf,KAAA,KAAc;QACd,KAAA,MAAa;QACb,KAAA,KAAY;QACZ,KAAA;YACE,OAAO,CAAC,CAAC;QACX,KAAA,MAAc;QACd,KAAA,MAAe;QACf,KAAA,MAAc;QACd,KAAA,MAAmB;QACnB,KAAA;YACE,OAAO,CAAC,CAAC;QACX,KAAA,KAAY;QACZ,KAAA,MAAoB;QACpB,KAAA;YACE,OAAO,CAAC,CAAC;QACX,KAAA,KAAa;QACb,KAAA,MAAqB;QACrB,KAAA;YACE,OAAO,CAAC,CAAC;QACX,kDAAkD;QAClD;YACE,OAAO,CAAC,CAAC;IACb,CAAC;AACH,CAAC;AAGK,SAAU,aAAa,CAAC,IAAI;IAChC,OAAQ,IAAI,EAAE,CAAC;QACb,KAAA;YACE,OAAO,CAAC,CAAC;QACX,KAAA,MAA6B;QAC7B,KAAA,MAA+B;QAC/B,KAAA;YACE,OAAO,CAAC,CAAC;QACX,KAAA;YACE,OAAO,CAAC,CAAC;QACX,gDAAgD;QAChD;YACE,OAAO,CAAC,CAAC;IACb,CAAC;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 2919, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2925, "column": 0}, "map": {"version":3,"file":"webgl-texture-utils.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/helpers/webgl-texture-utils.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n//\n// WebGL... the texture API from hell... hopefully made simpler\n//\n\nimport {TypedArray} from '@math.gl/types';\nimport type {ExternalImage} from '@luma.gl/core';\nimport {Buffer, Texture, Framebuffer, FramebufferProps} from '@luma.gl/core';\nimport {\n  GL,\n  GLTextureTarget,\n  GLTextureCubeMapTarget,\n  GLTexelDataFormat,\n  GLPixelType,\n  GLDataType\n} from '@luma.gl/constants';\n\nimport {WEBGLFramebuffer} from '../resources/webgl-framebuffer';\nimport {getGLTypeFromTypedArray, getTypedArrayFromGLType} from './typed-array-utils';\nimport {glFormatToComponents, glTypeToBytes} from './format-utils';\nimport {WEBGLBuffer} from '../resources/webgl-buffer';\nimport {WEBGLTexture} from '../resources/webgl-texture';\nimport {withGLParameters} from '../../context/state-tracker/with-parameters';\n\n/** A \"border\" parameter is required in many WebGL texture APIs, but must always be 0... */\nconst BORDER = 0;\n\n/**\n * Options for setting data into a texture\n */\nexport type WebGLSetTextureOptions = {\n  dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d';\n  height: number;\n  width: number;\n  depth: number;\n  mipLevel?: number;\n  glTarget: GLTextureTarget;\n  glInternalFormat: GL;\n  glFormat: GLTexelDataFormat;\n  glType: GLPixelType;\n  compressed?: boolean;\n  byteOffset?: number;\n  byteLength?: number;\n};\n\n/**\n * Options for copying an image or data into a texture\n *\n * @param {GLenum} format - internal format of image data.\n * @param {GLenum} type\n *  - format of array (autodetect from type) or\n *  - (WEBGL2) format of buffer or ArrayBufferView\n * @param {GLenum} dataFormat - format of image data.\n * @param {Number} offset - (WEBGL2) offset from start of buffer\n * @parameters - temporary settings to be applied, can be used to supply pixel store settings.\n */\nexport type WebGLCopyTextureOptions = {\n  dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d';\n  /** mip level to be updated */\n  mipLevel?: number;\n  /** width of the sub image to be updated */\n  width: number;\n  /** height of the sub image to be updated */\n  height: number;\n  /** depth of texture to be updated */\n  depth?: number;\n  /** xOffset from where texture to be updated */\n  x?: number;\n  /** yOffset from where texture to be updated */\n  y?: number;\n  /** yOffset from where texture to be updated */\n  z?: number;\n\n  glTarget: GLTextureTarget;\n  glInternalFormat: GL;\n  glFormat: GL;\n  glType: GL;\n  compressed?: boolean;\n  byteOffset?: number;\n  byteLength?: number;\n};\n\n/**\n * Initializes a texture memory space\n * Clear all the textures and mip levels of a two-dimensional or array texture at the same time.\n * On some implementations faster than repeatedly setting levels\n *\n * @note From WebGL 2 spec section 3.7.6:\n * @see https://registry.khronos.org/webgl/specs/latest/2.0/\n * - The image contents are set as if a buffer of sufficient size initialized to 0 would be passed to each level's texImage2D/3D\n * - texStorage2D should be considered a preferred alternative to texImage2D. It may have lower memory costs than texImage2D in some implementations.\n * - Once texStorage*D has been called, the texture is immutable and can only be updated with texSubImage*(), not texImage()\n */\nexport function initializeTextureStorage(\n  gl: WebGL2RenderingContext,\n  levels: number,\n  options: WebGLSetTextureOptions\n): void {\n  const {dimension, width, height, depth = 0} = options;\n  const {glInternalFormat} = options;\n  const glTarget = options.glTarget; // getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      gl.texStorage3D(glTarget, levels, glInternalFormat, width, height, depth);\n      break;\n\n    default:\n      gl.texStorage2D(glTarget, levels, glInternalFormat, width, height);\n  }\n}\n\n/**\n * Copy a region of compressed data from a GPU memory buffer into this texture.\n */\nexport function copyExternalImageToMipLevel(\n  gl: WebGL2RenderingContext,\n  handle: WebGLTexture,\n  image: ExternalImage,\n  options: WebGLCopyTextureOptions & {flipY?: boolean}\n): void {\n  const {width, height} = options;\n  const {dimension, depth = 0, mipLevel = 0} = options;\n  const {x = 0, y = 0, z = 0} = options;\n  const {glFormat, glType} = options;\n\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  const glParameters = options.flipY ? {[GL.UNPACK_FLIP_Y_WEBGL]: true} : {};\n  withGLParameters(gl, glParameters, () => {\n    switch (dimension) {\n      case '2d-array':\n      case '3d':\n        gl.bindTexture(glTarget, handle);\n        // prettier-ignore\n        gl.texSubImage3D(glTarget, mipLevel, x, y, z, width, height, depth, glFormat, glType, image);\n        gl.bindTexture(glTarget, null);\n        break;\n\n      case '2d':\n      case 'cube':\n        gl.bindTexture(glTarget, handle);\n        // prettier-ignore\n        gl.texSubImage2D(glTarget, mipLevel, x, y, width, height, glFormat, glType, image);\n        gl.bindTexture(glTarget, null);\n        break;\n\n      default:\n        throw new Error(dimension);\n    }\n  });\n}\n\n/**\n * Copy a region of data from a CPU memory buffer into this texture.\n */\nexport function copyCPUDataToMipLevel(\n  gl: WebGL2RenderingContext,\n  typedArray: TypedArray,\n  options: WebGLCopyTextureOptions\n): void {\n  const {dimension, width, height, depth = 0, mipLevel = 0, byteOffset = 0} = options;\n  const {x = 0, y = 0, z = 0} = options;\n  const {glFormat, glType, compressed} = options;\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  // gl.bindTexture(glTarget, null);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexSubImage3D(glTarget, mipLevel, x, y, z, width, height, depth, glFormat, typedArray, byteOffset); // , byteLength\n      } else {\n        // prettier-ignore\n        gl.texSubImage3D(glTarget, mipLevel, x, y, z, width, height, depth, glFormat, glType, typedArray, byteOffset); // , byteLength\n      }\n      break;\n\n    case '2d':\n    case 'cube':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexSubImage2D(glTarget, mipLevel, x, y, width, height, glFormat, typedArray, byteOffset); // , byteLength\n      } else {\n        // prettier-ignore\n        gl.texSubImage2D(glTarget, mipLevel, x, y, width, height, glFormat, glType, typedArray, byteOffset); // , byteLength\n      }\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n}\n\n/**\n * Copy a region of compressed data from a GPU memory buffer into this texture.\n */\nexport function copyGPUBufferToMipLevel(\n  gl: WebGL2RenderingContext,\n  webglBuffer: WebGLBuffer,\n  byteLength: number,\n  options: WebGLCopyTextureOptions\n): void {\n  const {dimension, width, height, depth = 0, mipLevel = 0, byteOffset = 0} = options;\n  const {x = 0, y = 0, z = 0} = options;\n  const {glFormat, glType, compressed} = options;\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  gl.bindBuffer(GL.PIXEL_UNPACK_BUFFER, webglBuffer);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      // 3 dimensional textures requires 3D texture functions\n      if (compressed) {\n        // TODO enable extension?\n        // prettier-ignore\n        gl.compressedTexSubImage3D(glTarget, mipLevel, x, y, z, width, height, depth, glFormat, byteLength, byteOffset);\n      } else {\n        // prettier-ignore\n        gl.texSubImage3D(glTarget, mipLevel, x, y, z, width, height, depth, glFormat, glType, byteOffset);\n      }\n      break;\n\n    case '2d':\n    case 'cube':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexSubImage2D(glTarget, mipLevel, x, y, width, height, glFormat, byteLength, byteOffset);\n      } else {\n        // prettier-ignore\n        gl.texSubImage2D(glTarget, mipLevel, x, y, width, height, BORDER, glFormat, byteOffset);\n      }\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n}\n\n// INTERNAL HELPERS\n\n/** Convert a WebGPU style texture constant to a WebGL style texture constant */\nexport function getWebGLTextureTarget(\n  dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d'\n): GLTextureTarget {\n  // prettier-ignore\n  switch (dimension) {\n    case '1d': break; // not supported in any WebGL version\n    case '2d': return GL.TEXTURE_2D; // supported in WebGL1\n    case '3d': return GL.TEXTURE_3D; // supported in WebGL2\n    case 'cube': return GL.TEXTURE_CUBE_MAP; // supported in WebGL1\n    case '2d-array': return GL.TEXTURE_2D_ARRAY; // supported in WebGL2\n    case 'cube-array': break; // not supported in any WebGL version\n  }\n  throw new Error(dimension);\n}\n\n/**\n * In WebGL, cube maps specify faces by overriding target instead of using the depth parameter.\n * @note We still bind the texture using GL.TEXTURE_CUBE_MAP, but we need to use the face-specific target when setting mip levels.\n * @returns glTarget unchanged, if dimension !== 'cube'.\n */\nexport function getWebGLCubeFaceTarget(\n  glTarget: GLTextureTarget,\n  dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d',\n  level: number\n): GLTextureTarget | GLTextureCubeMapTarget {\n  return dimension === 'cube' ? GL.TEXTURE_CUBE_MAP_POSITIVE_X + level : glTarget;\n}\n\n// texImage methods\n\n/**\n * Clear a texture mip level.\n * Wrapper for the messy WebGL texture API\n *\nexport function clearMipLevel(gl: WebGL2RenderingContext, options: WebGLSetTextureOptions): void {\n  const {dimension, width, height, depth = 0, mipLevel = 0} = options;\n  const {glInternalFormat, glFormat, glType, compressed} = options;\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexImage3D(glTarget, mipLevel, glInternalFormat, width, height, depth, BORDER, null);\n      } else {\n        // prettier-ignore\n        gl.texImage3D( glTarget, mipLevel, glInternalFormat, width, height, depth, BORDER, glFormat, glType, null);\n      }\n      break;\n\n    case '2d':\n    case 'cube':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexImage2D(glTarget, mipLevel, glInternalFormat, width, height, BORDER, null);\n      } else {\n        // prettier-ignore\n        gl.texImage2D(glTarget, mipLevel, glInternalFormat, width, height, BORDER, glFormat, glType, null);\n      }\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n}\n  */\n\n/**\n * Set a texture mip level to the contents of an external image.\n * Wrapper for the messy WebGL texture API\n * @note Corresponds to WebGPU device.queue.copyExternalImageToTexture()\n *\nexport function setMipLevelFromExternalImage(\n  gl: WebGL2RenderingContext,\n  image: ExternalImage,\n  options: WebGLSetTextureOptions\n): void {\n  const {dimension, width, height, depth = 0, level = 0} = options;\n  const {glInternalFormat, glType} = options;\n\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  // TODO - we can't change texture width (due to WebGPU limitations) -\n  // and the width/heigh of an external image is implicit, so why do we need to extract it?\n  // So what width height do we supply? The image size or the texture size?\n  // const {width, height} = Texture.getExternalImageSize(image);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      // prettier-ignore\n      gl.texImage3D(glTarget, level, glInternalFormat, width, height, depth, BORDER, glInternalFormat, glType, image);\n      break;\n\n    case '2d':\n    case 'cube':\n      // prettier-ignore\n      gl.texImage2D(glTarget, level, glInternalFormat, width, height, BORDER, glInternalFormat, glType, image);\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n}\n\n/**\n * Set a texture mip level from CPU memory\n * Wrapper for the messy WebGL texture API\n * @note Not available (directly) in WebGPU\n *\nexport function setMipLevelFromTypedArray(\n  gl: WebGL2RenderingContext,\n  data: TypedArray,\n  parameters: {},\n  options: {\n    dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d';\n    height: number;\n    width: number;\n    depth?: number;\n    level?: number;\n    offset?: number;\n    glTarget: GLTextureTarget;\n    glInternalFormat: GL;\n    glFormat: GL;\n    glType: GL;\n    compressed?: boolean;\n  }\n): void {\n  const {dimension, width, height, depth = 0, level = 0, offset = 0} = options;\n  const {glInternalFormat, glFormat, glType, compressed} = options;\n\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  withGLParameters(gl, parameters, () => {\n    switch (dimension) {\n      case '2d-array':\n      case '3d':\n        if (compressed) {\n          // prettier-ignore\n          gl.compressedTexImage3D(glTarget, level, glInternalFormat, width, height, depth, BORDER, data);\n        } else {\n          // prettier-ignore\n          gl.texImage3D( glTarget, level, glInternalFormat, width, height, depth, BORDER, glFormat, glType, data);\n        }\n        break;\n\n      case '2d':\n        if (compressed) {\n          // prettier-ignore\n          gl.compressedTexImage2D(glTarget, level, glInternalFormat, width, height, BORDER, data);\n        } else {\n          // prettier-ignore\n          gl.texImage2D( glTarget, level, glInternalFormat, width, height, BORDER, glFormat, glType, data, offset);\n        }\n        break;\n\n      default:\n        throw new Error(dimension);\n    }\n  });\n}\n\n/**\n   * Set a texture level from CPU memory\n   * @note Not available (directly) in WebGPU\n  _setMipLevelFromTypedArray(\n    depth: number,\n    level: number,\n    data: TextureLevelData,\n    offset = 0,\n    parameters\n  ): void {\n    withGLParameters(this.gl, parameters, () => {\n      switch (this.props.dimension) {\n        case '2d-array':\n        case '3d':\n          if (this.compressed) {\n            // prettier-ignore\n            this.device.gl.compressedTexImage3D(this.glTarget, level, this.glInternalFormat, data.width, data.height, depth, BORDER, data.data);\n          } else {\n            // prettier-ignore\n            this.gl.texImage3D( this.glTarget, level, this.glInternalFormat, this.width, this.height, depth, BORDER, this.glFormat, this.glType, data.data);\n          }\n          break;\n\n        case '2d':\n          if (this.compressed) {\n            // prettier-ignore\n            this.device.gl.compressedTexImage2D(this.glTarget, level, this.glInternalFormat, data.width, data.height, BORDER, data.data);\n          } else {\n            // prettier-ignore\n            this.device.gl.texImage2D( this.glTarget, level, this.glInternalFormat, this.width, this.height, BORDER, this.glFormat, this.glType, data.data, offset);\n          }\n          break;\n\n        default:\n          throw new Error(this.props.dimension);\n      }\n    });\n  }\n\n * Set a texture level from a GPU buffer\n *\nexport function setMipLevelFromGPUBuffer(\n  gl: WebGL2RenderingContext,\n  buffer: Buffer,\n  options: WebGLSetTextureOptions\n): void {\n  const {dimension, width, height, depth = 0, level = 0, byteOffset = 0} = options;\n  const {glInternalFormat, glFormat, glType, compressed} = options;\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  const webglBuffer = buffer as WEBGLBuffer;\n  const imageSize = buffer.byteLength;\n\n  // In WebGL the source buffer is not a parameter. Instead it needs to be bound to a special bind point\n  gl.bindBuffer(GL.PIXEL_UNPACK_BUFFER, webglBuffer.handle);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexImage3D(glTarget, level, glInternalFormat, width, height, depth, BORDER, imageSize, byteOffset);\n      } else {\n        // prettier-ignore\n        gl.texImage3D(glTarget, level, glInternalFormat, width, height, depth, BORDER, glFormat, glType, byteOffset);\n      }\n      break;\n\n    case '2d':\n      if (compressed) {\n        // prettier-ignore\n        gl.compressedTexImage2D(glTarget, level, glInternalFormat, width, height, BORDER, imageSize, byteOffset);\n      } else {\n        // prettier-ignore\n        gl.texImage2D(glTarget, level, glInternalFormat, width, height, BORDER, glFormat, glType, byteOffset);\n      }\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n\n  gl.bindBuffer(GL.PIXEL_UNPACK_BUFFER, null);\n}\n*/\nexport type ReadPixelsToArrayOptions = {\n  sourceX?: number;\n  sourceY?: number;\n  sourceFormat?: number;\n  sourceAttachment?: number;\n  target?: Uint8Array | Uint16Array | Float32Array;\n  // following parameters are auto deduced if not provided\n  sourceWidth?: number;\n  sourceHeight?: number;\n  sourceDepth?: number;\n  sourceType?: number;\n};\n\nexport type ReadPixelsToBufferOptions = {\n  sourceX?: number;\n  sourceY?: number;\n  sourceFormat?: number;\n  target?: Buffer; // A new Buffer object is created when not provided.\n  targetByteOffset?: number; // byte offset in buffer object\n  // following parameters are auto deduced if not provided\n  sourceWidth?: number;\n  sourceHeight?: number;\n  sourceType?: number;\n};\n\n/**\n * Copies data from a type  or a Texture object into ArrayBuffer object.\n * App can provide targetPixelArray or have it auto allocated by this method\n *  newly allocated by this method unless provided by app.\n * @deprecated Use CommandEncoder.copyTextureToBuffer and Buffer.read\n * @note Slow requires roundtrip to GPU\n *\n * @param source\n * @param options\n * @returns pixel array,\n */\nexport function readPixelsToArray(\n  source: Framebuffer | Texture,\n  options?: ReadPixelsToArrayOptions\n): Uint8Array | Uint16Array | Float32Array {\n  const {\n    sourceX = 0,\n    sourceY = 0,\n    sourceAttachment = 0 // TODO - support gl.readBuffer\n  } = options || {};\n  let {\n    target = null,\n    // following parameters are auto deduced if not provided\n    sourceWidth,\n    sourceHeight,\n    sourceDepth,\n    sourceFormat,\n    sourceType\n  } = options || {};\n\n  const {framebuffer, deleteFramebuffer} = getFramebuffer(source);\n  // assert(framebuffer);\n  const {gl, handle} = framebuffer;\n\n  sourceWidth ||= framebuffer.width;\n  sourceHeight ||= framebuffer.height;\n\n  const texture = framebuffer.colorAttachments[sourceAttachment]?.texture;\n  if (!texture) {\n    throw new Error(`Invalid framebuffer attachment ${sourceAttachment}`);\n  }\n  sourceDepth = texture?.depth || 1;\n\n  sourceFormat ||= texture?.glFormat || GL.RGBA;\n  // Deduce the type from color attachment if not provided.\n  sourceType ||= texture?.glType || GL.UNSIGNED_BYTE;\n\n  // Deduce type and allocated pixelArray if needed\n  target = getPixelArray(target, sourceType, sourceFormat, sourceWidth, sourceHeight, sourceDepth);\n\n  // Pixel array available, if necessary, deduce type from it.\n  sourceType = sourceType || getGLTypeFromTypedArray(target);\n\n  // Note: luma.gl overrides bindFramebuffer so that we can reliably restore the previous framebuffer (this is the only function for which we do that)\n  const prevHandle = gl.bindFramebuffer(\n    GL.FRAMEBUFFER,\n    handle\n  ) as unknown as WebGLFramebuffer | null;\n\n  // Select the color attachment to read from\n  gl.readBuffer(gl.COLOR_ATTACHMENT0 + sourceAttachment);\n\n  // There is a lot of hedging in the WebGL2 spec about what formats are guaranteed to be readable\n  // (It should always be possible to read RGBA/UNSIGNED_BYTE, but most other combinations are not guaranteed)\n  // Querying is possible but expensive:\n  // const {device} = framebuffer;\n  // texture.glReadFormat ||= gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_FORMAT);\n  // texture.glReadType ||= gl.getParameter(gl.IMPLEMENTATION_COLOR_READ_TYPE);\n  // console.log('params', device.getGLKey(texture.glReadFormat), device.getGLKey(texture.glReadType));\n\n  gl.readPixels(sourceX, sourceY, sourceWidth, sourceHeight, sourceFormat, sourceType, target);\n  gl.readBuffer(gl.COLOR_ATTACHMENT0);\n  gl.bindFramebuffer(GL.FRAMEBUFFER, prevHandle || null);\n\n  if (deleteFramebuffer) {\n    framebuffer.destroy();\n  }\n\n  return target;\n}\n\n/**\n * Copies data from a Framebuffer or a Texture object into a Buffer object.\n * NOTE: doesn't wait for copy to be complete, it programs GPU to perform a DMA transffer.\n * @deprecated Use CommandEncoder\n * @param source\n * @param options\n */\nexport function readPixelsToBuffer(\n  source: Framebuffer | Texture,\n  options?: ReadPixelsToBufferOptions\n): WEBGLBuffer {\n  const {\n    target,\n    sourceX = 0,\n    sourceY = 0,\n    sourceFormat = GL.RGBA,\n    targetByteOffset = 0\n  } = options || {};\n  // following parameters are auto deduced if not provided\n  let {sourceWidth, sourceHeight, sourceType} = options || {};\n  const {framebuffer, deleteFramebuffer} = getFramebuffer(source);\n  // assert(framebuffer);\n  sourceWidth = sourceWidth || framebuffer.width;\n  sourceHeight = sourceHeight || framebuffer.height;\n\n  // Asynchronous read (PIXEL_PACK_BUFFER) is WebGL2 only feature\n  const webglFramebuffer = framebuffer;\n\n  // deduce type if not available.\n  sourceType = sourceType || GL.UNSIGNED_BYTE;\n\n  let webglBufferTarget = target as unknown as WEBGLBuffer | undefined;\n  if (!webglBufferTarget) {\n    // Create new buffer with enough size\n    const components = glFormatToComponents(sourceFormat);\n    const byteCount = glTypeToBytes(sourceType);\n    const byteLength = targetByteOffset + sourceWidth * sourceHeight * components * byteCount;\n    webglBufferTarget = webglFramebuffer.device.createBuffer({byteLength});\n  }\n\n  // TODO(donmccurdy): Do we have tests to confirm this is working?\n  const commandEncoder = source.device.createCommandEncoder();\n  commandEncoder.copyTextureToBuffer({\n    sourceTexture: source as Texture,\n    width: sourceWidth,\n    height: sourceHeight,\n    origin: [sourceX, sourceY],\n    destinationBuffer: webglBufferTarget,\n    byteOffset: targetByteOffset\n  });\n  commandEncoder.destroy();\n\n  if (deleteFramebuffer) {\n    framebuffer.destroy();\n  }\n\n  return webglBufferTarget;\n}\n\n/**\n * Copy a rectangle from a Framebuffer or Texture object into a texture (at an offset)\n * @deprecated Use CommandEncoder\n */\n// eslint-disable-next-line complexity, max-statements\nexport function copyToTexture(\n  sourceTexture: Framebuffer | Texture,\n  destinationTexture: Texture | GL,\n  options?: {\n    sourceX?: number;\n    sourceY?: number;\n\n    targetX?: number;\n    targetY?: number;\n    targetZ?: number;\n    targetMipmaplevel?: number;\n    targetInternalFormat?: number;\n\n    width?: number; // defaults to target width\n    height?: number; // defaults to target height\n  }\n): Texture {\n  const {\n    sourceX = 0,\n    sourceY = 0,\n    // attachment = GL.COLOR_ATTACHMENT0, // TODO - support gl.readBuffer\n    targetMipmaplevel = 0,\n    targetInternalFormat = GL.RGBA\n  } = options || {};\n  let {\n    targetX,\n    targetY,\n    targetZ,\n    width, // defaults to target width\n    height // defaults to target height\n  } = options || {};\n\n  const {framebuffer, deleteFramebuffer} = getFramebuffer(sourceTexture);\n  // assert(framebuffer);\n  const webglFramebuffer = framebuffer;\n  const {device, handle} = webglFramebuffer;\n  const isSubCopy =\n    typeof targetX !== 'undefined' ||\n    typeof targetY !== 'undefined' ||\n    typeof targetZ !== 'undefined';\n  targetX = targetX || 0;\n  targetY = targetY || 0;\n  targetZ = targetZ || 0;\n  const prevHandle = device.gl.bindFramebuffer(GL.FRAMEBUFFER, handle);\n  // TODO - support gl.readBuffer (WebGL2 only)\n  // const prevBuffer = gl.readBuffer(attachment);\n  // assert(target);\n  let texture: WEBGLTexture | null = null;\n  let textureTarget: GL;\n  if (destinationTexture instanceof WEBGLTexture) {\n    texture = destinationTexture;\n    width = Number.isFinite(width) ? width : texture.width;\n    height = Number.isFinite(height) ? height : texture.height;\n    texture?.bind(0);\n    // @ts-ignore\n    textureTarget = texture.target;\n  } else {\n    // @ts-ignore\n    textureTarget = target;\n  }\n\n  if (!isSubCopy) {\n    device.gl.copyTexImage2D(\n      textureTarget,\n      targetMipmaplevel,\n      targetInternalFormat,\n      sourceX,\n      sourceY,\n      width,\n      height,\n      0 /* border must be 0 */\n    );\n  } else {\n    switch (textureTarget) {\n      case GL.TEXTURE_2D:\n      case GL.TEXTURE_CUBE_MAP:\n        device.gl.copyTexSubImage2D(\n          textureTarget,\n          targetMipmaplevel,\n          targetX,\n          targetY,\n          sourceX,\n          sourceY,\n          width,\n          height\n        );\n        break;\n      case GL.TEXTURE_2D_ARRAY:\n      case GL.TEXTURE_3D:\n        device.gl.copyTexSubImage3D(\n          textureTarget,\n          targetMipmaplevel,\n          targetX,\n          targetY,\n          targetZ,\n          sourceX,\n          sourceY,\n          width,\n          height\n        );\n        break;\n      default:\n    }\n  }\n  if (texture) {\n    texture.unbind();\n  }\n  // @ts-expect-error\n  device.gl.bindFramebuffer(GL.FRAMEBUFFER, prevHandle || null);\n  if (deleteFramebuffer) {\n    framebuffer.destroy();\n  }\n  return texture;\n}\n\nfunction getFramebuffer(source: Texture | Framebuffer): {\n  framebuffer: WEBGLFramebuffer;\n  deleteFramebuffer: boolean;\n} {\n  if (!(source instanceof Framebuffer)) {\n    return {framebuffer: toFramebuffer(source), deleteFramebuffer: true};\n  }\n  return {framebuffer: source as WEBGLFramebuffer, deleteFramebuffer: false};\n}\n\n/**\n * Wraps a given texture into a framebuffer object, that can be further used\n * to read data from the texture object.\n */\nexport function toFramebuffer(texture: Texture, props?: FramebufferProps): WEBGLFramebuffer {\n  const {device, width, height, id} = texture;\n  const framebuffer = device.createFramebuffer({\n    ...props,\n    id: `framebuffer-for-${id}`,\n    width,\n    height,\n    colorAttachments: [texture]\n  });\n  return framebuffer as WEBGLFramebuffer;\n}\n\n// eslint-disable-next-line max-params\nfunction getPixelArray(\n  pixelArray,\n  glType: GLDataType | GLPixelType,\n  glFormat: GL,\n  width: number,\n  height: number,\n  depth?: number\n): Uint8Array | Uint16Array | Float32Array {\n  if (pixelArray) {\n    return pixelArray;\n  }\n  // const formatInfo = decodeTextureFormat(format);\n  // Allocate pixel array if not already available, using supplied type\n  glType ||= GL.UNSIGNED_BYTE;\n  const ArrayType = getTypedArrayFromGLType(glType, {clamped: false});\n  const components = glFormatToComponents(glFormat);\n  // TODO - check for composite type (components = 1).\n  return new ArrayType(width * height * components) as Uint8Array | Uint16Array | Float32Array;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3257, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3263, "column": 0}, "map": {"version":3,"file":"webgl-texture-view.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-texture-view.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {Device, TextureViewProps} from '@luma.gl/core';\n// import {decodeTextureFormat} from '@luma.gl/core';\nimport {TextureView, Texture} from '@luma.gl/core';\n\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLTexture} from './webgl-texture';\n\nexport class WEBGLTextureView extends TextureView {\n  readonly device: WebGLDevice;\n  readonly gl: WebGL2RenderingContext;\n  readonly handle: null; // Does not have a WebGL representation\n  readonly texture: WEBGLTexture;\n\n  constructor(device: Device, props: TextureViewProps & {texture: WEBGLTexture}) {\n    super(device, {...Texture.defaultProps, ...props});\n\n    this.device = device as WebGLDevice;\n    this.gl = this.device.gl;\n    this.handle = null;\n    this.texture = props.texture;\n  }\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAGpC,qDAAqD;;;;;AACrD,OAAO,EAAC,WAAW,EAAE,OAAO,EAAC,MAAM,eAAe,CAAC;;AAK7C,MAAO,gBAAiB,iMAAQ,cAAW;IACtC,MAAM,CAAc;IACpB,EAAE,CAAyB;IAC3B,MAAM,CAAO,CAAC,uCAAuC;IACrD,OAAO,CAAe;IAE/B,YAAY,MAAc,EAAE,KAAiD,CAAA;QAC3E,KAAK,CAAC,MAAM,EAAE;YAAC,mLAAG,UAAO,CAAC,YAAY;YAAE,GAAG,KAAK;QAAA,CAAC,CAAC,CAAC;QAEnD,IAAI,CAAC,MAAM,GAAG,MAAqB,CAAC;QACpC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;IAC/B,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 3289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3295, "column": 0}, "map": {"version":3,"file":"device-parameters.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/converters/device-parameters.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {CompareFunction, StencilOperation, BlendOperation, BlendFactor} from '@luma.gl/core';\nimport {Device, log, Parameters, PolygonMode, ProvokingVertex} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport type {\n  GLBlendEquation,\n  GLBlendFunction,\n  GLFunction,\n  GLParameters,\n  GLPolygonMode,\n  GLProvokingVertex,\n  GLStencilOp\n} from '@luma.gl/constants';\nimport {setGLParameters} from '../../context/parameters/unified-parameter-api';\nimport {WebGLDevice} from '../webgl-device';\n\n/* eslint-disable no-unused-expressions */ // For expression ? gl.enable() : gl.disable()\n\n/**\n * Execute a function with a set of temporary WebGL parameter overrides\n * - Saves current \"global\" WebGL context settings\n * - Sets the supplies WebGL context parameters,\n * - Executes supplied function\n * - Restores parameters\n * - Returns the return value of the supplied function\n */\nexport function withDeviceAndGLParameters<T = unknown>(\n  device: Device,\n  parameters: Parameters,\n  glParameters: GLParameters,\n  func: (_?: Device) => T\n): T {\n  if (isObjectEmpty(parameters)) {\n    // Avoid setting state if no parameters provided. Just call and return\n    return func(device);\n  }\n\n  // Wrap in a try-catch to ensure that parameters are restored on exceptions\n  const webglDevice = device as WebGLDevice;\n  webglDevice.pushState();\n  try {\n    setDeviceParameters(device, parameters);\n    setGLParameters(webglDevice.gl, glParameters);\n    return func(device);\n  } finally {\n    webglDevice.popState();\n  }\n}\n\n/**\n * Execute a function with a set of temporary WebGL parameter overrides\n * - Saves current \"global\" WebGL context settings\n * - Sets the supplies WebGL context parameters,\n * - Executes supplied function\n * - Restores parameters\n * - Returns the return value of the supplied function\n * @deprecated use withDeviceParameters instead\n */\nexport function withGLParameters<T = unknown>(\n  device: Device,\n  parameters: GLParameters,\n  func: (_?: Device) => T\n): T {\n  if (isObjectEmpty(parameters)) {\n    // Avoid setting state if no parameters provided. Just call and return\n    return func(device);\n  }\n\n  // Wrap in a try-catch to ensure that parameters are restored on exceptions\n  const webglDevice = device as WebGLDevice;\n  webglDevice.pushState();\n  try {\n    setGLParameters(webglDevice.gl, parameters);\n    return func(device);\n  } finally {\n    webglDevice.popState();\n  }\n}\n\n/**\n * Execute a function with a set of temporary WebGL parameter overrides\n * - Saves current \"global\" WebGL context settings\n * - Sets the supplies WebGL context parameters,\n * - Executes supplied function\n * - Restores parameters\n * - Returns the return value of the supplied function\n */\nexport function withDeviceParameters<T = unknown>(\n  device: Device,\n  parameters: Parameters,\n  func: (_?: Device) => T\n): T {\n  if (isObjectEmpty(parameters)) {\n    // Avoid setting state if no parameters provided. Just call and return\n    return func(device);\n  }\n\n  // Wrap in a try-catch to ensure that parameters are restored on exceptions'\n  const webglDevice = device as WebGLDevice;\n  webglDevice.pushState();\n  try {\n    setDeviceParameters(device, parameters);\n    return func(device);\n  } finally {\n    webglDevice.popState();\n  }\n}\n\n/** Set WebGPU Style Parameters */\nexport function setDeviceParameters(device: Device, parameters: Parameters) {\n  const webglDevice = device as WebGLDevice;\n  const {gl} = webglDevice;\n\n  // RASTERIZATION SETTINGS\n  if (parameters.cullMode) {\n    switch (parameters.cullMode) {\n      case 'none':\n        gl.disable(GL.CULL_FACE);\n        break;\n      case 'front':\n        gl.enable(GL.CULL_FACE);\n        gl.cullFace(GL.FRONT);\n        break;\n      case 'back':\n        gl.enable(GL.CULL_FACE);\n        gl.cullFace(GL.BACK);\n        break;\n    }\n  }\n\n  if (parameters.frontFace) {\n    gl.frontFace(\n      map('frontFace', parameters.frontFace, {\n        ccw: GL.CCW,\n        cw: GL.CW\n      })\n    );\n  }\n\n  if (parameters.unclippedDepth) {\n    if (device.features.has('depth-clip-control')) {\n      // EXT_depth_clamp\n      gl.enable(GL.DEPTH_CLAMP_EXT);\n    }\n  }\n\n  if (parameters.depthBias !== undefined) {\n    gl.enable(GL.POLYGON_OFFSET_FILL);\n    gl.polygonOffset(parameters.depthBias, parameters.depthBiasSlopeScale || 0);\n  }\n\n  // depthBiasSlopeScale: {\n  //   // Handled by depthBias\n  // },\n\n  // WEBGL EXTENSIONS\n\n  if (parameters.provokingVertex) {\n    if (device.features.has('provoking-vertex-webgl')) {\n      const extensions = webglDevice.getExtension('WEBGL_provoking_vertex');\n      const ext = extensions.WEBGL_provoking_vertex;\n\n      const vertex = map<ProvokingVertex, GLProvokingVertex>(\n        'provokingVertex',\n        parameters.provokingVertex,\n        {\n          first: GL.FIRST_VERTEX_CONVENTION_WEBGL,\n          last: GL.LAST_VERTEX_CONVENTION_WEBGL\n        }\n      );\n      ext?.provokingVertexWEBGL(vertex);\n    }\n  }\n\n  if (parameters.polygonMode || parameters.polygonOffsetLine) {\n    if (device.features.has('polygon-mode-webgl')) {\n      if (parameters.polygonMode) {\n        const extensions = webglDevice.getExtension('WEBGL_polygon_mode');\n        const ext = extensions.WEBGL_polygon_mode;\n        const mode = map<PolygonMode, GLPolygonMode>('polygonMode', parameters.polygonMode, {\n          fill: GL.FILL_WEBGL,\n          line: GL.LINE_WEBGL\n        });\n        ext?.polygonModeWEBGL(GL.FRONT, mode);\n        ext?.polygonModeWEBGL(GL.BACK, mode);\n      }\n\n      if (parameters.polygonOffsetLine) {\n        gl.enable(GL.POLYGON_OFFSET_LINE_WEBGL);\n      }\n    }\n  }\n\n  if (device.features.has('shader-clip-cull-distance-webgl')) {\n    if (parameters.clipDistance0) {\n      gl.enable(GL.CLIP_DISTANCE0_WEBGL);\n    }\n    if (parameters.clipDistance1) {\n      gl.enable(GL.CLIP_DISTANCE1_WEBGL);\n    }\n    if (parameters.clipDistance2) {\n      gl.enable(GL.CLIP_DISTANCE2_WEBGL);\n    }\n    if (parameters.clipDistance3) {\n      gl.enable(GL.CLIP_DISTANCE3_WEBGL);\n    }\n    if (parameters.clipDistance4) {\n      gl.enable(GL.CLIP_DISTANCE4_WEBGL);\n    }\n    if (parameters.clipDistance5) {\n      gl.enable(GL.CLIP_DISTANCE5_WEBGL);\n    }\n    if (parameters.clipDistance6) {\n      gl.enable(GL.CLIP_DISTANCE6_WEBGL);\n    }\n    if (parameters.clipDistance7) {\n      gl.enable(GL.CLIP_DISTANCE7_WEBGL);\n    }\n  }\n\n  // DEPTH STENCIL\n\n  if (parameters.depthWriteEnabled !== undefined) {\n    gl.depthMask(mapBoolean('depthWriteEnabled', parameters.depthWriteEnabled));\n  }\n\n  if (parameters.depthCompare) {\n    parameters.depthCompare !== 'always' ? gl.enable(GL.DEPTH_TEST) : gl.disable(GL.DEPTH_TEST);\n    gl.depthFunc(convertCompareFunction('depthCompare', parameters.depthCompare));\n  }\n\n  if (parameters.stencilWriteMask) {\n    const mask = parameters.stencilWriteMask;\n    gl.stencilMaskSeparate(GL.FRONT, mask);\n    gl.stencilMaskSeparate(GL.BACK, mask);\n  }\n\n  if (parameters.stencilReadMask) {\n    // stencilReadMask is handle inside stencil***Compare.\n    log.warn('stencilReadMask not supported under WebGL');\n  }\n\n  if (parameters.stencilCompare) {\n    const mask = parameters.stencilReadMask || 0xffffffff;\n    const glValue = convertCompareFunction('depthCompare', parameters.stencilCompare);\n    // TODO - ensure back doesn't overwrite\n    parameters.stencilCompare !== 'always'\n      ? gl.enable(GL.STENCIL_TEST)\n      : gl.disable(GL.STENCIL_TEST);\n    gl.stencilFuncSeparate(GL.FRONT, glValue, 0, mask);\n    gl.stencilFuncSeparate(GL.BACK, glValue, 0, mask);\n  }\n\n  if (\n    parameters.stencilPassOperation &&\n    parameters.stencilFailOperation &&\n    parameters.stencilDepthFailOperation\n  ) {\n    const dppass = convertStencilOperation('stencilPassOperation', parameters.stencilPassOperation);\n    const sfail = convertStencilOperation('stencilFailOperation', parameters.stencilFailOperation);\n    const dpfail = convertStencilOperation(\n      'stencilDepthFailOperation',\n      parameters.stencilDepthFailOperation\n    );\n    gl.stencilOpSeparate(GL.FRONT, sfail, dpfail, dppass);\n    gl.stencilOpSeparate(GL.BACK, sfail, dpfail, dppass);\n  }\n\n  // stencilDepthFailOperation() {\n  //   // handled by stencilPassOperation\n  // },\n\n  // stencilFailOperation() {\n  //   // handled by stencilPassOperation\n  // },\n\n  // COLOR STATE\n  switch (parameters.blend) {\n    case true:\n      gl.enable(GL.BLEND);\n      break;\n    case false:\n      gl.disable(GL.BLEND);\n      break;\n    default:\n    // leave WebGL blend state unchanged if `parameters.blend` is not set\n  }\n\n  if (parameters.blendColorOperation || parameters.blendAlphaOperation) {\n    const colorEquation = convertBlendOperationToEquation(\n      'blendColorOperation',\n      parameters.blendColorOperation || 'add'\n    );\n    const alphaEquation = convertBlendOperationToEquation(\n      'blendAlphaOperation',\n      parameters.blendAlphaOperation || 'add'\n    );\n    gl.blendEquationSeparate(colorEquation, alphaEquation);\n\n    const colorSrcFactor = convertBlendFactorToFunction(\n      'blendColorSrcFactor',\n      parameters.blendColorSrcFactor || 'one'\n    );\n    const colorDstFactor = convertBlendFactorToFunction(\n      'blendColorDstFactor',\n      parameters.blendColorDstFactor || 'zero'\n    );\n    const alphaSrcFactor = convertBlendFactorToFunction(\n      'blendAlphaSrcFactor',\n      parameters.blendAlphaSrcFactor || 'one'\n    );\n    const alphaDstFactor = convertBlendFactorToFunction(\n      'blendAlphaDstFactor',\n      parameters.blendAlphaDstFactor || 'zero'\n    );\n    gl.blendFuncSeparate(colorSrcFactor, colorDstFactor, alphaSrcFactor, alphaDstFactor);\n  }\n}\n\n/*\n      rasterizationState: {\n        cullMode: \"back\",\n      },\n\n      depthStencilState: {\n        depthWriteEnabled: true,\n        depthCompare: \"less\",\n        format: \"depth24plus-stencil8\",\n      },\n\n      colorStates: [\n        {\n          format: \"bgra8unorm\",\n          // colorBlend.srcFactor = wgpu::BlendFactor::SrcAlpha;\n          // colorBlend.dstFactor = wgpu::BlendFactor::OneMinusSrcAlpha;\n          // alphaBlend.srcFactor = wgpu::BlendFactor::SrcAlpha;\n          // alphaBlend.dstFactor = wgpu::BlendFactor::OneMinusSrcAlpha;\n        },\n      ],\n    });\n*/\n\nexport function convertCompareFunction(parameter: string, value: CompareFunction): GLFunction {\n  return map<CompareFunction, GLFunction>(parameter, value, {\n    never: GL.NEVER,\n    less: GL.LESS,\n    equal: GL.EQUAL,\n    'less-equal': GL.LEQUAL,\n    greater: GL.GREATER,\n    'not-equal': GL.NOTEQUAL,\n    'greater-equal': GL.GEQUAL,\n    always: GL.ALWAYS\n  });\n}\n\nexport function convertToCompareFunction(parameter: string, value: GLFunction): CompareFunction {\n  return map<GLFunction, CompareFunction>(parameter, value, {\n    [GL.NEVER]: 'never',\n    [GL.LESS]: 'less',\n    [GL.EQUAL]: 'equal',\n    [GL.LEQUAL]: 'less-equal',\n    [GL.GREATER]: 'greater',\n    [GL.NOTEQUAL]: 'not-equal',\n    [GL.GEQUAL]: 'greater-equal',\n    [GL.ALWAYS]: 'always'\n  });\n}\n\nfunction convertStencilOperation(parameter: string, value: StencilOperation): GL {\n  return map<StencilOperation, GLStencilOp>(parameter, value, {\n    keep: GL.KEEP,\n    zero: GL.ZERO,\n    replace: GL.REPLACE,\n    invert: GL.INVERT,\n    'increment-clamp': GL.INCR,\n    'decrement-clamp': GL.DECR,\n    'increment-wrap': GL.INCR_WRAP,\n    'decrement-wrap': GL.DECR_WRAP\n  });\n}\n\nfunction convertBlendOperationToEquation(\n  parameter: string,\n  value: BlendOperation\n): GLBlendEquation {\n  return map<BlendOperation, GLBlendEquation>(parameter, value, {\n    add: GL.FUNC_ADD,\n    subtract: GL.FUNC_SUBTRACT,\n    'reverse-subtract': GL.FUNC_REVERSE_SUBTRACT,\n    min: GL.MIN,\n    max: GL.MAX\n  });\n}\n\nfunction convertBlendFactorToFunction(parameter: string, value: BlendFactor): GLBlendFunction {\n  return map<BlendFactor, GLBlendFunction>(parameter, value, {\n    one: GL.ONE,\n    zero: GL.ZERO,\n    'src-color': GL.SRC_COLOR,\n    'one-minus-src-color': GL.ONE_MINUS_SRC_COLOR,\n    'dst-color': GL.DST_COLOR,\n    'one-minus-dst-color': GL.ONE_MINUS_DST_COLOR,\n    'src-alpha': GL.SRC_ALPHA,\n    'one-minus-src-alpha': GL.ONE_MINUS_SRC_ALPHA,\n    'dst-alpha': GL.DST_ALPHA,\n    'one-minus-dst-alpha': GL.ONE_MINUS_DST_ALPHA,\n    'src-alpha-saturated': GL.SRC_ALPHA_SATURATE,\n    'constant-color': GL.CONSTANT_COLOR,\n    'one-minus-constant-color': GL.ONE_MINUS_CONSTANT_COLOR,\n    'constant-alpha': GL.CONSTANT_ALPHA,\n    'one-minus-constant-alpha': GL.ONE_MINUS_CONSTANT_ALPHA\n  });\n}\n\nfunction message(parameter: string, value: any): string {\n  return `Illegal parameter ${value} for ${parameter}`;\n}\n\nfunction map<K extends string | number, V>(parameter: string, value: K, valueMap: Record<K, V>): V {\n  if (!(value in valueMap)) {\n    throw new Error(message(parameter, value));\n  }\n  return valueMap[value];\n}\n\nfunction mapBoolean(parameter: string, value: boolean): boolean {\n  return value;\n}\n\n/** Returns true if given object is empty, false otherwise. */\nfunction isObjectEmpty(obj: object): boolean {\n  let isEmpty = true;\n  // @ts-ignore key is unused\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  for (const key in obj) {\n    isEmpty = false;\n    break;\n  }\n  return isEmpty;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3595, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3601, "column": 0}, "map": {"version":3,"file":"sampler-parameters.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/converters/sampler-parameters.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// SAMPLER FILTERS\nimport {SamplerProps} from '@luma.gl/core';\nimport {GL, GLSamplerParameters} from '@luma.gl/constants';\nimport {convertCompareFunction} from './device-parameters';\n\n/**\n * Convert WebGPU-style sampler props to WebGL\n * @param props\n * @returns\n */\nexport function convertSamplerParametersToWebGL(props: SamplerProps): GLSamplerParameters {\n  const params: GLSamplerParameters = {};\n  if (props.addressModeU) {\n    params[GL.TEXTURE_WRAP_S] = convertAddressMode(props.addressModeU);\n  }\n  if (props.addressModeV) {\n    params[GL.TEXTURE_WRAP_T] = convertAddressMode(props.addressModeV);\n  }\n  if (props.addressModeW) {\n    params[GL.TEXTURE_WRAP_R] = convertAddressMode(props.addressModeW);\n  }\n  if (props.magFilter) {\n    params[GL.TEXTURE_MAG_FILTER] = convertMaxFilterMode(props.magFilter);\n  }\n  if (props.minFilter || props.mipmapFilter) {\n    // TODO - arbitrary choice of linear?\n    params[GL.TEXTURE_MIN_FILTER] = convertMinFilterMode(\n      props.minFilter || 'linear',\n      props.mipmapFilter\n    );\n  }\n  if (props.lodMinClamp !== undefined) {\n    params[GL.TEXTURE_MIN_LOD] = props.lodMinClamp;\n  }\n  if (props.lodMaxClamp !== undefined) {\n    params[GL.TEXTURE_MAX_LOD] = props.lodMaxClamp;\n  }\n  if (props.type === 'comparison-sampler') {\n    // Setting prop.compare turns this into a comparison sampler\n    params[GL.TEXTURE_COMPARE_MODE] = GL.COMPARE_REF_TO_TEXTURE;\n  }\n  if (props.compare) {\n    params[GL.TEXTURE_COMPARE_FUNC] = convertCompareFunction('compare', props.compare);\n  }\n  // Note depends on WebGL extension\n  if (props.maxAnisotropy) {\n    params[GL.TEXTURE_MAX_ANISOTROPY_EXT] = props.maxAnisotropy;\n  }\n  return params;\n}\n\n// HELPERS\n\n/** Convert address more */\nfunction convertAddressMode(\n  addressMode: 'clamp-to-edge' | 'repeat' | 'mirror-repeat'\n): GL.CLAMP_TO_EDGE | GL.REPEAT | GL.MIRRORED_REPEAT {\n  switch (addressMode) {\n    case 'clamp-to-edge':\n      return GL.CLAMP_TO_EDGE;\n    case 'repeat':\n      return GL.REPEAT;\n    case 'mirror-repeat':\n      return GL.MIRRORED_REPEAT;\n  }\n}\n\nfunction convertMaxFilterMode(maxFilter: 'nearest' | 'linear'): GL.NEAREST | GL.LINEAR {\n  switch (maxFilter) {\n    case 'nearest':\n      return GL.NEAREST;\n    case 'linear':\n      return GL.LINEAR;\n  }\n}\n\n/**\n * WebGPU has separate min filter and mipmap filter,\n * WebGL is combined and effectively offers 6 options\n */\nfunction convertMinFilterMode(\n  minFilter: 'nearest' | 'linear',\n  mipmapFilter: 'none' | 'nearest' | 'linear' = 'none'\n):\n  | GL.NEAREST\n  | GL.LINEAR\n  | GL.NEAREST_MIPMAP_NEAREST\n  | GL.LINEAR_MIPMAP_NEAREST\n  | GL.NEAREST_MIPMAP_LINEAR\n  | GL.LINEAR_MIPMAP_LINEAR {\n  if (!mipmapFilter) {\n    return convertMaxFilterMode(minFilter);\n  }\n  switch (mipmapFilter) {\n    case 'none':\n      return convertMaxFilterMode(minFilter);\n    case 'nearest':\n      return minFilter === 'nearest' ? GL.NEAREST_MIPMAP_NEAREST : GL.NEAREST_MIPMAP_LINEAR;\n    case 'linear':\n      return minFilter === 'nearest' ? GL.LINEAR_MIPMAP_NEAREST : GL.LINEAR_MIPMAP_LINEAR;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3682, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3688, "column": 0}, "map": {"version":3,"file":"webgl-sampler.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-sampler.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Sampler, SamplerProps} from '@luma.gl/core';\nimport {GL, GLSamplerParameters} from '@luma.gl/constants';\nimport {convertSamplerParametersToWebGL} from '../converters/sampler-parameters';\nimport type {WebGLDevice} from '../webgl-device';\n\n/**\n * Sampler object -\n * so that they can be set directly on the texture\n * https://github.com/WebGLSamples/WebGL2Samples/blob/master/samples/sampler_object.html\n */\nexport class WEBGLSampler extends Sampler {\n  readonly device: WebGLDevice;\n  readonly handle: WebGLSampler;\n  readonly parameters: GLSamplerParameters;\n\n  constructor(device: WebGLDevice, props: SamplerProps) {\n    super(device, props);\n    this.device = device;\n    this.parameters = convertSamplerParametersToWebGL(props);\n    this.handle = this.handle || this.device.gl.createSampler();\n    this._setSamplerParameters(this.parameters);\n  }\n\n  override destroy(): void {\n    if (this.handle) {\n      this.device.gl.deleteSampler(this.handle);\n      // @ts-expect-error read-only/undefined\n      this.handle = undefined;\n    }\n  }\n\n  override toString(): string {\n    return `Sampler(${this.id},${JSON.stringify(this.props)})`;\n  }\n\n  /** Set sampler parameters on the sampler */\n  private _setSamplerParameters(parameters: GLSamplerParameters): void {\n    for (const [pname, value] of Object.entries(parameters)) {\n      // Apparently there are integer/float conversion issues requires two parameter setting functions in JavaScript.\n      // For now, pick the float version for parameters specified as GLfloat.\n      const param = Number(pname) as GL.TEXTURE_MIN_LOD | GL.TEXTURE_MAX_LOD;\n      switch (param) {\n        case GL.TEXTURE_MIN_LOD:\n        case GL.TEXTURE_MAX_LOD:\n          this.device.gl.samplerParameterf(this.handle, param, value);\n          break;\n        default:\n          this.device.gl.samplerParameteri(this.handle, param, value);\n          break;\n      }\n    }\n  }\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAIpC,OAAO,EAAC,+BAA+B,EAAC,4CAAyC;AAFjF,OAAO,EAAC,OAAO,EAAe,MAAM,eAAe,CAAC;;;;AAU9C,MAAO,YAAa,yLAAQ,UAAO;IAC9B,MAAM,CAAc;IACpB,MAAM,CAAe;IACrB,UAAU,CAAsB;IAEzC,YAAY,MAAmB,EAAE,KAAmB,CAAA;QAClD,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,UAAU,uMAAG,kCAAA,AAA+B,EAAC,KAAK,CAAC,CAAC;QACzD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAC5D,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC9C,CAAC;IAEQ,OAAO,GAAA;QACd,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1C,uCAAuC;YACvC,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC;QAC1B,CAAC;IACH,CAAC;IAEQ,QAAQ,GAAA;QACf,OAAO,CAAA,QAAA,EAAW,IAAI,CAAC,EAAE,CAAA,CAAA,EAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAA,CAAG,CAAC;IAC7D,CAAC;IAED,0CAAA,EAA4C,CACpC,qBAAqB,CAAC,UAA+B,EAAA;QAC3D,KAAK,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAE,CAAC;YACxD,+GAA+G;YAC/G,uEAAuE;YACvE,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAA4C,CAAC;YACvE,OAAQ,KAAK,EAAE,CAAC;gBACd,KAAA,MAAwB;gBACxB,KAAA;oBACE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC5D,MAAM;gBACR;oBACE,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBAC5D,MAAM;YACV,CAAC;QACH,CAAC;IACH,CAAC;CACF","ignoreList":[0]}},
    {"offset": {"line": 3737, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3743, "column": 0}, "map": {"version":3,"file":"webgl-texture.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-texture.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  Device,\n  TextureProps,\n  TextureViewProps,\n  Sampler,\n  SamplerProps,\n  SamplerParameters,\n  TextureCubeFace,\n  ExternalImage,\n  Texture1DData,\n  Texture2DData,\n  Texture3DData,\n  TextureCubeData,\n  TextureArrayData,\n  TextureCubeArrayData\n} from '@luma.gl/core';\nimport {Texture, log} from '@luma.gl/core';\nimport {\n  GL,\n  GLPixelType,\n  GLSamplerParameters,\n  GLTexelDataFormat,\n  GLTextureTarget\n} from '@luma.gl/constants';\nimport {getTextureFormatWebGL} from '../converters/webgl-texture-table';\nimport {convertSamplerParametersToWebGL} from '../converters/sampler-parameters';\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLSampler} from './webgl-sampler';\nimport {WEBGLTextureView} from './webgl-texture-view';\n\nimport {\n  initializeTextureStorage,\n  // clearMipLevel,\n  copyExternalImageToMipLevel,\n  copyCPUDataToMipLevel,\n  // copyGPUBufferToMipLevel,\n  getWebGLTextureTarget\n} from '../helpers/webgl-texture-utils';\n\n/**\n * WebGL... the texture API from hell... hopefully made simpler\n */\nexport class WEBGLTexture extends Texture {\n  // readonly MAX_ATTRIBUTES: number;\n  readonly device: WebGLDevice;\n  readonly gl: WebGL2RenderingContext;\n  handle: WebGLTexture;\n\n  sampler: WEBGLSampler = undefined; // TODO - currently unused in WebGL. Create dummy sampler?\n  view: WEBGLTextureView = undefined; // TODO - currently unused in WebGL. Create dummy view?\n\n  mipmaps: boolean;\n\n  // Texture type\n  /** Whether the internal format is compressed */\n  compressed: boolean;\n\n  /**\n   * The WebGL target corresponding to the texture type\n   * @note `target` cannot be modified by bind:\n   * textures are special because when you first bind them to a target,\n   * When you first bind a texture as a GL_TEXTURE_2D, you are saying that this texture is a 2D texture.\n   * And it will always be a 2D texture; this state cannot be changed ever.\n   * A texture that was first bound as a GL_TEXTURE_2D, must always be bound as a GL_TEXTURE_2D;\n   * attempting to bind it as GL_TEXTURE_3D will give rise to a run-time error\n   */\n  glTarget: GLTextureTarget;\n  /** The WebGL format - essentially channel structure */\n  glFormat: GLTexelDataFormat;\n  /** The WebGL data format - the type of each channel */\n  glType: GLPixelType;\n  /** The WebGL constant corresponding to the WebGPU style constant in format */\n  glInternalFormat: GL;\n\n  // state\n  /** Texture binding slot - TODO - move to texture view? */\n  textureUnit: number = 0;\n\n  constructor(device: Device, props: TextureProps) {\n    super(device, props);\n\n    // Texture base class strips out the data prop, so we need to add it back in\n    const propsWithData = {...this.props};\n    propsWithData.data = props.data;\n\n    this.device = device as WebGLDevice;\n    this.gl = this.device.gl;\n\n    // Note: In WebGL the texture target defines the type of texture on first bind.\n    this.glTarget = getWebGLTextureTarget(this.props.dimension);\n\n    // The target format of this texture\n    const formatInfo = getTextureFormatWebGL(this.props.format);\n    this.glInternalFormat = formatInfo.internalFormat;\n    this.glFormat = formatInfo.format;\n    this.glType = formatInfo.type;\n    this.compressed = formatInfo.compressed;\n    this.mipmaps = Boolean(this.props.mipmaps);\n\n    this._initialize(propsWithData);\n\n    Object.seal(this);\n  }\n\n  /** Initialize texture with supplied props */\n  // eslint-disable-next-line max-statements\n  _initialize(propsWithData: TextureProps): void {\n    this.handle = this.props.handle || this.gl.createTexture();\n    this.device.setSpectorMetadata(this.handle, {...this.props, data: propsWithData.data});\n\n    let {width, height} = propsWithData;\n\n    if (!width || !height) {\n      const textureSize = Texture.getTextureDataSize(propsWithData.data);\n      width = textureSize?.width || 1;\n      height = textureSize?.height || 1;\n    }\n\n    // Store opts for accessors\n    this.width = width;\n    this.height = height;\n    this.depth = propsWithData.depth;\n\n    // Set texture sampler parameters\n    this.setSampler(propsWithData.sampler);\n    // @ts-ignore TODO - fix types\n    this.view = new WEBGLTextureView(this.device, {...this.props, texture: this});\n\n    this.bind();\n    initializeTextureStorage(this.gl, this.mipLevels, this);\n\n    if (propsWithData.data) {\n      // prettier-ignore\n      switch (propsWithData.dimension) {\n        case '1d': this.setTexture1DData(propsWithData.data); break;\n        case '2d': this.setTexture2DData(propsWithData.data); break;\n        case '3d': this.setTexture3DData(propsWithData.data); break;\n        case 'cube': this.setTextureCubeData(propsWithData.data); break;\n        case '2d-array': this.setTextureArrayData(propsWithData.data); break;\n        case 'cube-array': this.setTextureCubeArrayData(propsWithData.data); break;\n        // @ts-expect-error\n        default: throw new Error(propsWithData.dimension);\n      }\n    }\n\n    if (this.mipmaps) {\n      this.generateMipmap();\n    }\n  }\n\n  override destroy(): void {\n    if (this.handle) {\n      this.gl.deleteTexture(this.handle);\n      this.removeStats();\n      this.trackDeallocatedMemory('Texture');\n      // this.handle = null;\n      this.destroyed = true;\n    }\n  }\n\n  createView(props: TextureViewProps): WEBGLTextureView {\n    return new WEBGLTextureView(this.device, {...props, texture: this});\n  }\n\n  setSampler(sampler: Sampler | SamplerProps = {}): void {\n    let samplerProps: SamplerParameters;\n    if (sampler instanceof WEBGLSampler) {\n      this.sampler = sampler;\n      samplerProps = sampler.props;\n    } else {\n      this.sampler = new WEBGLSampler(this.device, sampler);\n      samplerProps = sampler as SamplerProps;\n    }\n\n    const parameters = convertSamplerParametersToWebGL(samplerProps);\n    this._setSamplerParameters(parameters);\n  }\n\n  // Call to regenerate mipmaps after modifying texture(s)\n  generateMipmap(options?: {force?: boolean}): void {\n    const isFilterableAndRenderable =\n      this.device.isTextureFormatRenderable(this.props.format) &&\n      this.device.isTextureFormatFilterable(this.props.format);\n    if (!isFilterableAndRenderable) {\n      log.warn(`${this} is not renderable or filterable, may not be able to generate mipmaps`)();\n      if (!options?.force) {\n        return;\n      }\n    }\n\n    try {\n      this.gl.bindTexture(this.glTarget, this.handle);\n      this.gl.generateMipmap(this.glTarget);\n    } catch (error) {\n      log.warn(`Error generating mipmap for ${this}: ${(error as Error).message}`)();\n    } finally {\n      this.gl.bindTexture(this.glTarget, null);\n    }\n  }\n\n  // Image Data Setters\n  copyExternalImage(options: {\n    image: ExternalImage;\n    sourceX?: number;\n    sourceY?: number;\n    width?: number;\n    height?: number;\n    depth?: number;\n    mipLevel?: number;\n    x?: number;\n    y?: number;\n    z?: number;\n    aspect?: 'all' | 'stencil-only' | 'depth-only';\n    colorSpace?: 'srgb';\n    premultipliedAlpha?: boolean;\n    flipY?: boolean;\n  }): {width: number; height: number} {\n    const size = Texture.getExternalImageSize(options.image);\n    const opts = {...Texture.defaultCopyExternalImageOptions, ...size, ...options};\n\n    const {image, depth, mipLevel, x, y, z, flipY} = opts;\n    let {width, height} = opts;\n    const {dimension, glTarget, glFormat, glInternalFormat, glType} = this;\n\n    // WebGL will error if we try to copy outside the bounds of the texture\n    width = Math.min(width, this.width - x);\n    height = Math.min(height, this.height - y);\n\n    if (options.sourceX || options.sourceY) {\n      // requires copyTexSubImage2D from a framebuffer'\n      throw new Error('WebGL does not support sourceX/sourceY)');\n    }\n\n    copyExternalImageToMipLevel(this.device.gl, this.handle, image, {\n      dimension,\n      mipLevel,\n      x,\n      y,\n      z,\n      width,\n      height,\n      depth,\n      glFormat,\n      glInternalFormat,\n      glType,\n      glTarget,\n      flipY\n    });\n\n    return {width: opts.width, height: opts.height};\n  }\n\n  setTexture1DData(data: Texture1DData): void {\n    throw new Error('setTexture1DData not supported in WebGL.');\n  }\n\n  /** Set a simple texture */\n  setTexture2DData(lodData: Texture2DData, depth = 0): void {\n    this.bind();\n\n    const lodArray = Texture.normalizeTextureData(lodData, this);\n\n    // If the user provides multiple LODs, then automatic mipmap\n    // generation generateMipmap() should be disabled to avoid overwriting them.\n    if (lodArray.length > 1 && this.props.mipmaps !== false) {\n      log.warn(`Texture ${this.id} mipmap and multiple LODs.`)();\n    }\n\n    for (let lodLevel = 0; lodLevel < lodArray.length; lodLevel++) {\n      const imageData = lodArray[lodLevel];\n      this._setMipLevel(depth, lodLevel, imageData);\n    }\n\n    this.unbind();\n  }\n\n  /**\n   * Sets a 3D texture\n   * @param data\n   */\n  setTexture3DData(data: Texture3DData): void {\n    if (this.props.dimension !== '3d') {\n      throw new Error(this.id);\n    }\n    if (ArrayBuffer.isView(data)) {\n      this.bind();\n      copyCPUDataToMipLevel(this.device.gl, data, this);\n      this.unbind();\n    }\n  }\n\n  /**\n   * Set a Texture Cube Data\n   * @todo - could support TextureCubeArray with depth\n   * @param data\n   * @param index\n   */\n  setTextureCubeData(data: TextureCubeData, depth: number = 0): void {\n    if (this.props.dimension !== 'cube') {\n      throw new Error(this.id);\n    }\n    for (const face of Texture.CubeFaces) {\n      this.setTextureCubeFaceData(data[face], face);\n    }\n  }\n\n  /**\n   * Sets an entire texture array\n   * @param data\n   */\n  setTextureArrayData(data: TextureArrayData): void {\n    if (this.props.dimension !== '2d-array') {\n      throw new Error(this.id);\n    }\n    throw new Error('setTextureArrayData not implemented.');\n  }\n\n  /**\n   * Sets an entire texture cube array\n   * @param data\n   */\n  setTextureCubeArrayData(data: TextureCubeArrayData): void {\n    throw new Error('setTextureCubeArrayData not supported in WebGL2.');\n  }\n\n  setTextureCubeFaceData(lodData: Texture2DData, face: TextureCubeFace, depth: number = 0): void {\n    // assert(this.props.dimension === 'cube');\n\n    // If the user provides multiple LODs, then automatic mipmap\n    // generation generateMipmap() should be disabled to avoid overwriting them.\n    if (Array.isArray(lodData) && lodData.length > 1 && this.props.mipmaps !== false) {\n      log.warn(`${this.id} has mipmap and multiple LODs.`)();\n    }\n\n    const faceDepth = Texture.CubeFaces.indexOf(face);\n\n    this.setTexture2DData(lodData, faceDepth);\n  }\n\n  // DEPRECATED METHODS\n\n  /** Update external texture (video frame or canvas) @deprecated Use ExternalTexture */\n  update(): void {\n    throw new Error('Texture.update() not implemented. Use ExternalTexture');\n  }\n\n  // INTERNAL METHODS\n\n  /** @todo update this method to accept LODs */\n  setImageDataForFace(options): void {\n    const {\n      face,\n      width,\n      height,\n      pixels,\n      data,\n      format = GL.RGBA,\n      type = GL.UNSIGNED_BYTE\n      // generateMipmap = false // TODO\n    } = options;\n\n    const {gl} = this;\n\n    const imageData = pixels || data;\n\n    this.bind();\n    if (imageData instanceof Promise) {\n      imageData.then(resolvedImageData =>\n        this.setImageDataForFace(\n          Object.assign({}, options, {\n            face,\n            data: resolvedImageData,\n            pixels: resolvedImageData\n          })\n        )\n      );\n    } else if (this.width || this.height) {\n      gl.texImage2D(face, 0, format, width, height, 0 /* border*/, format, type, imageData);\n    } else {\n      gl.texImage2D(face, 0, format, format, type, imageData);\n    }\n  }\n\n  _getImageDataMap(faceData: Record<string | GL, any>): Record<GL, any> {\n    for (let i = 0; i < Texture.CubeFaces.length; ++i) {\n      const faceName = Texture.CubeFaces[i];\n      if (faceData[faceName]) {\n        faceData[GL.TEXTURE_CUBE_MAP_POSITIVE_X + i] = faceData[faceName];\n        delete faceData[faceName];\n      }\n    }\n    return faceData;\n  }\n\n  // RESOURCE METHODS\n\n  /**\n   * Sets sampler parameters on texture\n   */\n  _setSamplerParameters(parameters: GLSamplerParameters): void {\n    log.log(1, `${this.id} sampler parameters`, this.device.getGLKeys(parameters))();\n\n    this.gl.bindTexture(this.glTarget, this.handle);\n    for (const [pname, pvalue] of Object.entries(parameters)) {\n      const param = Number(pname) as keyof GLSamplerParameters;\n      const value = pvalue;\n\n      // Apparently integer/float issues require two different texture parameter setting functions in JavaScript.\n      // For now, pick the float version for parameters specified as GLfloat.\n      switch (param) {\n        case GL.TEXTURE_MIN_LOD:\n        case GL.TEXTURE_MAX_LOD:\n          this.gl.texParameterf(this.glTarget, param, value);\n          break;\n\n        case GL.TEXTURE_MIN_FILTER:\n          this.gl.texParameteri(this.glTarget, param, value);\n          break;\n\n        case GL.TEXTURE_WRAP_S:\n        case GL.TEXTURE_WRAP_T:\n          this.gl.texParameteri(this.glTarget, param, value);\n          break;\n        case GL.TEXTURE_MAX_ANISOTROPY_EXT:\n          // We have to query feature before using it\n          if (this.device.features.has('texture-filterable-anisotropic-webgl')) {\n            this.gl.texParameteri(this.glTarget, param, value);\n          }\n          break;\n        default:\n          this.gl.texParameteri(this.glTarget, param, value);\n          break;\n      }\n    }\n\n    this.gl.bindTexture(this.glTarget, null);\n  }\n\n  // INTERNAL SETTERS\n\n  /**\n   * Copy a region of data from a CPU memory buffer into this texture.\n   * @todo -   GLUnpackParameters parameters\n   */\n  protected _setMipLevel(\n    depth: number,\n    mipLevel: number,\n    textureData: Texture2DData,\n    glTarget: GL = this.glTarget\n  ) {\n    // if (!textureData) {\n    //   clearMipLevel(this.device.gl, {...this, depth, level});\n    //   return;\n    // }\n\n    if (Texture.isExternalImage(textureData)) {\n      copyExternalImageToMipLevel(this.device.gl, this.handle, textureData, {\n        ...this,\n        depth,\n        mipLevel,\n        glTarget,\n        flipY: this.props.flipY\n      });\n      return;\n    }\n\n    // @ts-expect-error\n    if (Texture.isTextureLevelData(textureData)) {\n      copyCPUDataToMipLevel(this.device.gl, textureData.data, {\n        ...this,\n        depth,\n        mipLevel,\n        glTarget\n      });\n      return;\n    }\n\n    throw new Error('Texture: invalid image data');\n  }\n  // HELPERS\n\n  getActiveUnit(): number {\n    return this.gl.getParameter(GL.ACTIVE_TEXTURE) - GL.TEXTURE0;\n  }\n\n  bind(textureUnit?: number): number {\n    const {gl} = this;\n\n    if (textureUnit !== undefined) {\n      this.textureUnit = textureUnit;\n      gl.activeTexture(gl.TEXTURE0 + textureUnit);\n    }\n\n    gl.bindTexture(this.glTarget, this.handle);\n    return textureUnit;\n  }\n\n  unbind(textureUnit?: number): number | undefined {\n    const {gl} = this;\n\n    if (textureUnit !== undefined) {\n      this.textureUnit = textureUnit;\n      gl.activeTexture(gl.TEXTURE0 + textureUnit);\n    }\n\n    gl.bindTexture(this.glTarget, null);\n    return textureUnit;\n  }\n}\n\n// TODO - Remove when texture refactor is complete\n\n/*\nsetCubeMapData(options: {\n  width: number;\n  height: number;\n  data: Record<GL, Texture2DData> | Record<TextureCubeFace, Texture2DData>;\n  format?: any;\n  type?: any;\n  /** @deprecated Use .data *\n  pixels: any;\n}): void {\n  const {gl} = this;\n\n  const {width, height, pixels, data, format = GL.RGBA, type = GL.UNSIGNED_BYTE} = options;\n\n  // pixel data (imageDataMap) is an Object from Face to Image or Promise.\n  // For example:\n  // {\n  // GL.TEXTURE_CUBE_MAP_POSITIVE_X : Image-or-Promise,\n  // GL.TEXTURE_CUBE_MAP_NEGATIVE_X : Image-or-Promise,\n  // ... }\n  // To provide multiple level-of-details (LODs) this can be Face to Array\n  // of Image or Promise, like this\n  // {\n  // GL.TEXTURE_CUBE_MAP_POSITIVE_X : [Image-or-Promise-LOD-0, Image-or-Promise-LOD-1],\n  // GL.TEXTURE_CUBE_MAP_NEGATIVE_X : [Image-or-Promise-LOD-0, Image-or-Promise-LOD-1],\n  // ... }\n\n  const imageDataMap = this._getImageDataMap(pixels || data);\n\n  const resolvedFaces = WEBGLTexture.FACES.map(face => {\n    const facePixels = imageDataMap[face];\n    return Array.isArray(facePixels) ? facePixels : [facePixels];\n  });\n  this.bind();\n\n  WEBGLTexture.FACES.forEach((face, index) => {\n    if (resolvedFaces[index].length > 1 && this.props.mipmaps !== false) {\n      // If the user provides multiple LODs, then automatic mipmap\n      // generation generateMipmap() should be disabled to avoid overwritting them.\n      log.warn(`${this.id} has mipmap and multiple LODs.`)();\n    }\n    resolvedFaces[index].forEach((image, lodLevel) => {\n      // TODO: adjust width & height for LOD!\n      if (width && height) {\n        gl.texImage2D(face, lodLevel, format, width, height, 0 /* border*, format, type, image);\n      } else {\n        gl.texImage2D(face, lodLevel, format, format, type, image);\n      }\n    });\n  });\n\n  this.unbind();\n}\n*/\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAgCpC,OAAO,EACL,wBAAwB;AAP1B,OAAO,EAAC,qBAAqB,EAAC,6CAA0C;;AAIxE,OAAO,EAAC,gBAAgB,EAAC,gCAA6B;AADtD,OAAO,EAAC,YAAY,EAAC,2BAAwB;AAF7C,OAAO,EAAC,+BAA+B,EAAC,4CAAyC;AATjF,OAAO,EAAC,OAAO,EAAE,GAAG,EAAC,MAAM,eAAe,CAAC;;;;;;;;AA0BrC,MAAO,YAAa,SAAQ,0LAAO;IACvC,mCAAmC;IAC1B,MAAM,CAAc;IACpB,EAAE,CAAyB;IACpC,MAAM,CAAe;IAErB,OAAO,GAAiB,SAAS,CAAC,CAAC,0DAA0D;IAC7F,IAAI,GAAqB,SAAS,CAAC,CAAC,uDAAuD;IAE3F,OAAO,CAAU;IAEjB,eAAe;IACf,8CAAA,EAAgD,CAChD,UAAU,CAAU;IAEpB;;;;;;;;OAQG,CACH,QAAQ,CAAkB;IAC1B,qDAAA,EAAuD,CACvD,QAAQ,CAAoB;IAC5B,qDAAA,EAAuD,CACvD,MAAM,CAAc;IACpB,4EAAA,EAA8E,CAC9E,gBAAgB,CAAK;IAErB,QAAQ;IACR,wDAAA,EAA0D,CAC1D,WAAW,GAAW,CAAC,CAAC;IAExB,YAAY,MAAc,EAAE,KAAmB,CAAA;QAC7C,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAErB,4EAA4E;QAC5E,MAAM,aAAa,GAAG;YAAC,GAAG,IAAI,CAAC,KAAK;QAAA,CAAC,CAAC;QACtC,aAAa,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QAEhC,IAAI,CAAC,MAAM,GAAG,MAAqB,CAAC;QACpC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC;QAEzB,+EAA+E;QAC/E,IAAI,CAAC,QAAQ,wMAAG,wBAAA,AAAqB,EAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAE5D,oCAAoC;QACpC,MAAM,UAAU,2MAAG,wBAAA,AAAqB,EAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,cAAc,CAAC;QAClD,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,IAAI,CAAC;QAC9B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC,UAAU,CAAC;QACxC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAE3C,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAEhC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,2CAAA,EAA6C,CAC7C,0CAA0C;IAC1C,WAAW,CAAC,aAA2B,EAAA;QACrC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;QAC3D,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,EAAE;YAAC,GAAG,IAAI,CAAC,KAAK;YAAE,IAAI,EAAE,aAAa,CAAC,IAAI;QAAA,CAAC,CAAC,CAAC;QAEvF,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,aAAa,CAAC;QAEpC,IAAI,CAAC,KAAK,IAAI,CAAC,MAAM,EAAE,CAAC;YACtB,MAAM,WAAW,mLAAG,UAAO,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;YACnE,KAAK,GAAG,WAAW,EAAE,KAAK,IAAI,CAAC,CAAC;YAChC,MAAM,GAAG,WAAW,EAAE,MAAM,IAAI,CAAC,CAAC;QACpC,CAAC;QAED,2BAA2B;QAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;QAEjC,iCAAiC;QACjC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QACvC,8BAA8B;QAC9B,IAAI,CAAC,IAAI,GAAG,sMAAI,mBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE;YAAC,GAAG,IAAI,CAAC,KAAK;YAAE,OAAO,EAAE,IAAI;QAAA,CAAC,CAAC,CAAC;QAE9E,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,gOAAA,AAAwB,EAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAExD,IAAI,aAAa,CAAC,IAAI,EAAE,CAAC;YACvB,kBAAkB;YAClB,OAAQ,aAAa,CAAC,SAAS,EAAE,CAAC;gBAChC,KAAK,IAAI;oBAAE,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBAAC,MAAM;gBAC5D,KAAK,IAAI;oBAAE,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBAAC,MAAM;gBAC5D,KAAK,IAAI;oBAAE,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBAAC,MAAM;gBAC5D,KAAK,MAAM;oBAAE,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBAAC,MAAM;gBAChE,KAAK,UAAU;oBAAE,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBAAC,MAAM;gBACrE,KAAK,YAAY;oBAAE,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBAAC,MAAM;gBAC3E,mBAAmB;gBACnB,OAAO,CAAC;oBAAC,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YACpD,CAAC;QACH,CAAC;QAED,IAAI,IAAI,CAAC,OAAO,EAAE,CAAC;YACjB,IAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC;IACH,CAAC;IAEQ,OAAO,GAAA;QACd,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YAChB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACnC,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,IAAI,CAAC,sBAAsB,CAAC,SAAS,CAAC,CAAC;YACvC,sBAAsB;YACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACxB,CAAC;IACH,CAAC;IAED,UAAU,CAAC,KAAuB,EAAA;QAChC,OAAO,sMAAI,mBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE;YAAC,GAAG,KAAK;YAAE,OAAO,EAAE,IAAI;QAAA,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,UAAU,CAAC,UAAkC,CAAA,CAAE,EAAA;QAC7C,IAAI,YAA+B,CAAC;QACpC,IAAI,OAAO,sMAAY,eAAY,EAAE,CAAC;YACpC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;YACvB,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC;QAC/B,CAAC,MAAM,CAAC;YACN,IAAI,CAAC,OAAO,GAAG,8LAAI,eAAY,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YACtD,YAAY,GAAG,OAAuB,CAAC;QACzC,CAAC;QAED,MAAM,UAAU,IAAG,qOAAA,AAA+B,EAAC,YAAY,CAAC,CAAC;QACjE,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;IACzC,CAAC;IAED,wDAAwD;IACxD,cAAc,CAAC,OAA2B,EAAA;QACxC,MAAM,yBAAyB,GAC7B,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IACxD,IAAI,CAAC,MAAM,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QAC3D,IAAI,CAAC,yBAAyB,EAAE,CAAC;yKAC/B,MAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAA,qEAAA,CAAuE,CAAC,EAAE,CAAC;YAC3F,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,CAAC;gBACpB,OAAO;YACT,CAAC;QACH,CAAC;QAED,IAAI,CAAC;YACH,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;YAChD,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACxC,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC;yKACf,MAAG,CAAC,IAAI,CAAC,CAAA,4BAAA,EAA+B,IAAI,CAAA,EAAA,EAAM,KAAe,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC;QACjF,CAAC,QAAS,CAAC;YACT,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC3C,CAAC;IACH,CAAC;IAED,qBAAqB;IACrB,iBAAiB,CAAC,OAejB,EAAA;QACC,MAAM,IAAI,mLAAG,UAAO,CAAC,oBAAoB,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACzD,MAAM,IAAI,GAAG;YAAC,mLAAG,UAAO,CAAC,+BAA+B;YAAE,GAAG,IAAI;YAAE,GAAG,OAAO;QAAA,CAAC,CAAC;QAE/E,MAAM,EAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAC,GAAG,IAAI,CAAC;QACtD,IAAI,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC;QAC3B,MAAM,EAAC,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,EAAC,GAAG,IAAI,CAAC;QAEvE,uEAAuE;QACvE,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QACxC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAE3C,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,EAAE,CAAC;YACvC,iDAAiD;YACjD,MAAM,IAAI,KAAK,CAAC,yCAAyC,CAAC,CAAC;QAC7D,CAAC;6MAED,8BAA2B,AAA3B,EAA4B,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE;YAC9D,SAAS;YACT,QAAQ;YACR,CAAC;YACD,CAAC;YACD,CAAC;YACD,KAAK;YACL,MAAM;YACN,KAAK;YACL,QAAQ;YACR,gBAAgB;YAChB,MAAM;YACN,QAAQ;YACR,KAAK;SACN,CAAC,CAAC;QAEH,OAAO;YAAC,KAAK,EAAE,IAAI,CAAC,KAAK;YAAE,MAAM,EAAE,IAAI,CAAC,MAAM;QAAA,CAAC,CAAC;IAClD,CAAC;IAED,gBAAgB,CAAC,IAAmB,EAAA;QAClC,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;IAC9D,CAAC;IAED,yBAAA,EAA2B,CAC3B,gBAAgB,CAAC,OAAsB,EAAE,KAAK,GAAG,CAAC,EAAA;QAChD,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,MAAM,QAAQ,kLAAG,WAAO,CAAC,oBAAoB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAE7D,4DAA4D;QAC5D,4EAA4E;QAC5E,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE,CAAC;yKACxD,MAAG,CAAC,IAAI,CAAC,CAAA,QAAA,EAAW,IAAI,CAAC,EAAE,CAAA,0BAAA,CAA4B,CAAC,EAAE,CAAC;QAC7D,CAAC;QAED,IAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,GAAG,QAAQ,CAAC,MAAM,EAAE,QAAQ,EAAE,CAAE,CAAC;YAC9D,MAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;YACrC,IAAI,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;QAChD,CAAC;QAED,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED;;;OAGG,CACH,gBAAgB,CAAC,IAAmB,EAAA;QAClC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,IAAI,EAAE,CAAC;YAClC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3B,CAAC;QACD,IAAI,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC;YAC7B,IAAI,CAAC,IAAI,EAAE,CAAC;YACZ,6NAAqB,AAArB,EAAsB,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;YAClD,IAAI,CAAC,MAAM,EAAE,CAAC;QAChB,CAAC;IACH,CAAC;IAED;;;;;OAKG,CACH,kBAAkB,CAAC,IAAqB,EAAE,QAAgB,CAAC,EAAA;QACzD,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,MAAM,EAAE,CAAC;YACpC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3B,CAAC;QACD,KAAK,MAAM,IAAI,oLAAI,UAAO,CAAC,SAAS,CAAE,CAAC;YACrC,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QAChD,CAAC;IACH,CAAC;IAED;;;OAGG,CACH,mBAAmB,CAAC,IAAsB,EAAA;QACxC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,UAAU,EAAE,CAAC;YACxC,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3B,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;IAC1D,CAAC;IAED;;;OAGG,CACH,uBAAuB,CAAC,IAA0B,EAAA;QAChD,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;IACtE,CAAC;IAED,sBAAsB,CAAC,OAAsB,EAAE,IAAqB,EAAE,QAAgB,CAAC,EAAA;QACrF,2CAA2C;QAE3C,4DAA4D;QAC5D,4EAA4E;QAC5E,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,KAAK,KAAK,EAAE,CAAC;yKACjF,MAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAA,8BAAA,CAAgC,CAAC,EAAE,CAAC;QACzD,CAAC;QAED,MAAM,SAAS,GAAG,0LAAO,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAElD,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;IAC5C,CAAC;IAED,qBAAqB;IAErB,oFAAA,EAAsF,CACtF,MAAM,GAAA;QACJ,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;IAC3E,CAAC;IAED,mBAAmB;IAEnB,4CAAA,EAA8C,CAC9C,mBAAmB,CAAC,OAAO,EAAA;QACzB,MAAM,EACJ,IAAI,EACJ,KAAK,EACL,MAAM,EACN,MAAM,EACN,IAAI,EACJ,MAAM,GAAA,IAAU,EAChB,IAAI,GAAA,IAAmB,EAExB,GAAG,OAAO,CAAC;QAEZ,MAAM,EAAC,EAAE,EAAC,GAAG,IAAI,CAAC;QAElB,MAAM,SAAS,GAAG,MAAM,IAAI,IAAI,CAAC;QAEjC,IAAI,CAAC,IAAI,EAAE,CAAC;QACZ,IAAI,SAAS,YAAY,OAAO,EAAE,CAAC;YACjC,SAAS,CAAC,IAAI,EAAC,iBAAiB,CAAC,EAC/B,AADiC,IAC7B,CAAC,mBAAmB,CACtB,MAAM,CAAC,MAAM,CAAC,CAAA,CAAE,EAAE,OAAO,EAAE;oBACzB,IAAI;oBACJ,IAAI,EAAE,iBAAiB;oBACvB,MAAM,EAAE,iBAAiB;iBAC1B,CAAC,CACH,CACF,CAAC;QACJ,CAAC,MAAM,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,EAAE,CAAC;YACrC,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC,SAAA,EAAW,GAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QACxF,CAAC,MAAM,CAAC;YACN,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC;IAED,gBAAgB,CAAC,QAAkC,EAAA;QACjD,IAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,mLAAG,UAAO,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,CAAE,CAAC;YAClD,MAAM,QAAQ,mLAAG,UAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YACtC,IAAI,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC;gBACvB,QAAQ,CAAC,QAAiC,CAAC,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAC;gBAClE,OAAO,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC5B,CAAC;QACH,CAAC;QACD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED,mBAAmB;IAEnB;;OAEG,CACH,qBAAqB,CAAC,UAA+B,EAAA;qKACnD,MAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAA,mBAAA,CAAqB,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,CAAC;QAEjF,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAChD,KAAK,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAE,CAAC;YACzD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAA8B,CAAC;YACzD,MAAM,KAAK,GAAG,MAAM,CAAC;YAErB,2GAA2G;YAC3G,uEAAuE;YACvE,OAAQ,KAAK,EAAE,CAAC;gBACd,KAAA,MAAwB;gBACxB,KAAA;oBACE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBACnD,MAAM;gBAER,KAAA;oBACE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBACnD,MAAM;gBAER,KAAA,MAAuB;gBACvB,KAAA;oBACE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBACnD,MAAM;gBACR,KAAA;oBACE,2CAA2C;oBAC3C,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,sCAAsC,CAAC,EAAE,CAAC;wBACrE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBACrD,CAAC;oBACD,MAAM;gBACR;oBACE,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;oBACnD,MAAM;YACV,CAAC;QACH,CAAC;QAED,IAAI,CAAC,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,mBAAmB;IAEnB;;;OAGG,CACO,YAAY,CACpB,KAAa,EACb,QAAgB,EAChB,WAA0B,EAC1B,WAAe,IAAI,CAAC,QAAQ,EAAA;QAE5B,sBAAsB;QACtB,4DAA4D;QAC5D,YAAY;QACZ,IAAI;QAEJ,mLAAI,WAAO,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC;iNACzC,8BAAA,AAA2B,EAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,WAAW,EAAE;gBACpE,GAAG,IAAI;gBACP,KAAK;gBACL,QAAQ;gBACR,QAAQ;gBACR,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;aACxB,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,mBAAmB;QACnB,oLAAI,UAAO,CAAC,kBAAkB,CAAC,WAAW,CAAC,EAAE,CAAC;iNAC5C,wBAAA,AAAqB,EAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,WAAW,CAAC,IAAI,EAAE;gBACtD,GAAG,IAAI;gBACP,KAAK;gBACL,QAAQ;gBACR,QAAQ;aACT,CAAC,CAAC;YACH,OAAO;QACT,CAAC;QAED,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;IACjD,CAAC;IACD,UAAU;IAEV,aAAa,GAAA;QACX,OAAO,IAAI,CAAC,EAAE,CAAC,YAAY,CAAA,MAAmB,GAAA,KAAc,CAAC;IAC/D,CAAC;IAED,IAAI,CAAC,WAAoB,EAAA;QACvB,MAAM,EAAC,EAAE,EAAC,GAAG,IAAI,CAAC;QAElB,IAAI,WAAW,KAAK,SAAS,EAAE,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,EAAE,CAAC,aAAa,CAAC,QAAc,WAAW,CAAC,CAAC;QAC9C,CAAC;QAED,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC3C,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,WAAoB,EAAA;QACzB,MAAM,EAAC,EAAE,EAAC,GAAG,IAAI,CAAC;QAElB,IAAI,WAAW,KAAK,SAAS,EAAE,CAAC;YAC9B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;YAC/B,EAAE,CAAC,aAAa,CAAC,QAAc,WAAW,CAAC,CAAC;QAC9C,CAAC;QAED,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QACpC,OAAO,WAAW,CAAC;IACrB,CAAC;CACF,CAED,kDAAkD;CAElD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAqDE","ignoreList":[0]}},
    {"offset": {"line": 4191, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4197, "column": 0}, "map": {"version":3,"file":"parse-shader-compiler-log.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/helpers/parse-shader-compiler-log.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {CompilerMessage} from '@luma.gl/core';\n\n/**\n * Parse a WebGL-format GLSL compilation log into an array of WebGPU style message records.\n * This follows documented WebGL conventions for compilation logs.\n * Based on https://github.com/wwwtyro/gl-format-compiler-error (public domain)\n */\nexport function parseShaderCompilerLog(errLog: string): readonly CompilerMessage[] {\n  // Parse the error - note: browser and driver dependent\n  const lines = errLog.split(/\\r?\\n/);\n\n  const messages: CompilerMessage[] = [];\n\n  for (const line of lines) {\n    if (line.length <= 1) {\n      continue; // eslint-disable-line no-continue\n    }\n\n    const segments: string[] = line.split(':');\n\n    // Check for messages with no line information `ERROR: unsupported shader version`\n    if (segments.length === 2) {\n      const [messageType, message] = segments;\n      messages.push({\n        message: message.trim(),\n        type: getMessageType(messageType),\n        lineNum: 0,\n        linePos: 0\n      });\n      continue; // eslint-disable-line no-continue\n    }\n\n    const [messageType, linePosition, lineNumber, ...rest] = segments;\n\n    let lineNum = parseInt(lineNumber, 10);\n    if (isNaN(lineNum)) {\n      lineNum = 0;\n    }\n\n    let linePos = parseInt(linePosition, 10);\n    if (isNaN(linePos)) {\n      linePos = 0;\n    }\n\n    messages.push({\n      message: rest.join(':').trim(),\n      type: getMessageType(messageType),\n      lineNum,\n      linePos // TODO\n    });\n  }\n\n  return messages;\n}\n\n/** Ensure supported type */\nfunction getMessageType(messageType: string): 'warning' | 'error' | 'info' {\n  const MESSAGE_TYPES = ['warning', 'error', 'info'];\n  const lowerCaseType = messageType.toLowerCase();\n  return (MESSAGE_TYPES.includes(lowerCaseType) ? lowerCaseType : 'info') as\n    | 'warning'\n    | 'error'\n    | 'info';\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAIpC;;;;GAIG;;;AACG,SAAU,sBAAsB,CAAC,MAAc;IACnD,uDAAuD;IACvD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IAEpC,MAAM,QAAQ,GAAsB,EAAE,CAAC;IAEvC,KAAK,MAAM,IAAI,IAAI,KAAK,CAAE,CAAC;QACzB,IAAI,IAAI,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;YACrB,SAAS,CAAC,kCAAkC;QAC9C,CAAC;QAED,MAAM,QAAQ,GAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAE3C,kFAAkF;QAClF,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;YAC1B,MAAM,CAAC,WAAW,EAAE,OAAO,CAAC,GAAG,QAAQ,CAAC;YACxC,QAAQ,CAAC,IAAI,CAAC;gBACZ,OAAO,EAAE,OAAO,CAAC,IAAI,EAAE;gBACvB,IAAI,EAAE,cAAc,CAAC,WAAW,CAAC;gBACjC,OAAO,EAAE,CAAC;gBACV,OAAO,EAAE,CAAC;aACX,CAAC,CAAC;YACH,SAAS,CAAC,kCAAkC;QAC9C,CAAC;QAED,MAAM,CAAC,WAAW,EAAE,YAAY,EAAE,UAAU,EAAE,GAAG,IAAI,CAAC,GAAG,QAAQ,CAAC;QAElE,IAAI,OAAO,GAAG,QAAQ,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;QACvC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;YACnB,OAAO,GAAG,CAAC,CAAC;QACd,CAAC;QAED,IAAI,OAAO,GAAG,QAAQ,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;QACzC,IAAI,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;YACnB,OAAO,GAAG,CAAC,CAAC;QACd,CAAC;QAED,QAAQ,CAAC,IAAI,CAAC;YACZ,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE;YAC9B,IAAI,EAAE,cAAc,CAAC,WAAW,CAAC;YACjC,OAAO;YACP,OAAO,CAAC,OAAO;SAChB,CAAC,CAAC;IACL,CAAC;IAED,OAAO,QAAQ,CAAC;AAClB,CAAC;AAED,0BAAA,EAA4B,CAC5B,SAAS,cAAc,CAAC,WAAmB;IACzC,MAAM,aAAa,GAAG;QAAC,SAAS;QAAE,OAAO;QAAE,MAAM;KAAC,CAAC;IACnD,MAAM,aAAa,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;IAChD,OAAO,AAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAG5D,CAAC;AACb,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4254, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4260, "column": 0}, "map": {"version":3,"file":"webgl-shader.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-shader.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Shader, ShaderProps, CompilerMessage, log} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {parseShaderCompilerLog} from '../helpers/parse-shader-compiler-log';\nimport {WebGLDevice} from '../webgl-device';\n\n/**\n * An immutable compiled shader program that execute portions of the GPU Pipeline\n */\nexport class WEBGLShader extends Shader {\n  readonly device: WebGLDevice;\n  readonly handle: WebGLShader;\n\n  constructor(device: WebGLDevice, props: ShaderProps) {\n    super(device, props);\n    this.device = device;\n    switch (this.props.stage) {\n      case 'vertex':\n        this.handle = this.props.handle || this.device.gl.createShader(GL.VERTEX_SHADER);\n        break;\n      case 'fragment':\n        this.handle = this.props.handle || this.device.gl.createShader(GL.FRAGMENT_SHADER);\n        break;\n      default:\n        throw new Error(this.props.stage);\n    }\n    this._compile(this.source);\n  }\n\n  override destroy(): void {\n    if (this.handle) {\n      this.removeStats();\n      this.device.gl.deleteShader(this.handle);\n      // this.handle = null;\n      this.destroyed = true;\n    }\n  }\n\n  get asyncCompilationStatus(): Promise<'pending' | 'success' | 'error'> {\n    return this._waitForCompilationComplete().then(() => this.compilationStatus);\n  }\n\n  override async getCompilationInfo(): Promise<readonly CompilerMessage[]> {\n    await this._waitForCompilationComplete();\n    return this.getCompilationInfoSync();\n  }\n\n  override getCompilationInfoSync(): readonly CompilerMessage[] {\n    const shaderLog = this.device.gl.getShaderInfoLog(this.handle);\n    return shaderLog ? parseShaderCompilerLog(shaderLog) : [];\n  }\n\n  override getTranslatedSource(): string | null {\n    const extensions = this.device.getExtension('WEBGL_debug_shaders');\n    const ext = extensions.WEBGL_debug_shaders;\n    return ext?.getTranslatedShaderSource(this.handle) || null;\n  }\n\n  // PRIVATE METHODS\n\n  /** Compile a shader and get compilation status */\n  protected async _compile(source: string): Promise<void> {\n    source = source.startsWith('#version ') ? source : `#version 300 es\\n${source}`;\n\n    const {gl} = this.device;\n    gl.shaderSource(this.handle, source);\n    gl.compileShader(this.handle);\n\n    // For performance reasons, avoid checking shader compilation errors on production\n    if (!this.device.props.debug) {\n      this.compilationStatus = 'pending';\n      return;\n    }\n\n    // Sync case - slower, but advantage is that it throws in the constructor, making break on error more useful\n    if (!this.device.features.has('compilation-status-async-webgl')) {\n      this._getCompilationStatus();\n      // The `Shader` base class will determine if debug window should be opened based on this.compilationStatus\n      this.debugShader();\n      if (this.compilationStatus === 'error') {\n        throw new Error(`GLSL compilation errors in ${this.props.stage} shader ${this.props.id}`);\n      }\n      return;\n    }\n\n    // async case\n    log.once(1, 'Shader compilation is asynchronous')();\n    await this._waitForCompilationComplete();\n    log.info(2, `Shader ${this.id} - async compilation complete: ${this.compilationStatus}`)();\n    this._getCompilationStatus();\n\n    // The `Shader` base class will determine if debug window should be opened based on this.compilationStatus\n    this.debugShader();\n  }\n\n  /** Use KHR_parallel_shader_compile extension if available */\n  protected async _waitForCompilationComplete(): Promise<void> {\n    const waitMs = async (ms: number) => await new Promise(resolve => setTimeout(resolve, ms));\n    const DELAY_MS = 10; // Shader compilation is typically quite fast (with some exceptions)\n\n    // If status polling is not available, we can't wait for completion. Just wait a little to minimize blocking\n    if (!this.device.features.has('compilation-status-async-webgl')) {\n      await waitMs(DELAY_MS);\n      return;\n    }\n\n    const {gl} = this.device;\n    for (;;) {\n      const complete = gl.getShaderParameter(this.handle, GL.COMPLETION_STATUS_KHR);\n      if (complete) {\n        return;\n      }\n      await waitMs(DELAY_MS);\n    }\n  }\n\n  /**\n   * Get the shader compilation status\n   * TODO - Load log even when no error reported, to catch warnings?\n   * https://gamedev.stackexchange.com/questions/30429/how-to-detect-glsl-warnings\n   */\n  protected _getCompilationStatus() {\n    this.compilationStatus = this.device.gl.getShaderParameter(this.handle, GL.COMPILE_STATUS)\n      ? 'success'\n      : 'error';\n  }\n}\n\n// TODO - Original code from luma.gl v8 - keep until new debug functionality has matured\n// if (!compilationSuccess) {\n//   const parsedLog = shaderLog ? parseShaderCompilerLog(shaderLog) : [];\n//   const messages = parsedLog.filter(message => message.type === 'error');\n//   const formattedLog = formatCompilerLog(messages, source, {showSourceCode: 'all', html: true});\n//   const shaderDescription = `${this.stage} shader ${shaderName}`;\n//   log.error(`GLSL compilation errors in ${shaderDescription}\\n${formattedLog}`)();\n//   displayShaderLog(parsedLog, source, shaderName);\n// }\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4383, "column": 0}, "map": {"version":3,"file":"fill-array.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/utils/fill-array.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {NumericArray} from '@math.gl/types';\n\n// Uses copyWithin to significantly speed up typed array value filling\nexport function fillArray(options: {\n  target: NumericArray;\n  source: NumericArray;\n  start?: number;\n  count?: number;\n}): NumericArray {\n  const {target, source, start = 0, count = 1} = options;\n  const length = source.length;\n  const total = count * length;\n  let copied = 0;\n  for (let i = start; copied < length; copied++) {\n    target[i++] = source[copied];\n  }\n\n  while (copied < total) {\n    // If we have copied less than half, copy everything we got\n    // else copy remaining in one operation\n    if (copied < total - copied) {\n      target.copyWithin(start + copied, start, start + copied);\n      copied *= 2;\n    } else {\n      target.copyWithin(start + copied, start, start + total - copied);\n      copied = total;\n    }\n  }\n\n  return options.target;\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;AAIpC,sEAAsE;;;;AAChE,SAAU,SAAS,CAAC,OAKzB;IACC,MAAM,EAAC,MAAM,EAAE,MAAM,EAAE,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,EAAC,GAAG,OAAO,CAAC;IACvD,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC7B,MAAM,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC;IAC7B,IAAI,MAAM,GAAG,CAAC,CAAC;IACf,IAAK,IAAI,CAAC,GAAG,KAAK,EAAE,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,CAAE,CAAC;QAC9C,MAAM,CAAC,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAC/B,CAAC;IAED,MAAO,MAAM,GAAG,KAAK,CAAE,CAAC;QACtB,2DAA2D;QAC3D,uCAAuC;QACvC,IAAI,MAAM,GAAG,KAAK,GAAG,MAAM,EAAE,CAAC;YAC5B,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,MAAM,EAAE,KAAK,EAAE,KAAK,GAAG,MAAM,CAAC,CAAC;YACzD,MAAM,IAAI,CAAC,CAAC;QACd,CAAC,MAAM,CAAC;YACN,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,MAAM,EAAE,KAAK,EAAE,KAAK,GAAG,KAAK,GAAG,MAAM,CAAC,CAAC;YACjE,MAAM,GAAG,KAAK,CAAC;QACjB,CAAC;IACH,CAAC;IAED,OAAO,OAAO,CAAC,MAAM,CAAC;AACxB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4411, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4417, "column": 0}, "map": {"version":3,"file":"webgl-vertex-array.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-vertex-array.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {TypedArray, NumericArray} from '@math.gl/types';\nimport type {Device, Buffer, VertexArrayProps} from '@luma.gl/core';\nimport {VertexArray, getScratchArray} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {getBrowser} from '@probe.gl/env';\n\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLBuffer} from '../resources/webgl-buffer';\n\nimport {getGLFromVertexType} from '../converters/vertex-formats';\nimport {fillArray} from '../../utils/fill-array';\n\n/** VertexArrayObject wrapper */\nexport class WEBGLVertexArray extends VertexArray {\n  override get [Symbol.toStringTag](): string {\n    return 'VertexArray';\n  }\n\n  readonly device: WebGLDevice;\n  readonly handle: WebGLVertexArrayObject;\n\n  /** Attribute 0 buffer constant */\n  private buffer: WEBGLBuffer | null = null;\n  private bufferValue = null;\n\n  /** * Attribute 0 can not be disable on most desktop OpenGL based browsers */\n  static isConstantAttributeZeroSupported(device: Device): boolean {\n    return getBrowser() === 'Chrome';\n  }\n\n  // Create a VertexArray\n  constructor(device: WebGLDevice, props: VertexArrayProps) {\n    super(device, props);\n    this.device = device;\n    this.handle = this.device.gl.createVertexArray()!;\n  }\n\n  override destroy(): void {\n    super.destroy();\n    if (this.buffer) {\n      this.buffer?.destroy();\n    }\n    if (this.handle) {\n      this.device.gl.deleteVertexArray(this.handle);\n      // @ts-expect-error read-only/undefined\n      this.handle = undefined!;\n    }\n\n    // Auto-delete elements?\n    // return [this.elements];\n  }\n\n  /**\n  // Set (bind/unbind) an elements buffer, for indexed rendering.\n  // Must be a Buffer bound to GL.ELEMENT_ARRAY_BUFFER or null. Constants not supported\n   *\n   * @param elementBuffer\n   */\n  setIndexBuffer(indexBuffer: Buffer | null): void {\n    const buffer = indexBuffer as WEBGLBuffer;\n    // Explicitly allow `null` to support clearing the index buffer\n    if (buffer && buffer.glTarget !== GL.ELEMENT_ARRAY_BUFFER) {\n      throw new Error('Use .setBuffer()');\n    }\n    // In WebGL The GL.ELEMENT_ARRAY_BUFFER_BINDING is stored on the VertexArrayObject\n    this.device.gl.bindVertexArray(this.handle);\n    this.device.gl.bindBuffer(GL.ELEMENT_ARRAY_BUFFER, buffer ? buffer.handle : null);\n\n    this.indexBuffer = buffer;\n\n    // Unbind to prevent unintended changes to the VAO.\n    this.device.gl.bindVertexArray(null);\n  }\n\n  /** Set a location in vertex attributes array to a buffer, enables the location, sets divisor */\n  setBuffer(location: number, attributeBuffer: Buffer): void {\n    const buffer = attributeBuffer as WEBGLBuffer;\n    // Sanity check target\n    if (buffer.glTarget === GL.ELEMENT_ARRAY_BUFFER) {\n      throw new Error('Use .setIndexBuffer()');\n    }\n\n    const {size, type, stride, offset, normalized, integer, divisor} = this._getAccessor(location);\n\n    this.device.gl.bindVertexArray(this.handle);\n    // A non-zero buffer object must be bound to the GL_ARRAY_BUFFER target\n    this.device.gl.bindBuffer(GL.ARRAY_BUFFER, buffer.handle);\n\n    // WebGL2 supports *integer* data formats, i.e. GPU will see integer values\n    if (integer) {\n      this.device.gl.vertexAttribIPointer(location, size, type, stride, offset);\n    } else {\n      // Attaches ARRAY_BUFFER with specified buffer format to location\n      this.device.gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n    }\n    // Clear binding - keeping it may cause [.WebGL-0x12804417100]\n    // GL_INVALID_OPERATION: A transform feedback buffer that would be written to is also bound to a non-transform-feedback target\n    this.device.gl.bindBuffer(GL.ARRAY_BUFFER, null);\n\n    // Mark as non-constant\n    this.device.gl.enableVertexAttribArray(location);\n    // Set the step mode 0=vertex, 1=instance\n    this.device.gl.vertexAttribDivisor(location, divisor || 0);\n\n    this.attributes[location] = buffer;\n\n    // Unbind to prevent unintended changes to the VAO.\n    this.device.gl.bindVertexArray(null);\n  }\n\n  /** Set a location in vertex attributes array to a constant value, disables the location */\n  override setConstantWebGL(location: number, value: TypedArray): void {\n    this._enable(location, false);\n    this.attributes[location] = value;\n  }\n\n  override bindBeforeRender(): void {\n    this.device.gl.bindVertexArray(this.handle);\n    this._applyConstantAttributes();\n  }\n\n  override unbindAfterRender(): void {\n    // Unbind to prevent unintended changes to the VAO.\n    this.device.gl.bindVertexArray(null);\n  }\n\n  // Internal methods\n\n  /**\n   * Constant attributes need to be reset before every draw call\n   * Any attribute that is disabled in the current vertex array object\n   * is read from the context's global constant value for that attribute location.\n   * @note Constant attributes are only supported in WebGL, not in WebGPU\n   */\n  protected _applyConstantAttributes(): void {\n    for (let location = 0; location < this.maxVertexAttributes; ++location) {\n      const constant = this.attributes[location];\n      // A typed array means this is a constant\n      if (ArrayBuffer.isView(constant)) {\n        this.device.setConstantAttributeWebGL(location, constant);\n      }\n    }\n  }\n\n  /**\n   * Set a location in vertex attributes array to a buffer, enables the location, sets divisor\n   * @note requires vertex array to be bound\n   */\n  // protected _setAttributeLayout(location: number): void {\n  //   const {size, type, stride, offset, normalized, integer, divisor} = this._getAccessor(location);\n\n  //   // WebGL2 supports *integer* data formats, i.e. GPU will see integer values\n  //   if (integer) {\n  //     this.device.gl.vertexAttribIPointer(location, size, type, stride, offset);\n  //   } else {\n  //     // Attaches ARRAY_BUFFER with specified buffer format to location\n  //     this.device.gl.vertexAttribPointer(location, size, type, normalized, stride, offset);\n  //   }\n  //   this.device.gl.vertexAttribDivisor(location, divisor || 0);\n  // }\n\n  /** Get an accessor from the  */\n  protected _getAccessor(location: number) {\n    const attributeInfo = this.attributeInfos[location];\n    if (!attributeInfo) {\n      throw new Error(`Unknown attribute location ${location}`);\n    }\n    const glType = getGLFromVertexType(attributeInfo.bufferDataType);\n    return {\n      size: attributeInfo.bufferComponents,\n      type: glType,\n      stride: attributeInfo.byteStride,\n      offset: attributeInfo.byteOffset,\n      normalized: attributeInfo.normalized,\n      // it is the shader attribute declaration, not the vertex memory format,\n      // that determines if the data in the buffer will be treated as integers.\n      //\n      // Also note that WebGL supports assigning non-normalized integer data to floating point attributes,\n      // but as far as we can tell, WebGPU does not.\n      integer: attributeInfo.integer,\n      divisor: attributeInfo.stepMode === 'instance' ? 1 : 0\n    };\n  }\n\n  /**\n   * Enabling an attribute location makes it reference the currently bound buffer\n   * Disabling an attribute location makes it reference the global constant value\n   * TODO - handle single values for size 1 attributes?\n   * TODO - convert classic arrays based on known type?\n   */\n  protected _enable(location: number, enable = true): void {\n    // Attribute 0 cannot be disabled in most desktop OpenGL based browsers...\n    const canDisableAttributeZero = WEBGLVertexArray.isConstantAttributeZeroSupported(this.device);\n    const canDisableAttribute = canDisableAttributeZero || location !== 0;\n\n    if (enable || canDisableAttribute) {\n      location = Number(location);\n      this.device.gl.bindVertexArray(this.handle);\n      if (enable) {\n        this.device.gl.enableVertexAttribArray(location);\n      } else {\n        this.device.gl.disableVertexAttribArray(location);\n      }\n      this.device.gl.bindVertexArray(null);\n    }\n  }\n\n  /**\n   * Provide a means to create a buffer that is equivalent to a constant.\n   * NOTE: Desktop OpenGL cannot disable attribute 0.\n   * https://stackoverflow.com/questions/20305231/webgl-warning-attribute-0-is-disabled-\n   * this-has-significant-performance-penalty\n   */\n  getConstantBuffer(elementCount: number, value: TypedArray): Buffer {\n    // Create buffer only when needed, and reuse it (avoids inflating buffer creation statistics)\n\n    const constantValue = normalizeConstantArrayValue(value);\n\n    const byteLength = constantValue.byteLength * elementCount;\n    const length = constantValue.length * elementCount;\n\n    if (this.buffer && byteLength !== this.buffer.byteLength) {\n      throw new Error(\n        `Buffer size is immutable, byte length ${byteLength} !== ${this.buffer.byteLength}.`\n      );\n    }\n    let updateNeeded = !this.buffer;\n\n    this.buffer = this.buffer || this.device.createBuffer({byteLength});\n\n    // Reallocate and update contents if needed\n    updateNeeded = updateNeeded || !compareConstantArrayValues(constantValue, this.bufferValue);\n\n    if (updateNeeded) {\n      // Create a typed array that is big enough, and fill it with the required data\n      const typedArray = getScratchArray(value.constructor, length);\n      fillArray({target: typedArray, source: constantValue, start: 0, count: length});\n      this.buffer.write(typedArray);\n      this.bufferValue = value;\n    }\n\n    return this.buffer;\n  }\n}\n\n// HELPER FUNCTIONS\n\n/**\n * TODO - convert Arrays based on known type? (read type from accessor, don't assume Float32Array)\n * TODO - handle single values for size 1 attributes?\n */\nfunction normalizeConstantArrayValue(arrayValue: NumericArray) {\n  if (Array.isArray(arrayValue)) {\n    return new Float32Array(arrayValue);\n  }\n  return arrayValue;\n}\n\n/**\n *\n */\nfunction compareConstantArrayValues(v1: NumericArray, v2: NumericArray): boolean {\n  if (!v1 || !v2 || v1.length !== v2.length || v1.constructor !== v2.constructor) {\n    return false;\n  }\n  for (let i = 0; i < v1.length; ++i) {\n    if (v1[i] !== v2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4648, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4654, "column": 0}, "map": {"version":3,"file":"webgl-topology-utils.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/helpers/webgl-topology-utils.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {GL, GLPrimitiveTopology, GLPrimitive} from '@luma.gl/constants';\nimport {PrimitiveTopology} from '@luma.gl/core';\n\n// Counts the number of complete primitives given a number of vertices and a drawMode\nexport function getPrimitiveDrawMode(drawMode: GLPrimitiveTopology): GLPrimitive {\n  switch (drawMode) {\n    case GL.POINTS:\n      return GL.POINTS;\n    case GL.LINES:\n      return GL.LINES;\n    case GL.LINE_STRIP:\n      return GL.LINES;\n    case GL.LINE_LOOP:\n      return GL.LINES;\n    case GL.TRIANGLES:\n      return GL.TRIANGLES;\n    case GL.TRIANGLE_STRIP:\n      return GL.TRIANGLES;\n    case GL.TRIANGLE_FAN:\n      return GL.TRIANGLES;\n    default:\n      throw new Error('drawMode');\n  }\n}\n\n// Counts the number of complete \"primitives\" given a number of vertices and a drawMode\nexport function getPrimitiveCount(options: {\n  drawMode: GLPrimitiveTopology;\n  vertexCount: number;\n}): number {\n  const {drawMode, vertexCount} = options;\n  switch (drawMode) {\n    case GL.POINTS:\n    case GL.LINE_LOOP:\n      return vertexCount;\n    case GL.LINES:\n      return vertexCount / 2;\n    case GL.LINE_STRIP:\n      return vertexCount - 1;\n    case GL.TRIANGLES:\n      return vertexCount / 3;\n    case GL.TRIANGLE_STRIP:\n    case GL.TRIANGLE_FAN:\n      return vertexCount - 2;\n    default:\n      throw new Error('drawMode');\n  }\n}\n\n// Counts the number of vertices after splitting the vertex stream into separate \"primitives\"\nexport function getVertexCount(options: {\n  drawMode: GLPrimitiveTopology;\n  vertexCount: number;\n}): number {\n  const {drawMode, vertexCount} = options;\n  const primitiveCount = getPrimitiveCount({drawMode, vertexCount});\n  switch (getPrimitiveDrawMode(drawMode)) {\n    case GL.POINTS:\n      return primitiveCount;\n    case GL.LINES:\n      return primitiveCount * 2;\n    case GL.TRIANGLES:\n      return primitiveCount * 3;\n    default:\n      throw new Error('drawMode');\n  }\n}\n\n/** Get the primitive type for draw */\nexport function getGLDrawMode(\n  topology: PrimitiveTopology\n):\n  | GL.POINTS\n  | GL.LINES\n  | GL.LINE_STRIP\n  | GL.LINE_LOOP\n  | GL.TRIANGLES\n  | GL.TRIANGLE_STRIP\n  | GL.TRIANGLE_FAN {\n  // prettier-ignore\n  switch (topology) {\n    case 'point-list': return GL.POINTS;\n    case 'line-list': return GL.LINES;\n    case 'line-strip': return GL.LINE_STRIP;\n    case 'triangle-list': return GL.TRIANGLES;\n    case 'triangle-strip': return GL.TRIANGLE_STRIP;\n    default: throw new Error(topology);\n  }\n}\n\n/** Get the primitive type for transform feedback */\nexport function getGLPrimitive(topology: PrimitiveTopology): GL.POINTS | GL.LINES | GL.TRIANGLES {\n  // prettier-ignore\n  switch (topology) {\n    case 'point-list': return GL.POINTS;\n    case 'line-list': return GL.LINES;\n    case 'line-strip': return GL.LINES;\n    case 'triangle-list': return GL.TRIANGLES;\n    case 'triangle-strip': return GL.TRIANGLES;\n    default: throw new Error(topology);\n  }\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;;;;;;AAM9B,SAAU,oBAAoB,CAAC,QAA6B;IAChE,OAAQ,QAAQ,EAAE,CAAC;QACjB,KAAA;YACE,OAAA,EAAiB;QACnB,KAAA;YACE,OAAA,EAAgB;QAClB,KAAA;YACE,OAAA,EAAgB;QAClB,KAAA;YACE,OAAA,EAAgB;QAClB,KAAA;YACE,OAAA,EAAoB;QACtB,KAAA;YACE,OAAA,EAAoB;QACtB,KAAA;YACE,OAAA,EAAoB;QACtB;YACE,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;AACH,CAAC;AAGK,SAAU,iBAAiB,CAAC,OAGjC;IACC,MAAM,EAAC,QAAQ,EAAE,WAAW,EAAC,GAAG,OAAO,CAAC;IACxC,OAAQ,QAAQ,EAAE,CAAC;QACjB,KAAA,EAAe;QACf,KAAA;YACE,OAAO,WAAW,CAAC;QACrB,KAAA;YACE,OAAO,WAAW,GAAG,CAAC,CAAC;QACzB,KAAA;YACE,OAAO,WAAW,GAAG,CAAC,CAAC;QACzB,KAAA;YACE,OAAO,WAAW,GAAG,CAAC,CAAC;QACzB,KAAA,EAAuB;QACvB,KAAA;YACE,OAAO,WAAW,GAAG,CAAC,CAAC;QACzB;YACE,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;AACH,CAAC;AAGK,SAAU,cAAc,CAAC,OAG9B;IACC,MAAM,EAAC,QAAQ,EAAE,WAAW,EAAC,GAAG,OAAO,CAAC;IACxC,MAAM,cAAc,GAAG,iBAAiB,CAAC;QAAC,QAAQ;QAAE,WAAW;IAAA,CAAC,CAAC,CAAC;IAClE,OAAQ,oBAAoB,CAAC,QAAQ,CAAC,EAAE,CAAC;QACvC,KAAA;YACE,OAAO,cAAc,CAAC;QACxB,KAAA;YACE,OAAO,cAAc,GAAG,CAAC,CAAC;QAC5B,KAAA;YACE,OAAO,cAAc,GAAG,CAAC,CAAC;QAC5B;YACE,MAAM,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;IAChC,CAAC;AACH,CAAC;AAGK,SAAU,aAAa,CAC3B,QAA2B;IAS3B,kBAAkB;IAClB,OAAQ,QAAQ,EAAE,CAAC;QACjB,KAAK,YAAY,CAAC;YAAC,OAAA,EAAiB;QACpC,KAAK,WAAW,CAAC;YAAC,OAAA,EAAgB;QAClC,KAAK,YAAY,CAAC;YAAC,OAAA,EAAqB;QACxC,KAAK,eAAe,CAAC;YAAC,OAAA,EAAoB;QAC1C,KAAK,gBAAgB,CAAC;YAAC,OAAA,EAAyB;QAChD,OAAO,CAAC;YAAC,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;AACH,CAAC;AAGK,SAAU,cAAc,CAAC,QAA2B;IACxD,kBAAkB;IAClB,OAAQ,QAAQ,EAAE,CAAC;QACjB,KAAK,YAAY,CAAC;YAAC,OAAA,EAAiB;QACpC,KAAK,WAAW,CAAC;YAAC,OAAA,EAAgB;QAClC,KAAK,YAAY,CAAC;YAAC,OAAA,EAAgB;QACnC,KAAK,eAAe,CAAC;YAAC,OAAA,EAAoB;QAC1C,KAAK,gBAAgB,CAAC;YAAC,OAAA,EAAoB;QAC3C,OAAO,CAAC;YAAC,MAAM,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAC;IACrC,CAAC;AACH,CAAC","ignoreList":[0]}},
    {"offset": {"line": 4755, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4761, "column": 0}, "map": {"version":3,"file":"webgl-transform-feedback.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-transform-feedback.ts"],"sourcesContent":["import type {PrimitiveTopology, ShaderLayout, TransformFeedbackProps} from '@luma.gl/core';\nimport {log, TransformFeedback, Buffer, BufferRange} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLBuffer} from '../../index';\nimport {getGLPrimitive} from '../helpers/webgl-topology-utils';\n\nexport class WEBGLTransformFeedback extends TransformFeedback {\n  readonly device: WebGLDevice;\n  readonly gl: WebGL2RenderingContext;\n  readonly handle: WebGLTransformFeedback;\n\n  /**\n   * NOTE: The Model already has this information while drawing, but\n   * TransformFeedback currently needs it internally, to look up\n   * varying information outside of a draw() call.\n   */\n  readonly layout: ShaderLayout;\n  buffers: Record<string, BufferRange> = {};\n  unusedBuffers: Record<string, Buffer> = {};\n  /**\n   * Allows us to avoid a Chrome bug where a buffer that is already bound to a\n   * different target cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n   * This a major workaround, see: https://github.com/KhronosGroup/WebGL/issues/2346\n   */\n  bindOnUse = true;\n  private _bound: boolean = false;\n\n  constructor(device: WebGLDevice, props: TransformFeedbackProps) {\n    super(device, props);\n\n    this.device = device;\n    this.gl = device.gl;\n    this.handle = this.props.handle || this.gl.createTransformFeedback();\n    this.layout = this.props.layout;\n\n    if (props.buffers) {\n      this.setBuffers(props.buffers);\n    }\n\n    Object.seal(this);\n  }\n\n  override destroy(): void {\n    this.gl.deleteTransformFeedback(this.handle);\n    super.destroy();\n  }\n\n  begin(topology: PrimitiveTopology = 'point-list'): void {\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n    if (this.bindOnUse) {\n      this._bindBuffers();\n    }\n    this.gl.beginTransformFeedback(getGLPrimitive(topology));\n  }\n\n  end(): void {\n    this.gl.endTransformFeedback();\n    if (this.bindOnUse) {\n      this._unbindBuffers();\n    }\n    this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n  }\n\n  // SUBCLASS\n\n  setBuffers(buffers: Record<string, Buffer | BufferRange>): void {\n    this.buffers = {};\n    this.unusedBuffers = {};\n\n    this.bind(() => {\n      for (const bufferName in buffers) {\n        this.setBuffer(bufferName, buffers[bufferName]);\n      }\n    });\n  }\n\n  setBuffer(locationOrName: string | number, bufferOrRange: Buffer | BufferRange): void {\n    const location = this._getVaryingIndex(locationOrName);\n    const {buffer, byteLength, byteOffset} = this._getBufferRange(bufferOrRange);\n\n    if (location < 0) {\n      this.unusedBuffers[locationOrName] = buffer;\n      log.warn(`${this.id} unusedBuffers varying buffer ${locationOrName}`)();\n      return;\n    }\n\n    this.buffers[location] = {buffer, byteLength, byteOffset};\n\n    // Need to avoid chrome bug where buffer that is already bound to a different target\n    // cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n    if (!this.bindOnUse) {\n      this._bindBuffer(location, buffer, byteOffset, byteLength);\n    }\n  }\n\n  getBuffer(locationOrName: string | number): Buffer | BufferRange | null {\n    if (isIndex(locationOrName)) {\n      return this.buffers[locationOrName] || null;\n    }\n    const location = this._getVaryingIndex(locationOrName);\n    return location >= 0 ? this.buffers[location] : null;\n  }\n\n  bind(funcOrHandle = this.handle) {\n    if (typeof funcOrHandle !== 'function') {\n      this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, funcOrHandle);\n      return this;\n    }\n\n    let value: unknown;\n\n    if (!this._bound) {\n      this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, this.handle);\n      this._bound = true;\n      value = funcOrHandle();\n      this._bound = false;\n      this.gl.bindTransformFeedback(GL.TRANSFORM_FEEDBACK, null);\n    } else {\n      value = funcOrHandle();\n    }\n\n    return value;\n  }\n\n  unbind() {\n    this.bind(null);\n  }\n\n  // PRIVATE METHODS\n\n  /** Extract offsets for bindBufferRange */\n  protected _getBufferRange(\n    bufferOrRange: Buffer | {buffer: Buffer; byteOffset?: number; byteLength?: number}\n  ): Required<BufferRange> {\n    if (bufferOrRange instanceof WEBGLBuffer) {\n      return {buffer: bufferOrRange, byteOffset: 0, byteLength: bufferOrRange.byteLength};\n    }\n\n    // To use bindBufferRange either offset or size must be specified.\n    // @ts-expect-error Must be a BufferRange.\n    const {buffer, byteOffset = 0, byteLength = bufferOrRange.buffer.byteLength} = bufferOrRange;\n    return {buffer, byteOffset, byteLength};\n  }\n\n  protected _getVaryingIndex(locationOrName: string | number): number {\n    if (isIndex(locationOrName)) {\n      return Number(locationOrName);\n    }\n\n    for (const varying of this.layout.varyings) {\n      if (locationOrName === varying.name) {\n        return varying.location;\n      }\n    }\n\n    return -1;\n  }\n\n  /**\n   * Need to avoid chrome bug where buffer that is already bound to a different target\n   * cannot be bound to 'TRANSFORM_FEEDBACK_BUFFER' target.\n   */\n  protected _bindBuffers(): void {\n    for (const bufferIndex in this.buffers) {\n      const {buffer, byteLength, byteOffset} = this._getBufferRange(this.buffers[bufferIndex]);\n      this._bindBuffer(Number(bufferIndex), buffer, byteOffset, byteLength);\n    }\n  }\n\n  protected _unbindBuffers(): void {\n    for (const bufferIndex in this.buffers) {\n      this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER, Number(bufferIndex), null);\n    }\n  }\n\n  protected _bindBuffer(index: number, buffer: Buffer, byteOffset = 0, byteLength?: number): void {\n    const handle = buffer && (buffer as WEBGLBuffer).handle;\n    if (!handle || byteLength === undefined) {\n      this.gl.bindBufferBase(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle);\n    } else {\n      this.gl.bindBufferRange(GL.TRANSFORM_FEEDBACK_BUFFER, index, handle, byteOffset, byteLength);\n    }\n  }\n}\n\n/**\n * Returns true if the given value is an integer, or a string that\n * trivially converts to an integer (only numeric characters).\n */\nfunction isIndex(value: string | number): boolean {\n  if (typeof value === 'number') {\n    return Number.isInteger(value);\n  }\n  return /^\\d+$/.test(value);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4935, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4941, "column": 0}, "map": {"version":3,"file":"webgl-query-set.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-query-set.ts"],"sourcesContent":["// WebGL2 Query (also handles disjoint timer extensions)\nimport {QuerySet, QuerySetProps} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\nimport {WebGLDevice} from '../webgl-device';\n\n/**\n * Asynchronous queries for different kinds of information\n */\nexport class WEBGLQuerySet extends QuerySet {\n  device: WebGLDevice;\n  handle: WebGLQuery;\n\n  target: number | null = null;\n  _queryPending = false;\n  _pollingPromise: Promise<any> | null = null;\n\n  override get [Symbol.toStringTag](): string {\n    return 'Query';\n  }\n\n  // Create a query class\n  constructor(device: WebGLDevice, props: QuerySetProps) {\n    super(device, props);\n    this.device = device;\n\n    if (props.count > 1) {\n      throw new Error('WebGL QuerySet can only have one value');\n    }\n\n    this.handle = this.device.gl.createQuery();\n    Object.seal(this);\n  }\n\n  override destroy() {\n    this.device.gl.deleteQuery(this.handle);\n  }\n\n  // FOR RENDER PASS AND COMMAND ENCODER\n\n  /**\n   * Shortcut for timer query (dependent on extension in both WebGL1 and 2)\n   * Measures GPU time delta between this call and a matching `end` call in the\n   * GPU instruction stream.\n   */\n  beginTimestampQuery(): void {\n    return this._begin(GL.TIME_ELAPSED_EXT);\n  }\n\n  endTimestampQuery(): void {\n    this._end();\n  }\n\n  // Shortcut for occlusion queries\n  beginOcclusionQuery(options?: {conservative?: boolean}): void {\n    return this._begin(\n      options?.conservative ? GL.ANY_SAMPLES_PASSED_CONSERVATIVE : GL.ANY_SAMPLES_PASSED\n    );\n  }\n\n  endOcclusionQuery() {\n    this._end();\n  }\n\n  // Shortcut for transformFeedbackQuery\n  beginTransformFeedbackQuery(): void {\n    return this._begin(GL.TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN);\n  }\n\n  endTransformFeedbackQuery(): void {\n    this._end();\n  }\n\n  async resolveQuery(): Promise<bigint[]> {\n    const value = await this.pollQuery();\n    return [value];\n  }\n\n  // PRIVATE METHODS\n\n  /**\n   * Due to OpenGL API limitations, after calling `begin()` on one Query\n   * instance, `end()` must be called on that same instance before\n   * calling `begin()` on another query. While there can be multiple\n   * outstanding queries representing disjoint `begin()`/`end()` intervals.\n   * It is not possible to interleave or overlap `begin` and `end` calls.\n   */\n  protected _begin(target: number): void {\n    // Don't start a new query if one is already active.\n    if (this._queryPending) {\n      return;\n    }\n\n    this.target = target;\n    this.device.gl.beginQuery(this.target, this.handle);\n\n    return;\n  }\n\n  // ends the current query\n  protected _end(): void {\n    // Can't end a new query if the last one hasn't been resolved.\n    if (this._queryPending) {\n      return;\n    }\n\n    if (this.target) {\n      this.device.gl.endQuery(this.target);\n      this.target = null;\n      this._queryPending = true;\n    }\n    return;\n  }\n\n  // Returns true if the query result is available\n  isResultAvailable(): boolean {\n    if (!this._queryPending) {\n      return false;\n    }\n\n    const resultAvailable = this.device.gl.getQueryParameter(\n      this.handle,\n      GL.QUERY_RESULT_AVAILABLE\n    );\n    if (resultAvailable) {\n      this._queryPending = false;\n    }\n    return resultAvailable;\n  }\n\n  // Timing query is disjoint, i.e. results are invalid\n  isTimerDisjoint(): boolean {\n    return this.device.gl.getParameter(GL.GPU_DISJOINT_EXT);\n  }\n\n  // Returns query result.\n  getResult(): any {\n    return this.device.gl.getQueryParameter(this.handle, GL.QUERY_RESULT);\n  }\n\n  // Returns the query result, converted to milliseconds to match JavaScript conventions.\n  getTimerMilliseconds() {\n    return this.getResult() / 1e6;\n  }\n\n  // Polls the query\n  pollQuery(limit: number = Number.POSITIVE_INFINITY): Promise<any> {\n    if (this._pollingPromise) {\n      return this._pollingPromise;\n    }\n\n    let counter = 0;\n\n    this._pollingPromise = new Promise((resolve, reject) => {\n      const poll = () => {\n        if (this.isResultAvailable()) {\n          resolve(this.getResult());\n          this._pollingPromise = null;\n        } else if (counter++ > limit) {\n          reject('Timed out');\n          this._pollingPromise = null;\n        } else {\n          requestAnimationFrame(poll);\n        }\n      };\n\n      requestAnimationFrame(poll);\n    });\n\n    return this._pollingPromise;\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5076, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5082, "column": 0}, "map": {"version":3,"file":"decode-webgl-types.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/helpers/decode-webgl-types.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {ShaderUniformType, ShaderAttributeType, VertexFormat} from '@luma.gl/core';\nimport {GL, GLUniformType, GLSamplerType, GLCompositeType, GLDataType} from '@luma.gl/constants';\n\n/** Check is uniform is of sampler type */\nexport function isSamplerUniform(type: GLUniformType): boolean {\n  return SAMPLER_TYPES.includes(type as GLSamplerType);\n}\n\nconst SAMPLER_TYPES: GLSamplerType[] = [\n  GL.SAMPLER_2D,\n  GL.SAMPLER_CUBE,\n  GL.SAMPLER_3D,\n  GL.SAMPLER_2D_SHADOW,\n  GL.SAMPLER_2D_ARRAY,\n  GL.SAMPLER_2D_ARRAY_SHADOW,\n  GL.SAMPLER_CUBE_SHADOW,\n  GL.INT_SAMPLER_2D,\n  GL.INT_SAMPLER_3D,\n  GL.INT_SAMPLER_CUBE,\n  GL.INT_SAMPLER_2D_ARRAY,\n  GL.UNSIGNED_INT_SAMPLER_2D,\n  GL.UNSIGNED_INT_SAMPLER_3D,\n  GL.UNSIGNED_INT_SAMPLER_CUBE,\n  GL.UNSIGNED_INT_SAMPLER_2D_ARRAY\n];\n\n// Composite types table\nconst COMPOSITE_GL_TYPES: Record<\n  GLCompositeType,\n  [GLDataType, number, string, ShaderUniformType, VertexFormat?]\n> = {\n  [GL.FLOAT]: [GL.FLOAT, 1, 'float', 'f32', 'float32'],\n  [GL.FLOAT_VEC2]: [GL.FLOAT, 2, 'vec2', 'vec2<f32>', 'float32x2'],\n  [GL.FLOAT_VEC3]: [GL.FLOAT, 3, 'vec3', 'vec3<f32>', 'float32x3'],\n  [GL.FLOAT_VEC4]: [GL.FLOAT, 4, 'vec4', 'vec4<f32>', 'float32x4'],\n\n  [GL.INT]: [GL.INT, 1, 'int', 'i32', 'sint32'],\n  [GL.INT_VEC2]: [GL.INT, 2, 'ivec2', 'vec2<i32>', 'sint32x2'],\n  [GL.INT_VEC3]: [GL.INT, 3, 'ivec3', 'vec3<i32>', 'sint32x3'],\n  [GL.INT_VEC4]: [GL.INT, 4, 'ivec4', 'vec4<i32>', 'sint32x4'],\n\n  [GL.UNSIGNED_INT]: [GL.UNSIGNED_INT, 1, 'uint', 'u32', 'uint32'],\n  [GL.UNSIGNED_INT_VEC2]: [GL.UNSIGNED_INT, 2, 'uvec2', 'vec2<u32>', 'uint32x2'],\n  [GL.UNSIGNED_INT_VEC3]: [GL.UNSIGNED_INT, 3, 'uvec3', 'vec3<u32>', 'uint32x3'],\n  [GL.UNSIGNED_INT_VEC4]: [GL.UNSIGNED_INT, 4, 'uvec4', 'vec4<u32>', 'uint32x4'],\n\n  [GL.BOOL]: [GL.FLOAT, 1, 'bool', 'f32', 'float32'],\n  [GL.BOOL_VEC2]: [GL.FLOAT, 2, 'bvec2', 'vec2<f32>', 'float32x2'],\n  [GL.BOOL_VEC3]: [GL.FLOAT, 3, 'bvec3', 'vec3<f32>', 'float32x3'],\n  [GL.BOOL_VEC4]: [GL.FLOAT, 4, 'bvec4', 'vec4<f32>', 'float32x4'],\n\n  // TODO - are sizes/components below correct?\n  [GL.FLOAT_MAT2]: [GL.FLOAT, 8, 'mat2', 'mat2x2<f32>'], // 4\n  [GL.FLOAT_MAT2x3]: [GL.FLOAT, 8, 'mat2x3', 'mat2x3<f32>'], // 6\n  [GL.FLOAT_MAT2x4]: [GL.FLOAT, 8, 'mat2x4', 'mat2x4<f32>'], // 8\n\n  [GL.FLOAT_MAT3x2]: [GL.FLOAT, 12, 'mat3x2', 'mat3x2<f32>'], // 6\n  [GL.FLOAT_MAT3]: [GL.FLOAT, 12, 'mat3', 'mat3x3<f32>'], // 9\n  [GL.FLOAT_MAT3x4]: [GL.FLOAT, 12, 'mat3x4', 'mat3x4<f32>'], // 12\n\n  [GL.FLOAT_MAT4x2]: [GL.FLOAT, 16, 'mat4x2', 'mat4x2<f32>'], // 8\n  [GL.FLOAT_MAT4x3]: [GL.FLOAT, 16, 'mat4x3', 'mat4x3<f32>'], // 12\n  [GL.FLOAT_MAT4]: [GL.FLOAT, 16, 'mat4', 'mat4x4<f32>'] // 16\n};\n\n/** Decomposes a composite type (GL.VEC3) into a basic type (GL.FLOAT) and components (3) */\nexport function decodeGLUniformType(glUniformType: GL): {\n  format: ShaderUniformType;\n  components: number;\n  glType: GLDataType;\n} {\n  const typeAndSize = COMPOSITE_GL_TYPES[glUniformType];\n  if (!typeAndSize) {\n    throw new Error('uniform');\n  }\n  const [glType, components, , format] = typeAndSize;\n  return {format, components, glType};\n}\n\n/** Decomposes a composite type (GL.VEC3) into a basic type (GL.FLOAT) and components (3) */\nexport function decodeGLAttributeType(glAttributeType: GL): {\n  attributeType: ShaderAttributeType;\n  vertexFormat: VertexFormat;\n  components: number;\n  // glType: GLDataType;\n} {\n  const typeAndSize = COMPOSITE_GL_TYPES[glAttributeType];\n  if (!typeAndSize) {\n    throw new Error('attribute');\n  }\n  const [, components, , shaderType, vertexFormat] = typeAndSize;\n  // TODO sanity - if (shaderType.startsWith('mat' ...))\n  const attributeType = shaderType as unknown as ShaderAttributeType;\n  return {attributeType, vertexFormat, components}; // , glType};\n}\n\n/** Decomposes a composite type GL.VEC3 into a basic type (GL.FLOAT) and components (3) */\nexport function decomposeCompositeGLDataType(\n  compositeGLDataType: GLCompositeType\n): {type: GLDataType; components: number} | null {\n  const typeAndSize = COMPOSITE_GL_TYPES[compositeGLDataType];\n  if (!typeAndSize) {\n    return null;\n  }\n  const [type, components] = typeAndSize;\n  return {type, components};\n}\n\nexport function getCompositeGLDataType(\n  type: GL,\n  components\n): {glType: GLDataType; name: string} | null {\n  switch (type) {\n    case GL.BYTE:\n    case GL.UNSIGNED_BYTE:\n    case GL.SHORT:\n    case GL.UNSIGNED_SHORT:\n      type = GL.FLOAT;\n      break;\n    default:\n  }\n\n  for (const glType in COMPOSITE_GL_TYPES) {\n    const [compType, compComponents, name] = COMPOSITE_GL_TYPES[glType];\n    if (compType === type && compComponents === components) {\n      return {glType: Number(glType), name};\n    }\n  }\n  return null;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5341, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5347, "column": 0}, "map": {"version":3,"file":"get-shader-layout.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/helpers/get-shader-layout.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  ShaderLayout,\n  UniformBinding,\n  UniformBlockBinding,\n  AttributeDeclaration,\n  VaryingBinding\n} from '@luma.gl/core';\n\nimport {GL} from '@luma.gl/constants';\nimport {decodeGLUniformType, decodeGLAttributeType, isSamplerUniform} from './decode-webgl-types';\n\n/**\n * Extract metadata describing binding information for a program's shaders\n * Note: `linkProgram()` needs to have been called\n * (although linking does not need to have been successful).\n */\nexport function getShaderLayoutFromGLSL(\n  gl: WebGL2RenderingContext,\n  program: WebGLProgram\n): ShaderLayout {\n  const shaderLayout: ShaderLayout = {\n    attributes: [],\n    bindings: []\n  };\n\n  shaderLayout.attributes = readAttributeDeclarations(gl, program);\n\n  // Uniform blocks\n  const uniformBlocks: UniformBlockBinding[] = readUniformBlocks(gl, program);\n  for (const uniformBlock of uniformBlocks) {\n    const uniforms = uniformBlock.uniforms.map(uniform => ({\n      name: uniform.name,\n      format: uniform.format,\n      byteOffset: uniform.byteOffset,\n      byteStride: uniform.byteStride,\n      arrayLength: uniform.arrayLength\n    }));\n    shaderLayout.bindings.push({\n      type: 'uniform',\n      name: uniformBlock.name,\n      group: 0,\n      location: uniformBlock.location,\n      visibility: (uniformBlock.vertex ? 0x1 : 0) & (uniformBlock.fragment ? 0x2 : 0),\n      minBindingSize: uniformBlock.byteLength,\n      uniforms\n    });\n  }\n\n  const uniforms: UniformBinding[] = readUniformBindings(gl, program);\n  let textureUnit = 0;\n  for (const uniform of uniforms) {\n    if (isSamplerUniform(uniform.type)) {\n      const {viewDimension, sampleType} = getSamplerInfo(uniform.type);\n      shaderLayout.bindings.push({\n        type: 'texture',\n        name: uniform.name,\n        group: 0,\n        location: textureUnit,\n        viewDimension,\n        sampleType\n      });\n\n      // @ts-expect-error\n      uniform.textureUnit = textureUnit;\n      textureUnit += 1;\n    }\n  }\n\n  if (uniforms.length) {\n    shaderLayout.uniforms = uniforms;\n  }\n\n  // Varyings\n  const varyings: VaryingBinding[] = readVaryings(gl, program);\n  // Note - samplers are always in unform bindings, even if uniform blocks are used\n  if (varyings?.length) {\n    shaderLayout.varyings = varyings;\n  }\n\n  return shaderLayout;\n}\n\n// HELPERS\n\n/**\n * Extract info about all transform feedback varyings\n *\n * linkProgram needs to have been called, although linking does not need to have been successful\n */\nfunction readAttributeDeclarations(\n  gl: WebGL2RenderingContext,\n  program: WebGLProgram\n): AttributeDeclaration[] {\n  const attributes: AttributeDeclaration[] = [];\n\n  const count = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n  for (let index = 0; index < count; index++) {\n    const activeInfo = gl.getActiveAttrib(program, index);\n    if (!activeInfo) {\n      throw new Error('activeInfo');\n    }\n    const {name, type: compositeType /* , size*/} = activeInfo;\n    const location = gl.getAttribLocation(program, name);\n    // Add only user provided attributes, for built-in attributes like `gl_InstanceID` location will be < 0\n    if (location >= 0) {\n      const {attributeType} = decodeGLAttributeType(compositeType);\n\n      // Whether an attribute is instanced is essentially fixed by the structure of the shader code,\n      // so it is arguably a static property of the shader.\n      // There is no hint in the shader declarations\n      // Heuristic: Any attribute name containing the word \"instance\" will be assumed to be instanced\n      const stepMode = /instance/i.test(name) ? 'instance' : 'vertex';\n\n      attributes.push({\n        name,\n        location,\n        stepMode,\n        type: attributeType\n        // size - for arrays, size is the number of elements in the array\n      });\n    }\n  }\n\n  // Sort by declaration order\n  attributes.sort((a: AttributeDeclaration, b: AttributeDeclaration) => a.location - b.location);\n  return attributes;\n}\n\n/**\n * Extract info about all transform feedback varyings\n *\n * linkProgram needs to have been called, although linking does not need to have been successful\n */\nfunction readVaryings(gl: WebGL2RenderingContext, program: WebGLProgram): VaryingBinding[] {\n  const varyings: VaryingBinding[] = [];\n\n  const count = gl.getProgramParameter(program, GL.TRANSFORM_FEEDBACK_VARYINGS);\n  for (let location = 0; location < count; location++) {\n    const activeInfo = gl.getTransformFeedbackVarying(program, location);\n    if (!activeInfo) {\n      throw new Error('activeInfo');\n    }\n    const {name, type: compositeType, size} = activeInfo;\n    const {glType, components} = decodeGLUniformType(compositeType);\n    const varying = {location, name, type: glType, size: size * components}; // Base values\n    varyings.push(varying);\n  }\n\n  varyings.sort((a, b) => a.location - b.location);\n  return varyings;\n}\n\n/**\n * Extract info about all uniforms\n *\n * Query uniform locations and build name to setter map.\n */\nfunction readUniformBindings(gl: WebGL2RenderingContext, program: WebGLProgram): UniformBinding[] {\n  const uniforms: UniformBinding[] = [];\n\n  const uniformCount = gl.getProgramParameter(program, GL.ACTIVE_UNIFORMS);\n  for (let i = 0; i < uniformCount; i++) {\n    const activeInfo = gl.getActiveUniform(program, i);\n    if (!activeInfo) {\n      throw new Error('activeInfo');\n    }\n    const {name: rawName, size, type} = activeInfo;\n    const {name, isArray} = parseUniformName(rawName);\n    let webglLocation = gl.getUniformLocation(program, name);\n    const uniformInfo = {\n      // WebGL locations are uniquely typed but just numbers\n      location: webglLocation as number,\n      name,\n      size,\n      type,\n      isArray\n    };\n    uniforms.push(uniformInfo);\n\n    // Array (e.g. matrix) uniforms can occupy several 4x4 byte banks\n    if (uniformInfo.size > 1) {\n      for (let j = 0; j < uniformInfo.size; j++) {\n        const elementName = `${name}[${j}]`;\n\n        webglLocation = gl.getUniformLocation(program, elementName);\n\n        const arrayElementUniformInfo = {\n          ...uniformInfo,\n          name: elementName,\n          location: webglLocation as number\n        };\n\n        uniforms.push(arrayElementUniformInfo);\n      }\n    }\n  }\n  return uniforms;\n}\n\n/**\n * Extract info about all \"active\" uniform blocks\n * @note In WebGL, \"active\" just means that unused (inactive) blocks may have been optimized away during linking)\n */\nfunction readUniformBlocks(\n  gl: WebGL2RenderingContext,\n  program: WebGLProgram\n): UniformBlockBinding[] {\n  const getBlockParameter = (blockIndex: number, pname: GL): any =>\n    gl.getActiveUniformBlockParameter(program, blockIndex, pname);\n\n  const uniformBlocks: UniformBlockBinding[] = [];\n\n  const blockCount = gl.getProgramParameter(program, GL.ACTIVE_UNIFORM_BLOCKS);\n  for (let blockIndex = 0; blockIndex < blockCount; blockIndex++) {\n    const blockInfo: UniformBlockBinding = {\n      name: gl.getActiveUniformBlockName(program, blockIndex) || '',\n      location: getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_BINDING),\n      byteLength: getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_DATA_SIZE),\n      vertex: getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n      fragment: getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n      uniformCount: getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_ACTIVE_UNIFORMS),\n      uniforms: [] as any[]\n    };\n\n    const uniformIndices =\n      (getBlockParameter(blockIndex, GL.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES) as number[]) || [];\n\n    const uniformType = gl.getActiveUniforms(program, uniformIndices, GL.UNIFORM_TYPE); // Array of GLenum indicating the types of the uniforms.\n    const uniformArrayLength = gl.getActiveUniforms(program, uniformIndices, GL.UNIFORM_SIZE); // Array of GLuint indicating the sizes of the uniforms.\n    // const uniformBlockIndex = gl.getActiveUniforms(\n    //   program,\n    //   uniformIndices,\n    //   GL.UNIFORM_BLOCK_INDEX\n    // ); // Array of GLint indicating the block indices of the uniforms.\n    const uniformOffset = gl.getActiveUniforms(program, uniformIndices, GL.UNIFORM_OFFSET); // Array of GLint indicating the uniform buffer offsets.\n    const uniformStride = gl.getActiveUniforms(program, uniformIndices, GL.UNIFORM_ARRAY_STRIDE); // Array of GLint indicating the strides between the elements.\n    // const uniformMatrixStride = gl.getActiveUniforms(\n    //   program,\n    //   uniformIndices,\n    //   GL.UNIFORM_MATRIX_STRIDE\n    // ); // Array of GLint indicating the strides between columns of a column-major matrix or a row-major matrix.\n    // const uniformRowMajor = gl.getActiveUniforms(program, uniformIndices, GL.UNIFORM_IS_ROW_MAJOR);\n    for (let i = 0; i < blockInfo.uniformCount; ++i) {\n      const activeInfo = gl.getActiveUniform(program, uniformIndices[i]);\n      if (!activeInfo) {\n        throw new Error('activeInfo');\n      }\n\n      blockInfo.uniforms.push({\n        name: activeInfo.name,\n        format: decodeGLUniformType(uniformType[i]).format,\n        type: uniformType[i],\n        arrayLength: uniformArrayLength[i],\n        byteOffset: uniformOffset[i],\n        byteStride: uniformStride[i]\n        // matrixStride: uniformStride[i],\n        // rowMajor: uniformRowMajor[i]\n      });\n    }\n\n    uniformBlocks.push(blockInfo);\n  }\n\n  uniformBlocks.sort((a, b) => a.location - b.location);\n  return uniformBlocks;\n}\n\n/**\n * TOOD - compare with a above, confirm copy, then delete\n  const bindings: Binding[] = [];\n  const count = gl.getProgramParameter(program, gl.ACTIVE_UNIFORM_BLOCKS);\n  for (let blockIndex = 0; blockIndex < count; blockIndex++) {\n    const vertex = gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER),\n    const fragment = gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER),\n    const visibility = (vertex) + (fragment);\n    const binding: BufferBinding = {\n      location: gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_BINDING),\n      // name: gl.getActiveUniformBlockName(program, blockIndex),\n      type: 'uniform',\n      visibility,\n      minBindingSize: gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_DATA_SIZE),\n      // uniformCount: gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_ACTIVE_UNIFORMS),\n      // uniformIndices: gl.getActiveUniformBlockParameter(program, blockIndex, gl.UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES),\n    }\n    bindings.push(binding);\n  }\n*/\n\nconst SAMPLER_UNIFORMS_GL_TO_GPU: Record<\n  number,\n  [\n    '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d',\n    'float' | 'unfilterable-float' | 'depth' | 'sint' | 'uint'\n  ]\n> = {\n  [GL.SAMPLER_2D]: ['2d', 'float'],\n  [GL.SAMPLER_CUBE]: ['cube', 'float'],\n  [GL.SAMPLER_3D]: ['3d', 'float'],\n  [GL.SAMPLER_2D_SHADOW]: ['3d', 'depth'],\n  [GL.SAMPLER_2D_ARRAY]: ['2d-array', 'float'],\n  [GL.SAMPLER_2D_ARRAY_SHADOW]: ['2d-array', 'depth'],\n  [GL.SAMPLER_CUBE_SHADOW]: ['cube', 'float'],\n  [GL.INT_SAMPLER_2D]: ['2d', 'sint'],\n  [GL.INT_SAMPLER_3D]: ['3d', 'sint'],\n  [GL.INT_SAMPLER_CUBE]: ['cube', 'sint'],\n  [GL.INT_SAMPLER_2D_ARRAY]: ['2d-array', 'uint'],\n  [GL.UNSIGNED_INT_SAMPLER_2D]: ['2d', 'uint'],\n  [GL.UNSIGNED_INT_SAMPLER_3D]: ['3d', 'uint'],\n  [GL.UNSIGNED_INT_SAMPLER_CUBE]: ['cube', 'uint'],\n  [GL.UNSIGNED_INT_SAMPLER_2D_ARRAY]: ['2d-array', 'uint']\n};\n\ntype SamplerInfo = {\n  viewDimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d';\n  sampleType: 'float' | 'unfilterable-float' | 'depth' | 'sint' | 'uint';\n};\n\nfunction getSamplerInfo(type: GL): SamplerInfo {\n  const sampler = SAMPLER_UNIFORMS_GL_TO_GPU[type];\n  if (!sampler) {\n    throw new Error('sampler');\n  }\n  const [viewDimension, sampleType] = sampler;\n  return {viewDimension, sampleType};\n}\n\n// HELPERS\n\nfunction parseUniformName(name: string): {name: string; length: number; isArray: boolean} {\n  // Shortcut to avoid redundant or bad matches\n  if (name[name.length - 1] !== ']') {\n    return {\n      name,\n      length: 1,\n      isArray: false\n    };\n  }\n\n  // if array name then clean the array brackets\n  const UNIFORM_NAME_REGEXP = /([^[]*)(\\[[0-9]+\\])?/;\n  const matches = UNIFORM_NAME_REGEXP.exec(name);\n  if (!matches || matches.length < 2) {\n    throw new Error(`Failed to parse GLSL uniform name ${name}`);\n  }\n\n  return {\n    name: matches[1],\n    length: matches[2] ? 1 : 0,\n    isArray: Boolean(matches[2])\n  };\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5677, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5683, "column": 0}, "map": {"version":3,"file":"split-uniforms-and-bindings.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/utils/split-uniforms-and-bindings.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {UniformValue, Binding} from '@luma.gl/core';\nimport {isNumericArray} from '@math.gl/types';\n\nexport function isUniformValue(value: unknown): value is UniformValue {\n  return isNumericArray(value) !== null || typeof value === 'number' || typeof value === 'boolean';\n}\n\ntype UniformsAndBindings = {\n  bindings: Record<string, Binding>;\n  uniforms: Record<string, UniformValue>;\n};\n\nexport function splitUniformsAndBindings(\n  uniforms: Record<string, Binding | UniformValue>\n): UniformsAndBindings {\n  const result: UniformsAndBindings = {bindings: {}, uniforms: {}};\n  Object.keys(uniforms).forEach(name => {\n    const uniform = uniforms[name];\n    if (isUniformValue(uniform)) {\n      result.uniforms[name] = uniform;\n    } else {\n      result.bindings[name] = uniform;\n    }\n  });\n\n  return result;\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;;AAGpC,OAAO,EAAC,cAAc,EAAC,MAAM,gBAAgB,CAAC;;AAExC,SAAU,cAAc,CAAC,KAAc;IAC3C,wKAAO,iBAAA,AAAc,EAAC,KAAK,CAAC,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,SAAS,CAAC;AACnG,CAAC;AAOK,SAAU,wBAAwB,CACtC,QAAgD;IAEhD,MAAM,MAAM,GAAwB;QAAC,QAAQ,EAAE,CAAA,CAAE;QAAE,QAAQ,EAAE,CAAA,CAAE;IAAA,CAAC,CAAC;IACjE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAC,IAAI,CAAC,EAAE;QACnC,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC;YAC5B,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QAClC,CAAC,MAAM,CAAC;YACN,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QAClC,CAAC;IACH,CAAC,CAAC,CAAC;IAEH,OAAO,MAAM,CAAC;AAChB,CAAC","ignoreList":[0]}},
    {"offset": {"line": 5710, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5716, "column": 0}, "map": {"version":3,"file":"set-uniform.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/helpers/set-uniform.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* eslint-disable */\n\n// Uniforms\nimport type {UniformValue} from '@luma.gl/core';\nimport {GL, GLCompositeType, GLSamplerType} from '@luma.gl/constants';\n\n/** Set a raw uniform (without type conversion and caching) */\n/* eslint-disable max-len */\nexport function setUniform(\n  gl: WebGL2RenderingContext,\n  location: WebGLUniformLocation,\n  type: GLCompositeType | GLSamplerType,\n  value: UniformValue\n): void {\n  const gl2 = gl as WebGL2RenderingContext;\n\n  // Prepare the value for WebGL setters\n  let uniformValue = value;\n  if (uniformValue === true) {\n    uniformValue = 1;\n  }\n  if (uniformValue === false) {\n    uniformValue = 0;\n  }\n  const arrayValue = typeof uniformValue === 'number' ? [uniformValue] : uniformValue;\n\n  // prettier-ignore\n  switch (type) {\n    case GL.SAMPLER_2D:\n    case GL.SAMPLER_CUBE:\n    case GL.SAMPLER_3D:\n    case GL.SAMPLER_2D_SHADOW:\n    case GL.SAMPLER_2D_ARRAY:\n    case GL.SAMPLER_2D_ARRAY_SHADOW:\n    case GL.SAMPLER_CUBE_SHADOW:\n    case GL.INT_SAMPLER_2D:\n    case GL.INT_SAMPLER_3D:\n    case GL.INT_SAMPLER_CUBE:\n    case GL.INT_SAMPLER_2D_ARRAY:\n    case GL.UNSIGNED_INT_SAMPLER_2D:\n    case GL.UNSIGNED_INT_SAMPLER_3D:\n    case GL.UNSIGNED_INT_SAMPLER_CUBE:\n    case GL.UNSIGNED_INT_SAMPLER_2D_ARRAY:\n      if (typeof value !== 'number') {\n        throw new Error('samplers must be set to integers');\n      }\n      return gl.uniform1i(location, value);\n\n    case GL.FLOAT: return gl.uniform1fv(location, arrayValue);\n    case GL.FLOAT_VEC2: return gl.uniform2fv(location, arrayValue);\n    case GL.FLOAT_VEC3: return gl.uniform3fv(location, arrayValue);\n    case GL.FLOAT_VEC4: return gl.uniform4fv(location, arrayValue);\n\n    case GL.INT: return gl.uniform1iv(location, arrayValue);\n    case GL.INT_VEC2: return gl.uniform2iv(location, arrayValue);\n    case GL.INT_VEC3: return gl.uniform3iv(location, arrayValue);\n    case GL.INT_VEC4: return gl.uniform4iv(location, arrayValue);\n\n    case GL.BOOL: return gl.uniform1iv(location, arrayValue);\n    case GL.BOOL_VEC2: return gl.uniform2iv(location, arrayValue);\n    case GL.BOOL_VEC3: return gl.uniform3iv(location, arrayValue);\n    case GL.BOOL_VEC4: return gl.uniform4iv(location, arrayValue);\n\n    // WEBGL2 - unsigned integers\n    case GL.UNSIGNED_INT: return gl2.uniform1uiv(location, arrayValue, 1);\n    case GL.UNSIGNED_INT_VEC2: return gl2.uniform2uiv(location, arrayValue, 2);\n    case GL.UNSIGNED_INT_VEC3: return gl2.uniform3uiv(location, arrayValue, 3);\n    case GL.UNSIGNED_INT_VEC4: return gl2.uniform4uiv(location, arrayValue, 4);\n\n    // WebGL2 - quadratic matrices\n    // false: don't transpose the matrix\n    case GL.FLOAT_MAT2: return gl.uniformMatrix2fv(location, false, arrayValue);\n    case GL.FLOAT_MAT3: return gl.uniformMatrix3fv(location, false, arrayValue);\n    case GL.FLOAT_MAT4: return gl.uniformMatrix4fv(location, false, arrayValue);\n\n    // WebGL2 - rectangular matrices\n    case GL.FLOAT_MAT2x3: return gl2.uniformMatrix2x3fv(location, false, arrayValue);\n    case GL.FLOAT_MAT2x4: return gl2.uniformMatrix2x4fv(location, false, arrayValue);\n    case GL.FLOAT_MAT3x2: return gl2.uniformMatrix3x2fv(location, false, arrayValue);\n    case GL.FLOAT_MAT3x4: return gl2.uniformMatrix3x4fv(location, false, arrayValue);\n    case GL.FLOAT_MAT4x2: return gl2.uniformMatrix4x2fv(location, false, arrayValue);\n    case GL.FLOAT_MAT4x3: return gl2.uniformMatrix4x3fv(location, false, arrayValue);\n  }\n\n  throw new Error('Illegal uniform');\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 5814, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 5820, "column": 0}, "map": {"version":3,"file":"webgl-render-pipeline.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-render-pipeline.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  RenderPipelineProps,\n  RenderPipelineParameters,\n  PrimitiveTopology,\n  ShaderLayout,\n  UniformValue,\n  Binding,\n  RenderPass,\n  VertexArray\n} from '@luma.gl/core';\nimport {RenderPipeline, log} from '@luma.gl/core';\n// import {getAttributeInfosFromLayouts} from '@luma.gl/core';\nimport {GL} from '@luma.gl/constants';\n\nimport {getShaderLayoutFromGLSL} from '../helpers/get-shader-layout';\nimport {withDeviceAndGLParameters} from '../converters/device-parameters';\nimport {setUniform} from '../helpers/set-uniform';\nimport {splitUniformsAndBindings} from '../../utils/split-uniforms-and-bindings';\n// import {copyUniform, checkUniformValues} from '../../classes/uniforms';\n\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLBuffer} from './webgl-buffer';\nimport {WEBGLShader} from './webgl-shader';\nimport {WEBGLFramebuffer} from './webgl-framebuffer';\nimport {WEBGLTexture} from './webgl-texture';\nimport {WEBGLTextureView} from './webgl-texture-view';\nimport {WEBGLRenderPass} from './webgl-render-pass';\nimport {WEBGLTransformFeedback} from './webgl-transform-feedback';\nimport {getGLDrawMode} from '../helpers/webgl-topology-utils';\n\nconst LOG_PROGRAM_PERF_PRIORITY = 4;\n\n/** Creates a new render pipeline */\nexport class WEBGLRenderPipeline extends RenderPipeline {\n  /** The WebGL device that created this render pipeline */\n  device: WebGLDevice;\n  /** Handle to underlying WebGL program */\n  handle: WebGLProgram;\n  /** vertex shader */\n  vs: WEBGLShader;\n  /** fragment shader */\n  fs: WEBGLShader;\n  /** The layout extracted from shader by WebGL introspection APIs */\n  introspectedLayout: ShaderLayout;\n\n  /** Uniforms set on this model */\n  uniforms: Record<string, UniformValue> = {};\n  /** Bindings set on this model */\n  bindings: Record<string, Binding> = {};\n  /** WebGL varyings */\n  varyings: string[] | null = null;\n\n  _uniformCount: number = 0;\n  _uniformSetters: Record<string, Function> = {}; // TODO are these used?\n\n  constructor(device: WebGLDevice, props: RenderPipelineProps) {\n    super(device, props);\n    this.device = device;\n    this.handle = this.props.handle || this.device.gl.createProgram();\n    this.device.setSpectorMetadata(this.handle, {id: this.props.id});\n\n    // Create shaders if needed\n    this.vs = props.vs as WEBGLShader;\n    this.fs = props.fs as WEBGLShader;\n    // assert(this.vs.stage === 'vertex');\n    // assert(this.fs.stage === 'fragment');\n\n    // Setup varyings if supplied\n    // @ts-expect-error WebGL only\n    const {varyings, bufferMode = GL.SEPARATE_ATTRIBS} = props;\n    if (varyings && varyings.length > 0) {\n      this.varyings = varyings;\n      this.device.gl.transformFeedbackVaryings(this.handle, varyings, bufferMode);\n    }\n\n    this._linkShaders();\n\n    log.time(1, `RenderPipeline ${this.id} - shaderLayout introspection`)();\n    this.introspectedLayout = getShaderLayoutFromGLSL(this.device.gl, this.handle);\n    log.timeEnd(1, `RenderPipeline ${this.id} - shaderLayout introspection`)();\n\n    // Merge provided layout with introspected layout\n    this.shaderLayout = mergeShaderLayout(this.introspectedLayout, props.shaderLayout);\n  }\n\n  override destroy(): void {\n    if (this.handle) {\n      this.device.gl.deleteProgram(this.handle);\n      // this.handle = null;\n      this.destroyed = true;\n    }\n  }\n\n  /**\n   * Bindings include: textures, samplers and uniform buffers\n   * @todo needed for portable model\n   */\n  setBindings(bindings: Record<string, Binding>, options?: {disableWarnings?: boolean}): void {\n    // if (log.priority >= 2) {\n    //   checkUniformValues(uniforms, this.id, this._uniformSetters);\n    // }\n\n    for (const [name, value] of Object.entries(bindings)) {\n      // Accept both `xyz` and `xyzUniforms` as valid names for `xyzUniforms` uniform block\n      // This convention allows shaders to name uniform blocks as `uniform appUniforms {} app;`\n      // and reference them as `app` from both GLSL and JS.\n      // TODO - this is rather hacky - we could also remap the name directly in the shader layout.\n      const binding =\n        this.shaderLayout.bindings.find(binding_ => binding_.name === name) ||\n        this.shaderLayout.bindings.find(binding_ => binding_.name === `${name}Uniforms`);\n\n      if (!binding) {\n        const validBindings = this.shaderLayout.bindings\n          .map(binding_ => `\"${binding_.name}\"`)\n          .join(', ');\n        if (!options?.disableWarnings) {\n          log.warn(\n            `No binding \"${name}\" in render pipeline \"${this.id}\", expected one of ${validBindings}`,\n            value\n          )();\n        }\n        continue; // eslint-disable-line no-continue\n      }\n      if (!value) {\n        log.warn(`Unsetting binding \"${name}\" in render pipeline \"${this.id}\"`)();\n      }\n      switch (binding.type) {\n        case 'uniform':\n          // @ts-expect-error\n          if (!(value instanceof WEBGLBuffer) && !(value.buffer instanceof WEBGLBuffer)) {\n            throw new Error('buffer value');\n          }\n          break;\n        case 'texture':\n          if (\n            !(\n              value instanceof WEBGLTextureView ||\n              value instanceof WEBGLTexture ||\n              value instanceof WEBGLFramebuffer\n            )\n          ) {\n            throw new Error('texture value');\n          }\n          break;\n        case 'sampler':\n          log.warn(`Ignoring sampler ${name}`)();\n          break;\n        default:\n          throw new Error(binding.type);\n      }\n\n      this.bindings[name] = value;\n    }\n  }\n\n  /** @todo needed for portable model\n   * @note The WebGL API is offers many ways to draw things\n   * This function unifies those ways into a single call using common parameters with sane defaults\n   */\n  draw(options: {\n    renderPass: RenderPass;\n    parameters?: RenderPipelineParameters;\n    topology?: PrimitiveTopology;\n    vertexArray: VertexArray;\n    isInstanced?: boolean;\n    vertexCount?: number;\n    indexCount?: number;\n    instanceCount?: number;\n    firstVertex?: number;\n    firstIndex?: number;\n    firstInstance?: number;\n    baseVertex?: number;\n    transformFeedback?: WEBGLTransformFeedback;\n  }): boolean {\n    const {\n      renderPass,\n      parameters = this.props.parameters,\n      topology = this.props.topology,\n      vertexArray,\n      vertexCount,\n      // indexCount,\n      instanceCount,\n      isInstanced = false,\n      firstVertex = 0,\n      // firstIndex,\n      // firstInstance,\n      // baseVertex,\n      transformFeedback\n    } = options;\n\n    const glDrawMode = getGLDrawMode(topology);\n    const isIndexed: boolean = Boolean(vertexArray.indexBuffer);\n    const glIndexType = (vertexArray.indexBuffer as WEBGLBuffer)?.glIndexType;\n    // Note that we sometimes get called with 0 instances\n\n    // If we are using async linking, we need to wait until linking completes\n    if (this.linkStatus !== 'success') {\n      log.info(2, `RenderPipeline:${this.id}.draw() aborted - waiting for shader linking`)();\n      return false;\n    }\n\n    // Avoid WebGL draw call when not rendering any data or values are incomplete\n    // Note: async textures set as uniforms might still be loading.\n    // Now that all uniforms have been updated, check if any texture\n    // in the uniforms is not yet initialized, then we don't draw\n    if (!this._areTexturesRenderable()) {\n      log.info(2, `RenderPipeline:${this.id}.draw() aborted - textures not yet loaded`)();\n      //  Note: false means that the app needs to redraw the pipeline again.\n      return false;\n    }\n\n    // (isInstanced && instanceCount === 0)\n    // if (vertexCount === 0) {\n    //   log.info(2, `RenderPipeline:${this.id}.draw() aborted - no vertices to draw`)();\n    //   Note: false means that the app needs to redraw the pipeline again.\n    //   return true;\n    // }\n\n    this.device.gl.useProgram(this.handle);\n\n    // Note: Rebinds constant attributes before each draw call\n    vertexArray.bindBeforeRender(renderPass);\n\n    if (transformFeedback) {\n      transformFeedback.begin(this.props.topology);\n    }\n\n    // We have to apply bindings before every draw call since other draw calls will overwrite\n    this._applyBindings();\n    this._applyUniforms();\n\n    const webglRenderPass = renderPass as WEBGLRenderPass;\n\n    withDeviceAndGLParameters(this.device, parameters, webglRenderPass.glParameters, () => {\n      if (isIndexed && isInstanced) {\n        this.device.gl.drawElementsInstanced(\n          glDrawMode,\n          vertexCount || 0, // indexCount?\n          glIndexType,\n          firstVertex,\n          instanceCount || 0\n        );\n        // } else if (isIndexed && this.device.isWebGL2 && !isNaN(start) && !isNaN(end)) {\n        //   this.device.gldrawRangeElements(glDrawMode, start, end, vertexCount, glIndexType, offset);\n      } else if (isIndexed) {\n        this.device.gl.drawElements(glDrawMode, vertexCount || 0, glIndexType, firstVertex); // indexCount?\n      } else if (isInstanced) {\n        this.device.gl.drawArraysInstanced(\n          glDrawMode,\n          firstVertex,\n          vertexCount || 0,\n          instanceCount || 0\n        );\n      } else {\n        this.device.gl.drawArrays(glDrawMode, firstVertex, vertexCount || 0);\n      }\n\n      if (transformFeedback) {\n        transformFeedback.end();\n      }\n    });\n\n    vertexArray.unbindAfterRender(renderPass);\n\n    return true;\n  }\n\n  // DEPRECATED METHODS\n\n  override setUniformsWebGL(uniforms: Record<string, UniformValue>) {\n    const {bindings} = splitUniformsAndBindings(uniforms);\n    Object.keys(bindings).forEach(name => {\n      log.warn(\n        `Unsupported value \"${JSON.stringify(\n          bindings[name]\n        )}\" used in setUniforms() for key ${name}. Use setBindings() instead?`\n      )();\n    });\n    // TODO - check against layout\n    Object.assign(this.uniforms, uniforms);\n  }\n\n  // PRIVATE METHODS\n\n  // setAttributes(attributes: Record<string, Buffer>): void {}\n  // setBindings(bindings: Record<string, Binding>): void {}\n\n  protected async _linkShaders() {\n    const {gl} = this.device;\n    gl.attachShader(this.handle, this.vs.handle);\n    gl.attachShader(this.handle, this.fs.handle);\n    log.time(LOG_PROGRAM_PERF_PRIORITY, `linkProgram for ${this.id}`)();\n    gl.linkProgram(this.handle);\n    log.timeEnd(LOG_PROGRAM_PERF_PRIORITY, `linkProgram for ${this.id}`)();\n\n    // TODO Avoid checking program linking error in production\n    if (log.level === 0) {\n      // return;\n    }\n\n    if (!this.device.features.has('compilation-status-async-webgl')) {\n      const status = this._getLinkStatus();\n      this._reportLinkStatus(status);\n      return;\n    }\n\n    // async case\n    log.once(1, 'RenderPipeline linking is asynchronous')();\n    await this._waitForLinkComplete();\n    log.info(2, `RenderPipeline ${this.id} - async linking complete: ${this.linkStatus}`)();\n    const status = this._getLinkStatus();\n    this._reportLinkStatus(status);\n  }\n\n  /** Report link status. First, check for shader compilation failures if linking fails */\n  async _reportLinkStatus(status: 'success' | 'linking' | 'validation'): Promise<void> {\n    switch (status) {\n      case 'success':\n        return;\n\n      default:\n        // First check for shader compilation failures if linking fails\n        switch (this.vs.compilationStatus) {\n          case 'error':\n            this.vs.debugShader();\n            throw new Error(`Error during compilation of shader ${this.vs.id}`);\n          case 'pending':\n            this.vs.asyncCompilationStatus.then(() => this.vs.debugShader());\n            break;\n          case 'success':\n            break;\n        }\n\n        switch (this.fs?.compilationStatus) {\n          case 'error':\n            this.fs.debugShader();\n            throw new Error(`Error during compilation of shader ${this.fs.id}`);\n          case 'pending':\n            this.fs.asyncCompilationStatus.then(() => this.fs.debugShader());\n            break;\n          case 'success':\n            break;\n        }\n\n        const linkErrorLog = this.device.gl.getProgramInfoLog(this.handle);\n        throw new Error(`Error during ${status}: ${linkErrorLog}`);\n    }\n  }\n\n  /**\n   * Get the shader compilation status\n   * TODO - Load log even when no error reported, to catch warnings?\n   * https://gamedev.stackexchange.com/questions/30429/how-to-detect-glsl-warnings\n   */\n  _getLinkStatus(): 'success' | 'linking' | 'validation' {\n    const {gl} = this.device;\n    const linked = gl.getProgramParameter(this.handle, gl.LINK_STATUS);\n    if (!linked) {\n      this.linkStatus = 'error';\n      return 'linking';\n    }\n\n    gl.validateProgram(this.handle);\n    const validated = gl.getProgramParameter(this.handle, gl.VALIDATE_STATUS);\n    if (!validated) {\n      this.linkStatus = 'error';\n      return 'validation';\n    }\n\n    this.linkStatus = 'success';\n    return 'success';\n  }\n\n  /** Use KHR_parallel_shader_compile extension if available */\n  async _waitForLinkComplete(): Promise<void> {\n    const waitMs = async (ms: number) => await new Promise(resolve => setTimeout(resolve, ms));\n    const DELAY_MS = 10; // Shader compilation is typically quite fast (with some exceptions)\n\n    // If status polling is not available, we can't wait for completion. Just wait a little to minimize blocking\n    if (!this.device.features.has('compilation-status-async-webgl')) {\n      await waitMs(DELAY_MS);\n      return;\n    }\n\n    const {gl} = this.device;\n    for (;;) {\n      const complete = gl.getProgramParameter(this.handle, GL.COMPLETION_STATUS_KHR);\n      if (complete) {\n        return;\n      }\n      await waitMs(DELAY_MS);\n    }\n  }\n\n  /**\n   * Checks if all texture-values uniforms are renderable (i.e. loaded)\n   * Update a texture if needed (e.g. from video)\n   * Note: This is currently done before every draw call\n   */\n  _areTexturesRenderable() {\n    let texturesRenderable = true;\n\n    for (const bindingInfo of this.shaderLayout.bindings) {\n      if (\n        !this.bindings[bindingInfo.name] &&\n        !this.bindings[bindingInfo.name.replace(/Uniforms$/, '')]\n      ) {\n        log.warn(`Binding ${bindingInfo.name} not found in ${this.id}`)();\n        texturesRenderable = false;\n      }\n    }\n\n    // TODO - remove this should be handled by ExternalTexture\n    // for (const [, texture] of Object.entries(this.bindings)) {\n    //   if (texture instanceof WEBGLTexture) {\n    //     texture.update();\n    //   }\n    // }\n\n    return texturesRenderable;\n  }\n\n  /** Apply any bindings (before each draw call) */\n  _applyBindings() {\n    // If we are using async linking, we need to wait until linking completes\n    if (this.linkStatus !== 'success') {\n      return;\n    }\n\n    const {gl} = this.device;\n    gl.useProgram(this.handle);\n\n    let textureUnit = 0;\n    let uniformBufferIndex = 0;\n    for (const binding of this.shaderLayout.bindings) {\n      // Accept both `xyz` and `xyzUniforms` as valid names for `xyzUniforms` uniform block\n      const value =\n        this.bindings[binding.name] || this.bindings[binding.name.replace(/Uniforms$/, '')];\n      if (!value) {\n        throw new Error(`No value for binding ${binding.name} in ${this.id}`);\n      }\n      switch (binding.type) {\n        case 'uniform':\n          // Set buffer\n          const {name} = binding;\n          const location = gl.getUniformBlockIndex(this.handle, name);\n          if ((location as GL) === GL.INVALID_INDEX) {\n            throw new Error(`Invalid uniform block name ${name}`);\n          }\n          gl.uniformBlockBinding(this.handle, uniformBufferIndex, location);\n          // console.debug(binding, location);\n          if (value instanceof WEBGLBuffer) {\n            gl.bindBufferBase(GL.UNIFORM_BUFFER, uniformBufferIndex, value.handle);\n          } else {\n            gl.bindBufferRange(\n              GL.UNIFORM_BUFFER,\n              uniformBufferIndex,\n              // @ts-expect-error\n              value.buffer.handle,\n              // @ts-expect-error\n              value.offset || 0,\n              // @ts-expect-error\n              value.size || value.buffer.byteLength - value.offset\n            );\n          }\n          uniformBufferIndex += 1;\n          break;\n\n        case 'texture':\n          if (\n            !(\n              value instanceof WEBGLTextureView ||\n              value instanceof WEBGLTexture ||\n              value instanceof WEBGLFramebuffer\n            )\n          ) {\n            throw new Error('texture');\n          }\n          let texture: WEBGLTexture;\n          if (value instanceof WEBGLTextureView) {\n            texture = value.texture;\n          } else if (value instanceof WEBGLTexture) {\n            texture = value;\n          } else if (\n            value instanceof WEBGLFramebuffer &&\n            value.colorAttachments[0] instanceof WEBGLTextureView\n          ) {\n            log.warn(\n              'Passing framebuffer in texture binding may be deprecated. Use fbo.colorAttachments[0] instead'\n            )();\n            texture = value.colorAttachments[0].texture;\n          } else {\n            throw new Error('No texture');\n          }\n\n          gl.activeTexture(GL.TEXTURE0 + textureUnit);\n          gl.bindTexture(texture.glTarget, texture.handle);\n          // gl.bindSampler(textureUnit, sampler.handle);\n          textureUnit += 1;\n          break;\n\n        case 'sampler':\n          // ignore\n          break;\n\n        case 'storage':\n        case 'read-only-storage':\n          throw new Error(`binding type '${binding.type}' not supported in WebGL`);\n      }\n    }\n  }\n\n  /**\n   * Due to program sharing, uniforms need to be reset before every draw call\n   * (though caching will avoid redundant WebGL calls)\n   */\n  _applyUniforms() {\n    for (const uniformLayout of this.shaderLayout.uniforms || []) {\n      const {name, location, type, textureUnit} = uniformLayout;\n      const value = this.uniforms[name] ?? textureUnit;\n      if (value !== undefined) {\n        setUniform(this.device.gl, location, type, value);\n      }\n    }\n  }\n}\n\n/**\n * Merges an provided shader layout into a base shader layout\n * In WebGL, this allows the auto generated shader layout to be overridden by the application\n * Typically to change the format of the vertex attributes (from float32x4 to uint8x4 etc).\n * @todo Drop this? Aren't all use cases covered by mergeBufferLayout()?\n */\nfunction mergeShaderLayout(baseLayout: ShaderLayout, overrideLayout: ShaderLayout): ShaderLayout {\n  // Deep clone the base layout\n  const mergedLayout: ShaderLayout = {\n    ...baseLayout,\n    attributes: baseLayout.attributes.map(attribute => ({...attribute}))\n  };\n  // Merge the attributes\n  for (const attribute of overrideLayout?.attributes || []) {\n    const baseAttribute = mergedLayout.attributes.find(attr => attr.name === attribute.name);\n    if (!baseAttribute) {\n      log.warn(`shader layout attribute ${attribute.name} not present in shader`);\n    } else {\n      baseAttribute.type = attribute.type || baseAttribute.type;\n      baseAttribute.stepMode = attribute.stepMode || baseAttribute.stepMode;\n    }\n  }\n  return mergedLayout;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6222, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6228, "column": 0}, "map": {"version":3,"file":"webgl-render-pass.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-render-pass.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {NumericArray, NumberArray4} from '@math.gl/types';\nimport {RenderPass, RenderPassProps, RenderPassParameters} from '@luma.gl/core';\nimport {WebGLDevice} from '../webgl-device';\nimport {GL, GLParameters} from '@luma.gl/constants';\nimport {withGLParameters} from '../../context/state-tracker/with-parameters';\nimport {setGLParameters} from '../../context/parameters/unified-parameter-api';\nimport {WEBGLQuerySet} from './webgl-query-set';\n\nconst COLOR_CHANNELS = [0x1, 0x2, 0x4, 0x8]; // GPUColorWrite RED, GREEN, BLUE, ALPHA\n\nexport class WEBGLRenderPass extends RenderPass {\n  readonly device: WebGLDevice;\n\n  /** Parameters that should be applied before each draw call */\n  glParameters: GLParameters;\n\n  constructor(device: WebGLDevice, props: RenderPassProps) {\n    super(device, props);\n    this.device = device;\n\n    // If no viewport is provided, apply reasonably defaults\n    let viewport;\n    if (!props?.parameters?.viewport) {\n      if (props?.framebuffer) {\n        // Set the viewport to the size of the framebuffer\n        const {width, height} = props.framebuffer;\n        viewport = [0, 0, width, height];\n      } else {\n        // Instead of using our own book-keeping, we can just read the values from the WebGL context\n        const [width, height] = device.getCanvasContext().getDrawingBufferSize();\n        viewport = [0, 0, width, height];\n      }\n    }\n\n    // TODO - do parameters (scissorRect) affect the clear operation?\n    this.device.pushState();\n    this.setParameters({viewport, ...this.props.parameters});\n\n    // Specify mapping of draw buffer locations to color attachments\n    if (this.props.framebuffer) {\n      const drawBuffers = this.props.framebuffer.colorAttachments.map(\n        (_, i) => GL.COLOR_ATTACHMENT0 + i\n      );\n      this.device.gl.drawBuffers(drawBuffers);\n    } else {\n      this.device.gl.drawBuffers([GL.BACK]);\n    }\n\n    // Hack - for now WebGL draws in \"immediate mode\" (instead of queueing the operations)...\n    this.clear();\n  }\n\n  end(): void {\n    this.device.popState();\n    // should add commands to CommandEncoder.\n  }\n\n  pushDebugGroup(groupLabel: string): void {}\n  popDebugGroup(): void {}\n  insertDebugMarker(markerLabel: string): void {}\n\n  // beginOcclusionQuery(queryIndex: number): void;\n  // endOcclusionQuery(): void;\n\n  // executeBundles(bundles: Iterable<GPURenderBundle>): void;\n\n  /**\n   * Maps RenderPass parameters to GL parameters\n   */\n  setParameters(parameters: RenderPassParameters = {}): void {\n    const glParameters: GLParameters = {...this.glParameters};\n\n    // Framebuffers are specified using parameters in WebGL\n    glParameters.framebuffer = this.props.framebuffer || null;\n\n    if (this.props.depthReadOnly) {\n      glParameters.depthMask = !this.props.depthReadOnly;\n    }\n\n    glParameters.stencilMask = this.props.stencilReadOnly ? 0 : 1;\n\n    glParameters[GL.RASTERIZER_DISCARD] = this.props.discard;\n\n    // Map the four renderpass parameters to WebGL parameters\n    if (parameters.viewport) {\n      // WebGPU viewports are 6 coordinates (X, Y, Z)\n      if (parameters.viewport.length >= 6) {\n        glParameters.viewport = parameters.viewport.slice(0, 4) as NumberArray4;\n        glParameters.depthRange = [parameters.viewport[4], parameters.viewport[5]];\n      } else {\n        // WebGL viewports are 4 coordinates (X, Y)\n        glParameters.viewport = parameters.viewport as NumberArray4;\n      }\n    }\n    if (parameters.scissorRect) {\n      glParameters.scissorTest = true;\n      glParameters.scissor = parameters.scissorRect;\n    }\n    if (parameters.blendConstant) {\n      glParameters.blendColor = parameters.blendConstant;\n    }\n    if (parameters.stencilReference) {\n      // eslint-disable-next-line no-console\n      console.warn('RenderPassParameters.stencilReference not yet implemented in WebGL');\n      // parameters.stencilFunc = [func, ref, mask];\n      // Does this work?\n      parameters[GL.STENCIL_REF] = parameters.stencilReference;\n    }\n\n    if (parameters.colorMask) {\n      glParameters.colorMask = COLOR_CHANNELS.map(channel =>\n        Boolean(channel & parameters.colorMask)\n      );\n    }\n\n    this.glParameters = glParameters;\n\n    setGLParameters(this.device.gl, glParameters);\n  }\n\n  beginOcclusionQuery(queryIndex: number): void {\n    const webglQuerySet = this.props.occlusionQuerySet as WEBGLQuerySet;\n    webglQuerySet?.beginOcclusionQuery();\n  }\n\n  override endOcclusionQuery(): void {\n    const webglQuerySet = this.props.occlusionQuerySet as WEBGLQuerySet;\n    webglQuerySet?.endOcclusionQuery();\n  }\n\n  // PRIVATE\n\n  /**\n   * Optionally clears depth, color and stencil buffers based on parameters\n   */\n  protected clear(): void {\n    const glParameters: GLParameters = {...this.glParameters};\n\n    let clearMask = 0;\n\n    if (this.props.clearColors) {\n      this.props.clearColors.forEach((color, drawBufferIndex) => {\n        if (color) {\n          this.clearColorBuffer(drawBufferIndex, color);\n        }\n      });\n    }\n\n    if (this.props.clearColor !== false && this.props.clearColors === undefined) {\n      clearMask |= GL.COLOR_BUFFER_BIT;\n      glParameters.clearColor = this.props.clearColor;\n    }\n    if (this.props.clearDepth !== false) {\n      clearMask |= GL.DEPTH_BUFFER_BIT;\n      glParameters.clearDepth = this.props.clearDepth;\n    }\n    if (this.props.clearStencil !== false) {\n      clearMask |= GL.STENCIL_BUFFER_BIT;\n      glParameters.clearStencil = this.props.clearStencil;\n    }\n\n    if (clearMask !== 0) {\n      // Temporarily set any clear \"colors\" and call clear\n      withGLParameters(this.device.gl, glParameters, () => {\n        this.device.gl.clear(clearMask);\n      });\n    }\n  }\n\n  /**\n   * WebGL2 - clear a specific color buffer\n   */\n  protected clearColorBuffer(drawBuffer: number = 0, value: NumericArray = [0, 0, 0, 0]) {\n    withGLParameters(this.device.gl, {framebuffer: this.props.framebuffer}, () => {\n      // Method selection per OpenGL ES 3 docs\n      switch (value.constructor) {\n        case Int8Array:\n        case Int16Array:\n        case Int32Array:\n          this.device.gl.clearBufferiv(GL.COLOR, drawBuffer, value);\n          break;\n        case Uint8Array:\n        case Uint8ClampedArray:\n        case Uint16Array:\n        case Uint32Array:\n          this.device.gl.clearBufferuiv(GL.COLOR, drawBuffer, value);\n          break;\n        case Float32Array:\n          this.device.gl.clearBufferfv(GL.COLOR, drawBuffer, value);\n          break;\n        default:\n          throw new Error('clearColorBuffer: color must be typed array');\n      }\n    });\n  }\n\n  /*\n  clearDepthStencil() {\n      case GL.DEPTH:\n        this.device.gl.clearBufferfv(GL.DEPTH, 0, [value]);\n        break;\n\n      case GL_STENCIL:\n        this.device.gl.clearBufferiv(GL.STENCIL, 0, [value]);\n        break;\n\n      case GL.DEPTH_STENCIL:\n        const [depth, stencil] = value;\n        this.device.gl.clearBufferfi(GL.DEPTH_STENCIL, 0, depth, stencil);\n        break;\n\n      default:\n        assert(false, ERR_ARGUMENTS);\n    }\n  });\n  */\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAOpC,OAAO,EAAC,eAAe,EAAC,0DAAuD;AAD/E,OAAO,EAAC,gBAAgB,EAAC,uDAAoD;AAH7E,OAAO,EAAC,UAAU,EAAwC,MAAM,eAAe,CAAC;;;;;AAOhF,MAAM,cAAc,GAAG;IAAC,GAAG;IAAE,GAAG;IAAE,GAAG;IAAE,GAAG;CAAC,CAAC,CAAC,wCAAwC;AAE/E,MAAO,eAAgB,gMAAQ,aAAU;IACpC,MAAM,CAAc;IAE7B,4DAAA,EAA8D,CAC9D,YAAY,CAAe;IAE3B,YAAY,MAAmB,EAAE,KAAsB,CAAA;QACrD,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAErB,wDAAwD;QACxD,IAAI,QAAQ,CAAC;QACb,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC;YACjC,IAAI,KAAK,EAAE,WAAW,EAAE,CAAC;gBACvB,kDAAkD;gBAClD,MAAM,EAAC,KAAK,EAAE,MAAM,EAAC,GAAG,KAAK,CAAC,WAAW,CAAC;gBAC1C,QAAQ,GAAG;oBAAC,CAAC;oBAAE,CAAC;oBAAE,KAAK;oBAAE,MAAM;iBAAC,CAAC;YACnC,CAAC,MAAM,CAAC;gBACN,4FAA4F;gBAC5F,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC,oBAAoB,EAAE,CAAC;gBACzE,QAAQ,GAAG;oBAAC,CAAC;oBAAE,CAAC;oBAAE,KAAK;oBAAE,MAAM;iBAAC,CAAC;YACnC,CAAC;QACH,CAAC;QAED,iEAAiE;QACjE,IAAI,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC;YAAC,QAAQ;YAAE,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU;QAAA,CAAC,CAAC,CAAC;QAEzD,gEAAgE;QAChE,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,CAAC,GAAG,CAC7D,CAAC,CAAC,EAAE,CAAC,EAAE,CAAG,CAAD,OAAwB,CAAC,CACnC,CAAC;YACF,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;QAC1C,CAAC,MAAM,CAAC;YACN,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,WAAW,CAAC;gBAAA;aAAS,CAAC,CAAC;QACxC,CAAC;QAED,yFAAyF;QACzF,IAAI,CAAC,KAAK,EAAE,CAAC;IACf,CAAC;IAED,GAAG,GAAA;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvB,yCAAyC;IAC3C,CAAC;IAED,cAAc,CAAC,UAAkB,EAAA,CAAS,CAAC;IAC3C,aAAa,GAAA,CAAU,CAAC;IACxB,iBAAiB,CAAC,WAAmB,EAAA,CAAS,CAAC;IAE/C,iDAAiD;IACjD,6BAA6B;IAE7B,4DAA4D;IAE5D;;OAEG,CACH,aAAa,CAAC,aAAmC,CAAA,CAAE,EAAA;QACjD,MAAM,YAAY,GAAiB;YAAC,GAAG,IAAI,CAAC,YAAY;QAAA,CAAC,CAAC;QAE1D,uDAAuD;QACvD,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,IAAI,CAAC;QAE1D,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;YAC7B,YAAY,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QACrD,CAAC;QAED,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9D,YAAY,CAAA,MAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;QAEzD,yDAAyD;QACzD,IAAI,UAAU,CAAC,QAAQ,EAAE,CAAC;YACxB,+CAA+C;YAC/C,IAAI,UAAU,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE,CAAC;gBACpC,YAAY,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAiB,CAAC;gBACxE,YAAY,CAAC,UAAU,GAAG;oBAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;oBAAE,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;iBAAC,CAAC;YAC7E,CAAC,MAAM,CAAC;gBACN,2CAA2C;gBAC3C,YAAY,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAwB,CAAC;YAC9D,CAAC;QACH,CAAC;QACD,IAAI,UAAU,CAAC,WAAW,EAAE,CAAC;YAC3B,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;YAChC,YAAY,CAAC,OAAO,GAAG,UAAU,CAAC,WAAW,CAAC;QAChD,CAAC;QACD,IAAI,UAAU,CAAC,aAAa,EAAE,CAAC;YAC7B,YAAY,CAAC,UAAU,GAAG,UAAU,CAAC,aAAa,CAAC;QACrD,CAAC;QACD,IAAI,UAAU,CAAC,gBAAgB,EAAE,CAAC;YAChC,sCAAsC;YACtC,OAAO,CAAC,IAAI,CAAC,oEAAoE,CAAC,CAAC;YACnF,8CAA8C;YAC9C,kBAAkB;YAClB,UAAU,CAAA,KAAgB,GAAG,UAAU,CAAC,gBAAgB,CAAC;QAC3D,CAAC;QAED,IAAI,UAAU,CAAC,SAAS,EAAE,CAAC;YACzB,YAAY,CAAC,SAAS,GAAG,cAAc,CAAC,GAAG,EAAC,OAAO,CAAC,EAClD,AADoD,OAC7C,CAAC,OAAO,GAAG,UAAU,CAAC,SAAS,CAAC,CACxC,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;kNAEjC,kBAAA,AAAe,EAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;IAChD,CAAC;IAED,mBAAmB,CAAC,UAAkB,EAAA;QACpC,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAkC,CAAC;QACpE,aAAa,EAAE,mBAAmB,EAAE,CAAC;IACvC,CAAC;IAEQ,iBAAiB,GAAA;QACxB,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAkC,CAAC;QACpE,aAAa,EAAE,iBAAiB,EAAE,CAAC;IACrC,CAAC;IAED,UAAU;IAEV;;OAEG,CACO,KAAK,GAAA;QACb,MAAM,YAAY,GAAiB;YAAC,GAAG,IAAI,CAAC,YAAY;QAAA,CAAC,CAAC;QAE1D,IAAI,SAAS,GAAG,CAAC,CAAC;QAElB,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;YAC3B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,eAAe,EAAE,EAAE;gBACxD,IAAI,KAAK,EAAE,CAAC;oBACV,IAAI,CAAC,gBAAgB,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;gBAChD,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAED,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,KAAK,SAAS,EAAE,CAAC;YAC5E,SAAS,IAAA,KAAuB,CAAC;YACjC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QAClD,CAAC;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,UAAU,KAAK,KAAK,EAAE,CAAC;YACpC,SAAS,IAAA,GAAuB,CAAC;YACjC,YAAY,CAAC,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC;QAClD,CAAC;QACD,IAAI,IAAI,CAAC,KAAK,CAAC,YAAY,KAAK,KAAK,EAAE,CAAC;YACtC,SAAS,IAAA,IAAyB,CAAC;YACnC,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC;QACtD,CAAC;QAED,IAAI,SAAS,KAAK,CAAC,EAAE,CAAC;YACpB,oDAAoD;mNACpD,mBAAA,AAAgB,EAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,EAAE,GAAG,EAAE;gBAClD,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED;;OAEG,CACO,gBAAgB,CAAC,aAAqB,CAAC,EAAE,QAAsB;QAAC,CAAC;QAAE,CAAC;QAAE,CAAC;QAAE,CAAC;KAAC,EAAA;+MACnF,mBAAA,AAAgB,EAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;YAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;QAAA,CAAC,EAAE,GAAG,EAAE;YAC3E,wCAAwC;YACxC,OAAQ,KAAK,CAAC,WAAW,EAAE,CAAC;gBAC1B,KAAK,SAAS,CAAC;gBACf,KAAK,UAAU,CAAC;gBAChB,KAAK,UAAU;oBACb,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,CAAA,MAAW,UAAU,EAAE,KAAK,CAAC,CAAC;oBAC1D,MAAM;gBACR,KAAK,UAAU,CAAC;gBAChB,KAAK,iBAAiB,CAAC;gBACvB,KAAK,WAAW,CAAC;gBACjB,KAAK,WAAW;oBACd,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,cAAc,CAAA,MAAW,UAAU,EAAE,KAAK,CAAC,CAAC;oBAC3D,MAAM;gBACR,KAAK,YAAY;oBACf,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,aAAa,CAAA,MAAW,UAAU,EAAE,KAAK,CAAC,CAAC;oBAC1D,MAAM;gBACR;oBACE,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;YACnE,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CAsBF","ignoreList":[0]}},
    {"offset": {"line": 6426, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6432, "column": 0}, "map": {"version":3,"file":"webgl-command-buffer.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-command-buffer.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {\n  CopyBufferToBufferOptions,\n  CopyBufferToTextureOptions,\n  CopyTextureToBufferOptions,\n  CopyTextureToTextureOptions\n  // ClearTextureOptions,\n  // ReadTextureOptions\n} from '@luma.gl/core';\nimport {CommandBuffer, Texture, Framebuffer} from '@luma.gl/core';\nimport {\n  GL,\n  GLTextureTarget,\n  GLTextureCubeMapTarget\n  // GLTexelDataFormat,\n  // GLPixelType,\n  // GLDataType\n} from '@luma.gl/constants';\n\nimport {WebGLDevice} from '../webgl-device';\nimport {WEBGLBuffer} from './webgl-buffer';\nimport {WEBGLTexture} from './webgl-texture';\nimport {WEBGLFramebuffer} from './webgl-framebuffer';\nimport {getTextureFormatWebGL} from '../converters/webgl-texture-table';\n\ntype CopyBufferToBufferCommand = {\n  name: 'copy-buffer-to-buffer';\n  options: CopyBufferToBufferOptions;\n};\n\ntype CopyBufferToTextureCommand = {\n  name: 'copy-buffer-to-texture';\n  options: CopyBufferToTextureOptions;\n};\n\ntype CopyTextureToBufferCommand = {\n  name: 'copy-texture-to-buffer';\n  options: CopyTextureToBufferOptions;\n};\n\ntype CopyTextureToTextureCommand = {\n  name: 'copy-texture-to-texture';\n  options: CopyTextureToTextureOptions;\n};\n\ntype ClearTextureCommand = {\n  name: 'clear-texture';\n  options: {}; // ClearTextureOptions;\n};\n\ntype ReadTextureCommand = {\n  name: 'read-texture';\n  options: {}; // ReadTextureOptions;\n};\n\ntype Command =\n  | CopyBufferToBufferCommand\n  | CopyBufferToTextureCommand\n  | CopyTextureToBufferCommand\n  | CopyTextureToTextureCommand\n  | ClearTextureCommand\n  | ReadTextureCommand;\n\nexport class WEBGLCommandBuffer extends CommandBuffer {\n  device: WebGLDevice;\n  commands: Command[] = [];\n\n  constructor(device: WebGLDevice) {\n    super(device, {});\n    this.device = device;\n  }\n\n  submitCommands(commands: Command[] = this.commands) {\n    for (const command of commands) {\n      switch (command.name) {\n        case 'copy-buffer-to-buffer':\n          _copyBufferToBuffer(this.device, command.options);\n          break;\n        case 'copy-buffer-to-texture':\n          _copyBufferToTexture(this.device, command.options);\n          break;\n        case 'copy-texture-to-buffer':\n          _copyTextureToBuffer(this.device, command.options);\n          break;\n        case 'copy-texture-to-texture':\n          _copyTextureToTexture(this.device, command.options);\n          break;\n        // case 'clear-texture':\n        //   _clearTexture(this.device, command.options);\n        //   break;\n        default:\n          throw new Error(command.name);\n      }\n    }\n  }\n}\n\nfunction _copyBufferToBuffer(device: WebGLDevice, options: CopyBufferToBufferOptions): void {\n  const source = options.sourceBuffer as WEBGLBuffer;\n  const destination = options.destinationBuffer as WEBGLBuffer;\n\n  // {In WebGL2 we can p}erform the copy on the GPU\n  // Use GL.COPY_READ_BUFFER+GL.COPY_WRITE_BUFFER avoid disturbing other targets and locking type\n  device.gl.bindBuffer(GL.COPY_READ_BUFFER, source.handle);\n  device.gl.bindBuffer(GL.COPY_WRITE_BUFFER, destination.handle);\n  device.gl.copyBufferSubData(\n    GL.COPY_READ_BUFFER,\n    GL.COPY_WRITE_BUFFER,\n    options.sourceOffset ?? 0,\n    options.destinationOffset ?? 0,\n    options.size\n  );\n  device.gl.bindBuffer(GL.COPY_READ_BUFFER, null);\n  device.gl.bindBuffer(GL.COPY_WRITE_BUFFER, null);\n}\n\n/**\n * Copies data from a Buffer object into a Texture object\n * NOTE: doesn't wait for copy to be complete\n */\nfunction _copyBufferToTexture(device: WebGLDevice, options: CopyBufferToTextureOptions): void {\n  throw new Error('Not implemented');\n}\n\n/**\n * Copies data from a Texture object into a Buffer object.\n * NOTE: doesn't wait for copy to be complete\n */\nfunction _copyTextureToBuffer(device: WebGLDevice, options: CopyTextureToBufferOptions): void {\n  const {\n    /** Texture to copy to/from. */\n    sourceTexture,\n    /**  Mip-map level of the texture to copy to/from. (Default 0) */\n    mipLevel = 0,\n    /** Defines which aspects of the texture to copy to/from. */\n    aspect = 'all',\n\n    /** Width to copy */\n    width = options.sourceTexture.width,\n    /** Height to copy */\n    height = options.sourceTexture.height,\n    depthOrArrayLayers = 0,\n    /** Defines the origin of the copy - the minimum corner of the texture sub-region to copy to/from. */\n    origin = [0, 0],\n\n    /** Destination buffer */\n    destinationBuffer,\n    /** Offset, in bytes, from the beginning of the buffer to the start of the image data (default 0) */\n    byteOffset = 0,\n    /**\n     * The stride, in bytes, between the beginning of each block row and the subsequent block row.\n     * Required if there are multiple block rows (i.e. the copy height or depth is more than one block).\n     */\n    bytesPerRow,\n    /**\n     * Number of block rows per single image of the texture.\n     * rowsPerImage &times; bytesPerRow is the stride, in bytes, between the beginning of each image of data and the subsequent image.\n     * Required if there are multiple images (i.e. the copy depth is more than one).\n     */\n    rowsPerImage\n  } = options;\n\n  // TODO - Not possible to read just stencil or depth part in WebGL?\n  if (aspect !== 'all') {\n    throw new Error('aspect not supported in WebGL');\n  }\n\n  // TODO - mipLevels are set when attaching texture to framebuffer\n  if (mipLevel !== 0 || depthOrArrayLayers !== 0 || bytesPerRow || rowsPerImage) {\n    throw new Error('not implemented');\n  }\n\n  // Asynchronous read (PIXEL_PACK_BUFFER) is WebGL2 only feature\n  const {framebuffer, destroyFramebuffer} = getFramebuffer(sourceTexture);\n  let prevHandle: WebGLFramebuffer | null | undefined;\n  try {\n    const webglBuffer = destinationBuffer as WEBGLBuffer;\n    const sourceWidth = width || framebuffer.width;\n    const sourceHeight = height || framebuffer.height;\n    const sourceParams = getTextureFormatWebGL(\n      framebuffer.colorAttachments[0].texture.props.format\n    );\n    const sourceFormat = sourceParams.format;\n    const sourceType = sourceParams.type;\n\n    // if (!target) {\n    //   // Create new buffer with enough size\n    //   const components = glFormatToComponents(sourceFormat);\n    //   const byteCount = glTypeToBytes(sourceType);\n    //   const byteLength = byteOffset + sourceWidth * sourceHeight * components * byteCount;\n    //   target = device.createBuffer({byteLength});\n    // }\n\n    device.gl.bindBuffer(GL.PIXEL_PACK_BUFFER, webglBuffer.handle);\n    // @ts-expect-error native bindFramebuffer is overridden by our state tracker\n    prevHandle = device.gl.bindFramebuffer(GL.FRAMEBUFFER, framebuffer.handle);\n\n    device.gl.readPixels(\n      origin[0],\n      origin[1],\n      sourceWidth,\n      sourceHeight,\n      sourceFormat,\n      sourceType,\n      byteOffset\n    );\n  } finally {\n    device.gl.bindBuffer(GL.PIXEL_PACK_BUFFER, null);\n    // prevHandle may be unassigned if the try block failed before binding\n    if (prevHandle !== undefined) {\n      device.gl.bindFramebuffer(GL.FRAMEBUFFER, prevHandle);\n    }\n\n    if (destroyFramebuffer) {\n      framebuffer.destroy();\n    }\n  }\n}\n\n/**\n * Copies data from a Framebuffer or a Texture object into a Buffer object.\n * NOTE: doesn't wait for copy to be complete, it programs GPU to perform a DMA transfer.\nexport function readPixelsToBuffer(\n  source: Framebuffer | Texture,\n  options?: {\n    sourceX?: number;\n    sourceY?: number;\n    sourceFormat?: number;\n    target?: Buffer; // A new Buffer object is created when not provided.\n    targetByteOffset?: number; // byte offset in buffer object\n    // following parameters are auto deduced if not provided\n    sourceWidth?: number;\n    sourceHeight?: number;\n    sourceType?: number;\n  }\n): Buffer\n */\n\n/**\n * Copy a rectangle from a Framebuffer or Texture object into a texture (at an offset)\n */\n// eslint-disable-next-line complexity, max-statements\nfunction _copyTextureToTexture(device: WebGLDevice, options: CopyTextureToTextureOptions): void {\n  const {\n    /** Texture to copy to/from. */\n    sourceTexture,\n    /**  Mip-map level of the texture to copy to (Default 0) */\n    destinationMipLevel = 0,\n    /** Defines which aspects of the texture to copy to/from. */\n    // aspect = 'all',\n    /** Defines the origin of the copy - the minimum corner of the texture sub-region to copy from. */\n    origin = [0, 0],\n\n    /** Defines the origin of the copy - the minimum corner of the texture sub-region to copy to. */\n    destinationOrigin = [0, 0],\n\n    /** Texture to copy to/from. */\n    destinationTexture\n    /**  Mip-map level of the texture to copy to/from. (Default 0) */\n    // destinationMipLevel = options.mipLevel,\n    /** Defines the origin of the copy - the minimum corner of the texture sub-region to copy to/from. */\n    // destinationOrigin = [0, 0],\n    /** Defines which aspects of the texture to copy to/from. */\n    // destinationAspect = options.aspect,\n  } = options;\n\n  let {\n    width = options.destinationTexture.width,\n    height = options.destinationTexture.height\n    // depthOrArrayLayers = 0\n  } = options;\n\n  const {framebuffer, destroyFramebuffer} = getFramebuffer(sourceTexture);\n  const [sourceX, sourceY] = origin;\n  const [destinationX, destinationY, destinationZ] = destinationOrigin;\n\n  // @ts-expect-error native bindFramebuffer is overridden by our state tracker\n  const prevHandle: WebGLFramebuffer | null = device.gl.bindFramebuffer(\n    GL.FRAMEBUFFER,\n    framebuffer.handle\n  );\n  // TODO - support gl.readBuffer (WebGL2 only)\n  // const prevBuffer = gl.readBuffer(attachment);\n\n  let texture: WEBGLTexture = null;\n  let textureTarget: GL;\n  if (destinationTexture instanceof WEBGLTexture) {\n    texture = destinationTexture;\n    width = Number.isFinite(width) ? width : texture.width;\n    height = Number.isFinite(height) ? height : texture.height;\n    texture.bind(0);\n    textureTarget = texture.glTarget;\n  } else {\n    throw new Error('invalid destination');\n  }\n\n  switch (textureTarget) {\n    case GL.TEXTURE_2D:\n    case GL.TEXTURE_CUBE_MAP:\n      device.gl.copyTexSubImage2D(\n        textureTarget,\n        destinationMipLevel,\n        destinationX,\n        destinationY,\n        sourceX,\n        sourceY,\n        width,\n        height\n      );\n      break;\n    case GL.TEXTURE_2D_ARRAY:\n    case GL.TEXTURE_3D:\n      device.gl.copyTexSubImage3D(\n        textureTarget,\n        destinationMipLevel,\n        destinationX,\n        destinationY,\n        destinationZ,\n        sourceX,\n        sourceY,\n        width,\n        height\n      );\n      break;\n    default:\n  }\n\n  if (texture) {\n    texture.unbind();\n  }\n  device.gl.bindFramebuffer(GL.FRAMEBUFFER, prevHandle);\n  if (destroyFramebuffer) {\n    framebuffer.destroy();\n  }\n}\n\n/** Clear one mip level of a texture *\nfunction _clearTexture(device: WebGLDevice, options: ClearTextureOptions) {\n  const BORDER = 0;\n  const {dimension, width, height, depth = 0, mipLevel = 0} = options;\n  const {glInternalFormat, glFormat, glType, compressed} = options;\n  const glTarget = getWebGLCubeFaceTarget(options.glTarget, dimension, depth);\n\n  switch (dimension) {\n    case '2d-array':\n    case '3d':\n      if (compressed) {\n        // prettier-ignore\n        device.gl.compressedTexImage3D(glTarget, mipLevel, glInternalFormat, width, height, depth, BORDER, null);\n      } else {\n        // prettier-ignore\n        device.gl.texImage3D( glTarget, mipLevel, glInternalFormat, width, height, depth, BORDER, glFormat, glType, null);\n      }\n      break;\n\n    case '2d':\n    case 'cube':\n      if (compressed) {\n        // prettier-ignore\n        device.gl.compressedTexImage2D(glTarget, mipLevel, glInternalFormat, width, height, BORDER, null);\n      } else {\n        // prettier-ignore\n        device.gl.texImage2D(glTarget, mipLevel, glInternalFormat, width, height, BORDER, glFormat, glType, null);\n      }\n      break;\n\n    default:\n      throw new Error(dimension);\n  }\n}\n  */\n\n// function _readTexture(device: WebGLDevice, options: CopyTextureToBufferOptions) {}\n\n// HELPERS\n\n/**\n * In WebGL, cube maps specify faces by overriding target instead of using the depth parameter.\n * @note We still bind the texture using GL.TEXTURE_CUBE_MAP, but we need to use the face-specific target when setting mip levels.\n * @returns glTarget unchanged, if dimension !== 'cube'.\n */\nexport function getWebGLCubeFaceTarget(\n  glTarget: GLTextureTarget,\n  dimension: '1d' | '2d' | '2d-array' | 'cube' | 'cube-array' | '3d',\n  level: number\n): GLTextureTarget | GLTextureCubeMapTarget {\n  return dimension === 'cube' ? GL.TEXTURE_CUBE_MAP_POSITIVE_X + level : glTarget;\n}\n\n/** Wrap a texture in a framebuffer so that we can use WebGL APIs that work on framebuffers */\nfunction getFramebuffer(source: Texture | Framebuffer): {\n  framebuffer: WEBGLFramebuffer;\n  destroyFramebuffer: boolean;\n} {\n  if (source instanceof Texture) {\n    const {width, height, id} = source;\n    const framebuffer = source.device.createFramebuffer({\n      id: `framebuffer-for-${id}`,\n      width,\n      height,\n      colorAttachments: [source]\n    }) as unknown as WEBGLFramebuffer;\n\n    return {framebuffer, destroyFramebuffer: true};\n  }\n  return {framebuffer: source as unknown as WEBGLFramebuffer, destroyFramebuffer: false};\n}\n\n/**\n * Returns number of components in a specific readPixels WebGL format\n * @todo use shadertypes utils instead?\n */\nexport function glFormatToComponents(format): 1 | 2 | 3 | 4 {\n  switch (format) {\n    case GL.ALPHA:\n    case GL.R32F:\n    case GL.RED:\n      return 1;\n    case GL.RG32F:\n    case GL.RG:\n      return 2;\n    case GL.RGB:\n    case GL.RGB32F:\n      return 3;\n    case GL.RGBA:\n    case GL.RGBA32F:\n      return 4;\n    // TODO: Add support for additional WebGL2 formats\n    default:\n      throw new Error('GLFormat');\n  }\n}\n\n/**\n * Return byte count for given readPixels WebGL type\n * @todo use shadertypes utils instead?\n */\nexport function glTypeToBytes(type: GL): 1 | 2 | 4 {\n  switch (type) {\n    case GL.UNSIGNED_BYTE:\n      return 1;\n    case GL.UNSIGNED_SHORT_5_6_5:\n    case GL.UNSIGNED_SHORT_4_4_4_4:\n    case GL.UNSIGNED_SHORT_5_5_5_1:\n      return 2;\n    case GL.FLOAT:\n      return 4;\n    // TODO: Add support for additional WebGL2 types\n    default:\n      throw new Error('GLType');\n  }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6678, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6684, "column": 0}, "map": {"version":3,"file":"webgl-command-encoder.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/resources/webgl-command-encoder.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {CommandEncoder, CommandEncoderProps} from '@luma.gl/core';\nimport type {\n  CopyBufferToBufferOptions,\n  CopyBufferToTextureOptions,\n  CopyTextureToBufferOptions,\n  CopyTextureToTextureOptions,\n  // ClearTextureOptions,\n  // ReadTextureOptions,\n  QuerySet,\n  Buffer\n} from '@luma.gl/core';\n\nimport {WEBGLCommandBuffer} from './webgl-command-buffer';\nimport {WebGLDevice} from '../webgl-device';\n\nexport class WEBGLCommandEncoder extends CommandEncoder {\n  readonly device: WebGLDevice;\n\n  readonly commandBuffer: WEBGLCommandBuffer;\n\n  constructor(device: WebGLDevice, props: CommandEncoderProps) {\n    super(device, props);\n    this.device = device;\n    this.commandBuffer = new WEBGLCommandBuffer(device);\n  }\n\n  override destroy(): void {}\n\n  override finish(): void {\n    this.commandBuffer.submitCommands();\n  }\n\n  // beginRenderPass(GPURenderPassDescriptor descriptor): GPURenderPassEncoder;\n  // beginComputePass(optional GPUComputePassDescriptor descriptor = {}): GPUComputePassEncoder;\n  // finish(options?: {id?: string}): GPUCommandBuffer;\n\n  copyBufferToBuffer(options: CopyBufferToBufferOptions): void {\n    this.commandBuffer.commands.push({name: 'copy-buffer-to-buffer', options});\n  }\n\n  copyBufferToTexture(options: CopyBufferToTextureOptions) {\n    this.commandBuffer.commands.push({name: 'copy-buffer-to-texture', options});\n  }\n\n  copyTextureToBuffer(options: CopyTextureToBufferOptions): void {\n    this.commandBuffer.commands.push({name: 'copy-texture-to-buffer', options});\n  }\n\n  copyTextureToTexture(options: CopyTextureToTextureOptions): void {\n    this.commandBuffer.commands.push({name: 'copy-texture-to-texture', options});\n  }\n\n  // clearTexture(options: ClearTextureOptions): void {\n  //   this.commandBuffer.commands.push({name: 'copy-texture-to-texture', options});\n  // }\n\n  override pushDebugGroup(groupLabel: string): void {}\n  override popDebugGroup() {}\n\n  override insertDebugMarker(markerLabel: string): void {}\n\n  override resolveQuerySet(\n    querySet: QuerySet,\n    destination: Buffer,\n    options?: {\n      firstQuery?: number;\n      queryCount?: number;\n      destinationOffset?: number;\n    }\n  ): void {}\n}\n"],"names":[],"mappings":"AAAA,UAAU;AACV,+BAA+B;AAC/B,oCAAoC;;;;AAcpC,OAAO,EAAC,kBAAkB,EAAC,kCAA+B;AAZ1D,OAAO,EAAC,cAAc,EAAsB,MAAM,eAAe,CAAC;;;AAe5D,MAAO,mBAAoB,oMAAQ,iBAAc;IAC5C,MAAM,CAAc;IAEpB,aAAa,CAAqB;IAE3C,YAAY,MAAmB,EAAE,KAA0B,CAAA;QACzD,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QACrB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,aAAa,GAAG,wMAAI,qBAAkB,CAAC,MAAM,CAAC,CAAC;IACtD,CAAC;IAEQ,OAAO,GAAA,CAAU,CAAC;IAElB,MAAM,GAAA;QACb,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;IACtC,CAAC;IAED,6EAA6E;IAC7E,8FAA8F;IAC9F,qDAAqD;IAErD,kBAAkB,CAAC,OAAkC,EAAA;QACnD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;YAAC,IAAI,EAAE,uBAAuB;YAAE,OAAO;QAAA,CAAC,CAAC,CAAC;IAC7E,CAAC;IAED,mBAAmB,CAAC,OAAmC,EAAA;QACrD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;YAAC,IAAI,EAAE,wBAAwB;YAAE,OAAO;QAAA,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,mBAAmB,CAAC,OAAmC,EAAA;QACrD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;YAAC,IAAI,EAAE,wBAAwB;YAAE,OAAO;QAAA,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,oBAAoB,CAAC,OAAoC,EAAA;QACvD,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC;YAAC,IAAI,EAAE,yBAAyB;YAAE,OAAO;QAAA,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,qDAAqD;IACrD,kFAAkF;IAClF,IAAI;IAEK,cAAc,CAAC,UAAkB,EAAA,CAAS,CAAC;IAC3C,aAAa,GAAA,CAAI,CAAC;IAElB,iBAAiB,CAAC,WAAmB,EAAA,CAAS,CAAC;IAE/C,eAAe,CACtB,QAAkB,EAClB,WAAmB,EACnB,OAIC,EAAA,CACM,CAAC;CACX","ignoreList":[0]}},
    {"offset": {"line": 6741, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6747, "column": 0}, "map": {"version":3,"file":"webgl-device.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/webgl-device.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport type {TypedArray} from '@math.gl/types';\nimport type {\n  DeviceProps,\n  DeviceInfo,\n  DeviceTextureFormatCapabilities,\n  CanvasContextProps,\n  Buffer,\n  Texture,\n  Framebuffer,\n  VertexArray,\n  VertexArrayProps,\n  BufferProps,\n  ShaderProps,\n  // Sampler,\n  SamplerProps,\n  TextureProps,\n  ExternalTexture,\n  ExternalTextureProps,\n  FramebufferProps,\n  // RenderPipeline,\n  RenderPipelineProps,\n  ComputePipeline,\n  ComputePipelineProps,\n  // RenderPass,\n  RenderPassProps,\n  ComputePass,\n  ComputePassProps,\n  // CommandEncoder,\n  CommandEncoderProps,\n  TransformFeedbackProps,\n  QuerySetProps\n} from '@luma.gl/core';\nimport {Device, CanvasContext, log} from '@luma.gl/core';\nimport type {GLExtensions} from '@luma.gl/constants';\nimport {WebGLStateTracker} from '../context/state-tracker/webgl-state-tracker';\nimport {createBrowserContext} from '../context/helpers/create-browser-context';\nimport {getDeviceInfo} from './device-helpers/webgl-device-info';\nimport {WebGLDeviceFeatures} from './device-helpers/webgl-device-features';\nimport {WebGLDeviceLimits} from './device-helpers/webgl-device-limits';\nimport {WebGLCanvasContext} from './webgl-canvas-context';\nimport type {Spector} from '../context/debug/spector-types';\nimport {initializeSpectorJS} from '../context/debug/spector';\nimport {makeDebugContext} from '../context/debug/webgl-developer-tools';\nimport {getTextureFormatCapabilitiesWebGL} from './converters/webgl-texture-table';\nimport {uid} from '../utils/uid';\n\nimport {WEBGLBuffer} from './resources/webgl-buffer';\nimport {WEBGLShader} from './resources/webgl-shader';\nimport {WEBGLSampler} from './resources/webgl-sampler';\nimport {WEBGLTexture} from './resources/webgl-texture';\nimport {WEBGLFramebuffer} from './resources/webgl-framebuffer';\nimport {WEBGLRenderPass} from './resources/webgl-render-pass';\nimport {WEBGLRenderPipeline} from './resources/webgl-render-pipeline';\nimport {WEBGLCommandEncoder} from './resources/webgl-command-encoder';\nimport {WEBGLVertexArray} from './resources/webgl-vertex-array';\nimport {WEBGLTransformFeedback} from './resources/webgl-transform-feedback';\nimport {WEBGLQuerySet} from './resources/webgl-query-set';\n\nimport {readPixelsToArray, readPixelsToBuffer} from './helpers/webgl-texture-utils';\nimport {\n  setGLParameters,\n  getGLParameters,\n  resetGLParameters\n} from '../context/parameters/unified-parameter-api';\nimport {withGLParameters} from '../context/state-tracker/with-parameters';\nimport {getWebGLExtension} from '../context/helpers/webgl-extensions';\n\n/** WebGPU style Device API for a WebGL context */\nexport class WebGLDevice extends Device {\n  //\n  // Public `Device` API\n  //\n\n  /** type of this device */\n  readonly type = 'webgl';\n\n  // Use the ! assertion to handle the case where _reuseDevices causes the constructor to return early\n  /** The underlying WebGL context */\n  readonly handle!: WebGL2RenderingContext;\n  features!: WebGLDeviceFeatures;\n  limits!: WebGLDeviceLimits;\n\n  readonly info!: DeviceInfo;\n  readonly canvasContext!: WebGLCanvasContext;\n\n  readonly lost: Promise<{reason: 'destroyed'; message: string}>;\n\n  private _resolveContextLost?: (value: {reason: 'destroyed'; message: string}) => void;\n\n  /** WebGL2 context. */\n  readonly gl!: WebGL2RenderingContext;\n  readonly debug: boolean = false;\n\n  /** State used by luma.gl classes: TODO - move to canvasContext*/\n  readonly _canvasSizeInfo = {clientWidth: 0, clientHeight: 0, devicePixelRatio: 1};\n\n  /** State used by luma.gl classes - TODO - not used? */\n  readonly _extensions: GLExtensions = {};\n  _polyfilled: boolean = false;\n\n  /** Instance of Spector.js (if initialized) */\n  spectorJS!: Spector | null;\n\n  //\n  // Public API\n  //\n\n  constructor(props: DeviceProps) {\n    super({...props, id: props.id || uid('webgl-device')});\n\n    const canvasContextProps = Device._getCanvasContextProps(props);\n\n    // WebGL requires a canvas to be created before creating the context\n    if (!canvasContextProps) {\n      throw new Error('WebGLDevice requires props.createCanvasContext to be set');\n    }\n\n    // Check if the WebGL context is already associated with a device\n    // Note that this can be avoided in webgl2adapter.create() if\n    // DeviceProps._reuseDevices is set.\n    // @ts-expect-error device is attached to context\n    let device: WebGLDevice | undefined = canvasContextProps.canvas?.gl?.device;\n    if (device) {\n      throw new Error(`WebGL context already attached to device ${device.id}`);\n    }\n\n    // Create and instrument context\n    this.canvasContext = new WebGLCanvasContext(this, canvasContextProps);\n\n    this.lost = new Promise<{reason: 'destroyed'; message: string}>(resolve => {\n      this._resolveContextLost = resolve;\n    });\n\n    const webglContextAttributes: WebGLContextAttributes = {...props.webgl};\n    // Copy props from CanvasContextProps\n    if (canvasContextProps.alphaMode === 'premultiplied') {\n      webglContextAttributes.premultipliedAlpha = true;\n    }\n    if (props.powerPreference !== undefined) {\n      webglContextAttributes.powerPreference = props.powerPreference;\n    }\n\n    // Check if we should attach to an externally created context or create a new context\n    const externalGLContext = this.props._handle as WebGL2RenderingContext | null;\n\n    const gl =\n      externalGLContext ||\n      createBrowserContext(\n        this.canvasContext.canvas,\n        {\n          onContextLost: (event: Event) =>\n            this._resolveContextLost?.({\n              reason: 'destroyed',\n              message: 'Entered sleep mode, or too many apps or browser tabs are using the GPU.'\n            }),\n          // eslint-disable-next-line no-console\n          onContextRestored: (event: Event) => console.log('WebGL context restored')\n        },\n        webglContextAttributes\n      );\n\n    if (!gl) {\n      throw new Error('WebGL context creation failed');\n    }\n\n    // Note that the browser will only create one WebGL context per canvas.\n    // This means that a newly created gl context may already have a device attached to it.\n    // @ts-expect-error luma.gl stores a device reference on the context.\n    device = gl.device;\n    if (device) {\n      if (props._reuseDevices) {\n        log.log(\n          1,\n          `Not creating a new Device, instead returning a reference to Device ${device.id} already attached to WebGL context`,\n          device\n        )();\n        device._reused = true;\n        return device;\n      }\n      throw new Error(`WebGL context already attached to device ${device.id}`);\n    }\n\n    this.handle = gl;\n    this.gl = gl;\n\n    // Add spector debug instrumentation to context\n    // We need to trust spector integration to decide if spector should be initialized\n    // We also run spector instrumentation first, otherwise spector can clobber luma instrumentation.\n    this.spectorJS = initializeSpectorJS({...this.props, gl: this.handle});\n\n    // Instrument context\n    (this.gl as any).device = this; // Update GL context: Link webgl context back to device\n    // TODO - remove, this is only used to detect debug contexts.\n    (this.gl as any)._version = 2; // Update GL context: Store WebGL version field on gl context (HACK to identify debug contexts)\n\n    // initialize luma Device fields\n    this.info = getDeviceInfo(this.gl, this._extensions);\n    this.limits = new WebGLDeviceLimits(this.gl);\n    this.features = new WebGLDeviceFeatures(\n      this.gl,\n      this._extensions,\n      this.props._disabledFeatures\n    );\n    if (this.props._initializeFeatures) {\n      this.features.initializeFeatures();\n    }\n\n    if (canvasContextProps.autoResize !== false) {\n      this.canvasContext.resize();\n    }\n\n    // Install context state tracking\n    const glState = new WebGLStateTracker(this.gl, {\n      log: (...args: any[]) => log.log(1, ...args)()\n    });\n    glState.trackState(this.gl, {copyState: false});\n\n    // DEBUG contexts: Add luma debug instrumentation to the context, force log level to at least 1\n    const debugWebGL = props.debugWebGL || props.debug;\n    const traceWebGL = props.debugWebGL;\n    if (debugWebGL) {\n      this.gl = makeDebugContext(this.gl, {debugWebGL, traceWebGL});\n      log.warn('WebGL debug mode activated. Performance reduced.')();\n      if (props.debugWebGL) {\n        log.level = Math.max(log.level, 1);\n      }\n    }\n  }\n\n  /**\n   * Destroys the device\n   *\n   * @note \"Detaches\" from the WebGL context unless _reuseDevices is true.\n   *\n   * @note The underlying WebGL context is not immediately destroyed,\n   * but may be destroyed later through normal JavaScript garbage collection.\n   * This is a fundamental limitation since WebGL does not offer any\n   * browser API for destroying WebGL contexts.\n   */\n  destroy(): void {\n    // Note that deck.gl (especially in React strict mode) depends on being able\n    // to asynchronously create a Device against the same canvas (i.e. WebGL context)\n    // multiple times and getting the same device back. Since deck.gl is not aware\n    // of this sharing, it might call destroy() multiple times on the same device.\n    // Therefore we must do nothing in destroy() if props._reuseDevices is true\n    if (!this.props._reuseDevices && !this._reused) {\n      // Delete the reference to the device that we store on the WebGL context\n      delete (this.gl as any).device;\n    }\n  }\n\n  get isLost(): boolean {\n    return this.gl.isContextLost();\n  }\n\n  // IMPLEMENTATION OF ABSTRACT DEVICE\n\n  createCanvasContext(props?: CanvasContextProps): CanvasContext {\n    throw new Error('WebGL only supports a single canvas');\n  }\n\n  createBuffer(props: BufferProps | ArrayBuffer | ArrayBufferView): WEBGLBuffer {\n    const newProps = this._normalizeBufferProps(props);\n    return new WEBGLBuffer(this, newProps);\n  }\n\n  createTexture(props: TextureProps): WEBGLTexture {\n    return new WEBGLTexture(this, props);\n  }\n\n  createExternalTexture(props: ExternalTextureProps): ExternalTexture {\n    throw new Error('createExternalTexture() not implemented'); // return new Program(props);\n  }\n\n  createSampler(props: SamplerProps): WEBGLSampler {\n    return new WEBGLSampler(this, props);\n  }\n\n  createShader(props: ShaderProps): WEBGLShader {\n    return new WEBGLShader(this, props);\n  }\n\n  createFramebuffer(props: FramebufferProps): WEBGLFramebuffer {\n    return new WEBGLFramebuffer(this, props);\n  }\n\n  createVertexArray(props: VertexArrayProps): VertexArray {\n    return new WEBGLVertexArray(this, props);\n  }\n\n  createTransformFeedback(props: TransformFeedbackProps): WEBGLTransformFeedback {\n    return new WEBGLTransformFeedback(this, props);\n  }\n\n  createQuerySet(props: QuerySetProps): WEBGLQuerySet {\n    return new WEBGLQuerySet(this, props);\n  }\n\n  createRenderPipeline(props: RenderPipelineProps): WEBGLRenderPipeline {\n    return new WEBGLRenderPipeline(this, props);\n  }\n\n  beginRenderPass(props: RenderPassProps): WEBGLRenderPass {\n    return new WEBGLRenderPass(this, props);\n  }\n\n  createComputePipeline(props?: ComputePipelineProps): ComputePipeline {\n    throw new Error('ComputePipeline not supported in WebGL');\n  }\n\n  beginComputePass(props: ComputePassProps): ComputePass {\n    throw new Error('ComputePass not supported in WebGL');\n  }\n\n  private renderPass: WEBGLRenderPass | null = null;\n\n  override createCommandEncoder(props: CommandEncoderProps = {}): WEBGLCommandEncoder {\n    return new WEBGLCommandEncoder(this, props);\n  }\n\n  /**\n   * Offscreen Canvas Support: Commit the frame\n   * https://developer.mozilla.org/en-US/docs/Web/API/WebGL2RenderingContext/commit\n   * Chrome's offscreen canvas does not require gl.commit\n   */\n  submit(): void {\n    this.renderPass?.end();\n    this.renderPass = null;\n    // this.canvasContext.commit();\n  }\n\n  //\n  // TEMPORARY HACKS - will be removed in v9.1\n  //\n\n  /** @deprecated - should use command encoder */\n  override readPixelsToArrayWebGL(\n    source: Framebuffer | Texture,\n    options?: {\n      sourceX?: number;\n      sourceY?: number;\n      sourceFormat?: number;\n      sourceAttachment?: number;\n      target?: Uint8Array | Uint16Array | Float32Array;\n      // following parameters are auto deduced if not provided\n      sourceWidth?: number;\n      sourceHeight?: number;\n      sourceType?: number;\n    }\n  ): Uint8Array | Uint16Array | Float32Array {\n    return readPixelsToArray(source, options);\n  }\n\n  /** @deprecated - should use command encoder */\n  override readPixelsToBufferWebGL(\n    source: Framebuffer | Texture,\n    options?: {\n      sourceX?: number;\n      sourceY?: number;\n      sourceFormat?: number;\n      target?: Buffer; // A new Buffer object is created when not provided.\n      targetByteOffset?: number; // byte offset in buffer object\n      // following parameters are auto deduced if not provided\n      sourceWidth?: number;\n      sourceHeight?: number;\n      sourceType?: number;\n    }\n  ): Buffer {\n    return readPixelsToBuffer(source, options);\n  }\n\n  override setParametersWebGL(parameters: any): void {\n    setGLParameters(this.gl, parameters);\n  }\n\n  override getParametersWebGL(parameters: any): any {\n    return getGLParameters(this.gl, parameters);\n  }\n\n  override withParametersWebGL(parameters: any, func: any): any {\n    return withGLParameters(this.gl, parameters, func);\n  }\n\n  override resetWebGL(): void {\n    log.warn('WebGLDevice.resetWebGL is deprecated, use only for debugging')();\n    resetGLParameters(this.gl);\n  }\n\n  override _getDeviceSpecificTextureFormatCapabilities(\n    capabilities: DeviceTextureFormatCapabilities\n  ): DeviceTextureFormatCapabilities {\n    return getTextureFormatCapabilitiesWebGL(this.gl, capabilities, this._extensions);\n  }\n\n  //\n  // WebGL-only API (not part of `Device` API)\n  //\n\n  /**\n   * Triggers device (or WebGL context) loss.\n   * @note primarily intended for testing how application reacts to device loss\n   */\n  override loseDevice(): boolean {\n    let deviceLossTriggered = false;\n    const extensions = this.getExtension('WEBGL_lose_context');\n    const ext = extensions.WEBGL_lose_context;\n    if (ext) {\n      deviceLossTriggered = true;\n      ext.loseContext();\n      // ext.loseContext should trigger context loss callback but the platform may not do this, so do it explicitly\n    }\n    this._resolveContextLost?.({\n      reason: 'destroyed',\n      message: 'Application triggered context loss'\n    });\n    return deviceLossTriggered;\n  }\n\n  /** Save current WebGL context state onto an internal stack */\n  pushState(): void {\n    const webglState = WebGLStateTracker.get(this.gl);\n    webglState.push();\n  }\n\n  /** Restores previously saved context state */\n  popState(): void {\n    const webglState = WebGLStateTracker.get(this.gl);\n    webglState.pop();\n  }\n\n  /**\n   * Storing data on a special field on WebGLObjects makes that data visible in SPECTOR chrome debug extension\n   * luma.gl ids and props can be inspected\n   */\n  setSpectorMetadata(handle: unknown, props: Record<string, unknown>) {\n    // @ts-expect-error\n    // eslint-disable-next-line camelcase\n    handle.__SPECTOR_Metadata = props;\n  }\n\n  /**\n   * Returns the GL.<KEY> constant that corresponds to a numeric value of a GL constant\n   * Be aware that there are some duplicates especially for constants that are 0,\n   * so this isn't guaranteed to return the right key in all cases.\n   */\n  getGLKey(value: unknown, options?: {emptyIfUnknown?: boolean}): string {\n    const number = Number(value);\n    for (const key in this.gl) {\n      // @ts-ignore expect-error depends on settings\n      if (this.gl[key] === number) {\n        return `GL.${key}`;\n      }\n    }\n    // No constant found. Stringify the value and return it.\n    return options?.emptyIfUnknown ? '' : String(value);\n  }\n\n  /**\n   * Returns a map with any GL.<KEY> constants mapped to strings, both for keys and values\n   */\n  getGLKeys(glParameters: Record<number, unknown>): Record<string, string> {\n    const opts = {emptyIfUnknown: true};\n    return Object.entries(glParameters).reduce<Record<string, string>>((keys, [key, value]) => {\n      // eslint-disable-next-line @typescript-eslint/no-base-to-string\n      keys[`${key}:${this.getGLKey(key, opts)}`] = `${value}:${this.getGLKey(value, opts)}`;\n      return keys;\n    }, {});\n  }\n\n  /** Store constants */\n  _constants: (TypedArray | null)[];\n\n  /**\n   * Set a constant value for a location. Disabled attributes at that location will read from this value\n   * @note WebGL constants are stored globally on the WebGL context, not the VertexArray\n   * so they need to be updated before every render\n   * @todo - remember/cache values to avoid setting them unnecessarily?\n   */\n  setConstantAttributeWebGL(location: number, constant: TypedArray): void {\n    const maxVertexAttributes = this.limits.maxVertexAttributes;\n    this._constants = this._constants || new Array(maxVertexAttributes).fill(null);\n    const currentConstant = this._constants[location];\n    if (currentConstant && compareConstantArrayValues(currentConstant, constant)) {\n      log.info(\n        1,\n        `setConstantAttributeWebGL(${location}) could have been skipped, value unchanged`\n      )();\n    }\n    this._constants[location] = constant;\n\n    switch (constant.constructor) {\n      case Float32Array:\n        setConstantFloatArray(this, location, constant as Float32Array);\n        break;\n      case Int32Array:\n        setConstantIntArray(this, location, constant as Int32Array);\n        break;\n      case Uint32Array:\n        setConstantUintArray(this, location, constant as Uint32Array);\n        break;\n      default:\n        throw new Error('constant');\n    }\n  }\n\n  /** Ensure extensions are only requested once */\n  getExtension(name: keyof GLExtensions): GLExtensions {\n    getWebGLExtension(this.gl, name, this._extensions);\n    return this._extensions;\n  }\n}\n\n/** Set constant float array attribute */\nfunction setConstantFloatArray(device: WebGLDevice, location: number, array: Float32Array): void {\n  switch (array.length) {\n    case 1:\n      device.gl.vertexAttrib1fv(location, array);\n      break;\n    case 2:\n      device.gl.vertexAttrib2fv(location, array);\n      break;\n    case 3:\n      device.gl.vertexAttrib3fv(location, array);\n      break;\n    case 4:\n      device.gl.vertexAttrib4fv(location, array);\n      break;\n    default:\n    // assert(false);\n  }\n}\n\n/** Set constant signed int array attribute */\nfunction setConstantIntArray(device: WebGLDevice, location: number, array: Int32Array): void {\n  device.gl.vertexAttribI4iv(location, array);\n  // TODO - not clear if we need to use the special forms, more testing needed\n  // switch (array.length) {\n  //   case 1:\n  //     gl.vertexAttribI1iv(location, array);\n  //     break;\n  //   case 2:\n  //     gl.vertexAttribI2iv(location, array);\n  //     break;\n  //   case 3:\n  //     gl.vertexAttribI3iv(location, array);\n  //     break;\n  //   case 4:\n  //     break;\n  //   default:\n  //     assert(false);\n  // }\n}\n\n/** Set constant unsigned int array attribute */\nfunction setConstantUintArray(device: WebGLDevice, location: number, array: Uint32Array) {\n  device.gl.vertexAttribI4uiv(location, array);\n  // TODO - not clear if we need to use the special forms, more testing needed\n  // switch (array.length) {\n  //   case 1:\n  //     gl.vertexAttribI1uiv(location, array);\n  //     break;\n  //   case 2:\n  //     gl.vertexAttribI2uiv(location, array);\n  //     break;\n  //   case 3:\n  //     gl.vertexAttribI3uiv(location, array);\n  //     break;\n  //   case 4:\n  //     gl.vertexAttribI4uiv(location, array);\n  //     break;\n  //   default:\n  //     assert(false);\n  // }\n}\n\n/**\n * Compares contents of two typed arrays\n * @todo max length?\n */\nfunction compareConstantArrayValues(v1: TypedArray, v2: TypedArray): boolean {\n  if (!v1 || !v2 || v1.length !== v2.length || v1.constructor !== v2.constructor) {\n    return false;\n  }\n  for (let i = 0; i < v1.length; ++i) {\n    if (v1[i] !== v2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7206, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7212, "column": 0}, "map": {"version":3,"file":"polyfill-webgl1-extensions.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/context/polyfills/polyfill-webgl1-extensions.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Goal is to make WebGL2 contexts look like WebGL1\n// @note Partly inspired by with some older code from the `regl` library\n\n/* eslint-disable camelcase */\n\nimport {GL} from '@luma.gl/constants';\n\n// webgl1 extensions natively supported by webgl2\nconst WEBGL1_STATIC_EXTENSIONS = {\n  WEBGL_depth_texture: {\n    UNSIGNED_INT_24_8_WEBGL: GL.UNSIGNED_INT_24_8\n  } as const satisfies WEBGL_depth_texture,\n  OES_element_index_uint: {} as const satisfies OES_element_index_uint,\n  OES_texture_float: {} as const satisfies OES_texture_float,\n  OES_texture_half_float: {\n    // @ts-expect-error different numbers?\n    HALF_FLOAT_OES: GL.HALF_FLOAT\n  } as const satisfies OES_texture_half_float,\n  EXT_color_buffer_float: {} as const satisfies EXT_color_buffer_float,\n  OES_standard_derivatives: {\n    FRAGMENT_SHADER_DERIVATIVE_HINT_OES: GL.FRAGMENT_SHADER_DERIVATIVE_HINT\n  } as const satisfies OES_standard_derivatives,\n  EXT_frag_depth: {} as const satisfies EXT_frag_depth,\n  EXT_blend_minmax: {\n    MIN_EXT: GL.MIN,\n    MAX_EXT: GL.MAX\n  } as const satisfies EXT_blend_minmax,\n  EXT_shader_texture_lod: {} as const satisfies EXT_shader_texture_lod\n};\n\nconst getWEBGL_draw_buffers = (gl: WebGL2RenderingContext) =>\n  ({\n    drawBuffersWEBGL(buffers: number[]) {\n      return gl.drawBuffers(buffers);\n    },\n    COLOR_ATTACHMENT0_WEBGL: GL.COLOR_ATTACHMENT0,\n    COLOR_ATTACHMENT1_WEBGL: GL.COLOR_ATTACHMENT1,\n    COLOR_ATTACHMENT2_WEBGL: GL.COLOR_ATTACHMENT2,\n    COLOR_ATTACHMENT3_WEBGL: GL.COLOR_ATTACHMENT3\n  }) as const satisfies Partial<WEBGL_draw_buffers>; // - too many fields\n\nconst getOES_vertex_array_object = (gl: WebGL2RenderingContext) =>\n  ({\n    VERTEX_ARRAY_BINDING_OES: GL.VERTEX_ARRAY_BINDING,\n    createVertexArrayOES() {\n      return gl.createVertexArray();\n    },\n    deleteVertexArrayOES(vertexArray: WebGLVertexArrayObject): void {\n      return gl.deleteVertexArray(vertexArray);\n    },\n    isVertexArrayOES(vertexArray: WebGLVertexArrayObject): boolean {\n      return gl.isVertexArray(vertexArray);\n    },\n    bindVertexArrayOES(vertexArray: WebGLVertexArrayObject): void {\n      return gl.bindVertexArray(vertexArray);\n    }\n  }) as const satisfies OES_vertex_array_object;\n\nconst getANGLE_instanced_arrays = (gl: WebGL2RenderingContext) =>\n  ({\n    VERTEX_ATTRIB_ARRAY_DIVISOR_ANGLE: 0x88fe,\n    drawArraysInstancedANGLE(...args) {\n      return gl.drawArraysInstanced(...args);\n    },\n    drawElementsInstancedANGLE(...args) {\n      return gl.drawElementsInstanced(...args);\n    },\n    vertexAttribDivisorANGLE(...args) {\n      return gl.vertexAttribDivisor(...args);\n    }\n  }) as const satisfies ANGLE_instanced_arrays;\n\n/**\n * Make browser return WebGL2 contexts even if WebGL1 contexts are requested\n * @param enforce\n * @returns\n */\nexport function enforceWebGL2(enforce: boolean = true): void {\n  const prototype = HTMLCanvasElement.prototype as any;\n  if (!enforce && prototype.originalGetContext) {\n    // Reset the original getContext function\n    prototype.getContext = prototype.originalGetContext;\n    prototype.originalGetContext = undefined;\n    return;\n  }\n\n  // Store the original getContext function\n  prototype.originalGetContext = prototype.getContext;\n\n  // Override the getContext function\n  prototype.getContext = function (contextId: string, options?: WebGLContextAttributes) {\n    // Attempt to force WebGL2 for all WebGL1 contexts\n    if (contextId === 'webgl' || contextId === 'experimental-webgl') {\n      const context = this.originalGetContext('webgl2', options) as WebGL2RenderingContext;\n      // Work around test mocking\n      if (context instanceof HTMLElement) {\n        polyfillWebGL1Extensions(context);\n      }\n      return context;\n    }\n    // For any other type, return the original context\n    return this.originalGetContext(contextId, options);\n  };\n}\n\n/** Install WebGL1-only extensions on WebGL2 contexts */\nexport function polyfillWebGL1Extensions(gl: WebGL2RenderingContext): void {\n  // Enable, to support float and half-float textures\n  gl.getExtension('EXT_color_buffer_float');\n\n  // WebGL1 extensions implemented using WebGL2 APIs\n  const boundExtensions = {\n    ...WEBGL1_STATIC_EXTENSIONS,\n    WEBGL_disjoint_timer_query: gl.getExtension('EXT_disjoint_timer_query_webgl2'),\n    WEBGL_draw_buffers: getWEBGL_draw_buffers(gl),\n    OES_vertex_array_object: getOES_vertex_array_object(gl),\n    ANGLE_instanced_arrays: getANGLE_instanced_arrays(gl)\n  };\n\n  // Override gl.getExtension\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const originalGetExtension = gl.getExtension;\n  gl.getExtension = function (extensionName: string) {\n    const ext = originalGetExtension.call(gl, extensionName);\n    if (ext) {\n      return ext;\n    }\n\n    // Injected extensions\n    if (extensionName in boundExtensions) {\n      return boundExtensions[extensionName];\n    }\n\n    return null;\n  };\n\n  // Override gl.getSupportedExtensions\n  // eslint-disable-next-line @typescript-eslint/unbound-method\n  const originalGetSupportedExtensions = gl.getSupportedExtensions;\n  gl.getSupportedExtensions = function (): string[] | null {\n    const extensions = originalGetSupportedExtensions.apply(gl) || [];\n    return extensions?.concat(Object.keys(boundExtensions));\n  };\n}\n\n// Update unsized WebGL1 formats to sized WebGL2 formats\n// todo move to texture format file\n// export function getInternalFormat(gl: WebGL2RenderingContext, format: GL, type: GL): GL {\n//   // webgl2 texture formats\n//   // https://webgl2fundamentals.org/webgl/lessons/webgl-data-textures.html\n//   switch (format) {\n//     case GL.DEPTH_COMPONENT:\n//       return GL.DEPTH_COMPONENT24;\n//     case GL.DEPTH_STENCIL:\n//       return GL.DEPTH24_STENCIL8;\n//     case GL.RGBA:\n//       return type === GL.HALF_FLOAT ? GL.RGBA16F : GL.RGBA32F;\n//     case GL.RGB:\n//       return type === GL.HALF_FLOAT ? GL.RGB16F : GL.RGB32F;\n//     default:\n//       return format;\n//   }\n// }\n\n/*\n// texture type to update on the fly\nexport function getTextureType(gl: WebGL2RenderingContext, type: GL): GL {\n  if (type === HALF_FLOAT_OES) {\n    return GL.HALF_FLOAT;\n  }\n  return type;\n}\n\n  // And texImage2D to convert the internalFormat to webgl2.\n  const webgl2 = this;\n  const origTexImage = gl.texImage2D;\n  gl.texImage2D = function (target, miplevel, iformat, a, typeFor6, c, d, typeFor9, f) {\n    if (arguments.length == 6) {\n      var ifmt = webgl2.getInternalFormat(gl, iformat, typeFor6);\n      origTexImage.apply(gl, [target, miplevel, ifmt, a, webgl.getTextureType(gl, typeFor6), c]);\n    } else {\n      // arguments.length == 9\n      var ifmt = webgl2.getInternalFormat(gl, iformat, typeFor9);\n      origTexImage.apply(gl, [\n        target,\n        miplevel,\n        ifmt,\n        a,\n        typeFor6,\n        c,\n        d,\n        webgl2.getTextureType(gl, typeFor9),\n        f\n      ]);\n    }\n  };\n};\n*/\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7389, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 7395, "column": 0}, "map": {"version":3,"file":"webgl-adapter.js","sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40luma.gl/webgl/src/adapter/webgl-adapter.ts"],"sourcesContent":["// luma.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport {Adapter, Device, DeviceProps, log} from '@luma.gl/core';\nimport {WebGLDevice} from './webgl-device';\nimport {enforceWebGL2} from '../context/polyfills/polyfill-webgl1-extensions';\nimport {loadSpectorJS, DEFAULT_SPECTOR_PROPS} from '../context/debug/spector';\nimport {loadWebGLDeveloperTools} from '../context/debug/webgl-developer-tools';\n\nconst LOG_LEVEL = 1;\n\nexport class WebGLAdapter extends Adapter {\n  /** type of device's created by this adapter */\n  readonly type: Device['type'] = 'webgl';\n\n  constructor() {\n    super();\n\n    // Add spector default props to device default props, so that runtime settings are observed\n    Device.defaultProps = {...Device.defaultProps, ...DEFAULT_SPECTOR_PROPS};\n\n    // @ts-ignore DEPRECATED For backwards compatibility luma.registerDevices\n    WebGLDevice.adapter = this;\n  }\n\n  /** Check if WebGL 2 is available */\n  isSupported(): boolean {\n    return typeof WebGL2RenderingContext !== 'undefined';\n  }\n\n  /** Force any created WebGL contexts to be WebGL2 contexts, polyfilled with WebGL1 extensions */\n  enforceWebGL2(enable: boolean): void {\n    enforceWebGL2(enable);\n  }\n\n  /**\n   * Get a device instance from a GL context\n   * Creates a WebGLCanvasContext against the contexts canvas\n   * @note autoResize will be disabled, assuming that whoever created the external context will be handling resizes.\n   * @param gl\n   * @returns\n   */\n  async attach(gl: Device | WebGL2RenderingContext): Promise<WebGLDevice> {\n    if (gl instanceof WebGLDevice) {\n      return gl;\n    }\n    // @ts-expect-error\n    if (gl?.device instanceof Device) {\n      // @ts-expect-error\n      return gl.device as WebGLDevice;\n    }\n    if (!isWebGL(gl)) {\n      throw new Error('Invalid WebGL2RenderingContext');\n    }\n\n    // We create a new device using the provided WebGL context and its canvas\n    // Assume that whoever created the external context will be handling resizes.\n    return new WebGLDevice({\n      _handle: gl,\n      createCanvasContext: {canvas: gl.canvas, autoResize: false}\n    });\n  }\n\n  async create(props: DeviceProps = {}): Promise<WebGLDevice> {\n    log.groupCollapsed(LOG_LEVEL, 'WebGLDevice created')();\n\n    const promises: Promise<unknown>[] = [];\n\n    // Load webgl and spector debug scripts from CDN if requested\n    if (props.debugWebGL || props.debug) {\n      promises.push(loadWebGLDeveloperTools());\n    }\n\n    if (props.debugSpectorJS) {\n      promises.push(loadSpectorJS(props));\n    }\n\n    // Wait for all the loads to settle before creating the context.\n    // The Device.create() functions are async, so in contrast to the constructor, we can `await` here.\n    const results = await Promise.allSettled(promises);\n    for (const result of results) {\n      if (result.status === 'rejected') {\n        log.error(`Failed to initialize debug libraries ${result.reason}`)();\n      }\n    }\n\n    const device = new WebGLDevice(props);\n\n    // Log some debug info about the newly created context\n    const message = `\\\n${device._reused ? 'Reusing' : 'Created'} device with WebGL2 ${device.debug ? 'debug ' : ''}context: \\\n${device.info.vendor}, ${device.info.renderer} for canvas: ${device.canvasContext.id}`;\n    log.probe(LOG_LEVEL, message)();\n    log.table(LOG_LEVEL, device.info)();\n\n    log.groupEnd(LOG_LEVEL)();\n\n    return device;\n  }\n}\n\n/** Check if supplied parameter is a WebGL2RenderingContext */\nfunction isWebGL(gl: any): gl is WebGL2RenderingContext {\n  if (typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext) {\n    return true;\n  }\n  // Look for debug contexts, headless gl etc\n  return Boolean(gl && Number.isFinite(gl._version));\n}\n\nexport const webgl2Adapter = new WebGLAdapter();\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 7498, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}