{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/env-utils/assert.js"],"sourcesContent":["/**\n * Throws an `Error` with the optional `message` if `condition` is falsy\n * @note Replacement for the external assert method to reduce bundle size\n */\nexport function assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'loader assertion failed.');\n    }\n}\n"],"names":[],"mappings":"AAAA;;;CAGC;;;AACM,SAAS,OAAO,SAAS,EAAE,OAAO;IACrC,IAAI,CAAC,WAAW;QACZ,MAAM,IAAI,MAAM,WAAW;IAC/B;AACJ","ignoreList":[0]}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/env-utils/globals.js"],"sourcesContent":["// Purpose: include this in your module to avoid\n// dependencies on micro modules like 'global' and 'is-browser';\n/* eslint-disable no-restricted-globals */\nconst globals = {\n    self: typeof self !== 'undefined' && self,\n    window: typeof window !== 'undefined' && window,\n    global: typeof global !== 'undefined' && global,\n    document: typeof document !== 'undefined' && document\n};\nconst self_ = globals.self || globals.window || globals.global || {};\nconst window_ = globals.window || globals.self || globals.global || {};\nconst global_ = globals.global || globals.self || globals.window || {};\nconst document_ = globals.document || {};\nexport { self_ as self, window_ as window, global_ as global, document_ as document };\n/** true if running in a browser */\nexport const isBrowser = \n// @ts-ignore process does not exist on browser\nBoolean(typeof process !== 'object' || String(process) !== '[object process]' || process.browser);\n/** true if running in a worker thread */\nexport const isWorker = typeof importScripts === 'function';\n// Extract node major version\nconst matches = typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n/** Major Node version (as a number) */\nexport const nodeVersion = (matches && parseFloat(matches[1])) || 0;\n"],"names":[],"mappings":"AAAA,gDAAgD;AAChD,gEAAgE;AAChE,wCAAwC;;;;;;;;;AAezB;AAdf,MAAM,UAAU;IACZ,MAAM,OAAO,SAAS,eAAe;IACrC,QAAQ,OAAO,WAAW,eAAe;IACzC,QAAQ,OAAO,WAAW,eAAe;IACzC,UAAU,OAAO,aAAa,eAAe;AACjD;AACA,MAAM,QAAQ,QAAQ,IAAI,IAAI,QAAQ,MAAM,IAAI,QAAQ,MAAM,IAAI,CAAC;AACnE,MAAM,UAAU,QAAQ,MAAM,IAAI,QAAQ,IAAI,IAAI,QAAQ,MAAM,IAAI,CAAC;AACrE,MAAM,UAAU,QAAQ,MAAM,IAAI,QAAQ,IAAI,IAAI,QAAQ,MAAM,IAAI,CAAC;AACrE,MAAM,YAAY,QAAQ,QAAQ,IAAI,CAAC;;AAGhC,MAAM,YACb,+CAA+C;AAC/C,QAAQ,OAAO,gKAAA,CAAA,UAAO,KAAK,YAAY,OAAO,gKAAA,CAAA,UAAO,MAAM;AAEpD,MAAM,WAAW,OAAO,kBAAkB;AACjD,6BAA6B;AAC7B,MAAM,UAAU,OAAO,gKAAA,CAAA,UAAO,KAAK,eAAe,gKAAA,CAAA,UAAO,CAAC,OAAO,IAAI,YAAY,IAAI,CAAC,gKAAA,CAAA,UAAO,CAAC,OAAO;AAE9F,MAAM,cAAc,AAAC,WAAW,WAAW,OAAO,CAAC,EAAE,KAAM","ignoreList":[0]}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/log-utils/log.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { Log } from '@probe.gl/log';\n// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\nconst version = VERSION[0] >= '0' && VERSION[0] <= '9' ? `v${VERSION}` : '';\n// Make sure we set the global variable\nfunction createLog() {\n    const log = new Log({ id: 'loaders.gl' });\n    globalThis.loaders = globalThis.loaders || {};\n    globalThis.loaders.log = log;\n    globalThis.loaders.version = version;\n    globalThis.probe = globalThis.probe || {};\n    globalThis.probe.loaders = log;\n    return log;\n}\nexport const log = createLog();\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;AACpC;;AAIO,MAAM,UAAU,OAAO,YAAY,cAAc,UAAU;AAClE,MAAM,UAAU,OAAO,CAAC,EAAE,IAAI,OAAO,OAAO,CAAC,EAAE,IAAI,MAAM,CAAC,CAAC,EAAE,SAAS,GAAG;AACzE,uCAAuC;AACvC,SAAS;IACL,MAAM,MAAM,IAAI,sJAAA,CAAA,MAAG,CAAC;QAAE,IAAI;IAAa;IACvC,WAAW,OAAO,GAAG,WAAW,OAAO,IAAI,CAAC;IAC5C,WAAW,OAAO,CAAC,GAAG,GAAG;IACzB,WAAW,OAAO,CAAC,OAAO,GAAG;IAC7B,WAAW,KAAK,GAAG,WAAW,KAAK,IAAI,CAAC;IACxC,WAAW,KAAK,CAAC,OAAO,GAAG;IAC3B,OAAO;AACX;AACO,MAAM,MAAM","ignoreList":[0]}},
    {"offset": {"line": 83, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/module-utils/js-module-utils.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { log } from \"../log-utils/log.js\";\n/**\n * Register application-imported modules\n * These modules are typically to big to bundle, or may have issues on some bundlers/environments\n */\nexport function registerJSModules(modules) {\n    globalThis.loaders ||= {};\n    globalThis.loaders.modules ||= {};\n    Object.assign(globalThis.loaders.modules, modules);\n}\n/**\n * Get a pre-registered application-imported module, warn if not present\n */\nexport function checkJSModule(name, caller) {\n    const module = globalThis.loaders?.modules?.[name];\n    if (!module) {\n        log.warn(`${caller}: ${name} library not installed`)();\n    }\n}\n/**\n * Get a pre-registered application-imported module, throw if not present\n */\nexport function getJSModule(name, caller) {\n    const module = globalThis.loaders?.modules?.[name];\n    if (!module) {\n        throw new Error(`${caller}: ${name} library not installed`);\n    }\n    return module;\n}\n/**\n * Get a pre-registered application-imported module, return null if not present\n */\nexport function getJSModuleOrNull(name) {\n    const module = globalThis.loaders?.modules?.[name];\n    return module || null;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;;;AACpC;;AAKO,SAAS,kBAAkB,OAAO;IACrC,WAAW,OAAO,KAAK,CAAC;IACxB,WAAW,OAAO,CAAC,OAAO,KAAK,CAAC;IAChC,OAAO,MAAM,CAAC,WAAW,OAAO,CAAC,OAAO,EAAE;AAC9C;AAIO,SAAS,cAAc,IAAI,EAAE,MAAM;IACtC,MAAM,SAAS,WAAW,OAAO,EAAE,SAAS,CAAC,KAAK;IAClD,IAAI,CAAC,QAAQ;QACT,2LAAA,CAAA,MAAG,CAAC,IAAI,CAAC,GAAG,OAAO,EAAE,EAAE,KAAK,sBAAsB,CAAC;IACvD;AACJ;AAIO,SAAS,YAAY,IAAI,EAAE,MAAM;IACpC,MAAM,SAAS,WAAW,OAAO,EAAE,SAAS,CAAC,KAAK;IAClD,IAAI,CAAC,QAAQ;QACT,MAAM,IAAI,MAAM,GAAG,OAAO,EAAE,EAAE,KAAK,sBAAsB,CAAC;IAC9D;IACA,OAAO;AACX;AAIO,SAAS,kBAAkB,IAAI;IAClC,MAAM,SAAS,WAAW,OAAO,EAAE,SAAS,CAAC,KAAK;IAClD,OAAO,UAAU;AACrB","ignoreList":[0]}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/path-utils/file-aliases.js"],"sourcesContent":["// Simple file alias mechanisms for tests.\nlet pathPrefix = '';\nconst fileAliases = {};\n/*\n * Set a relative path prefix\n */\nexport function setPathPrefix(prefix) {\n    pathPrefix = prefix;\n}\n/*\n * Get the relative path prefix\n */\nexport function getPathPrefix() {\n    return pathPrefix;\n}\n/**\n *\n * @param aliases\n *\n * Note: addAliases are an experimental export, they are only for testing of loaders.gl loaders\n * not intended as a generic aliasing mechanism\n */\nexport function addAliases(aliases) {\n    Object.assign(fileAliases, aliases);\n}\n/**\n * Resolves aliases and adds path-prefix to paths\n */\nexport function resolvePath(filename) {\n    for (const alias in fileAliases) {\n        if (filename.startsWith(alias)) {\n            const replacement = fileAliases[alias];\n            filename = filename.replace(alias, replacement);\n        }\n    }\n    if (!filename.startsWith('http://') && !filename.startsWith('https://')) {\n        filename = `${pathPrefix}${filename}`;\n    }\n    return filename;\n}\n"],"names":[],"mappings":"AAAA,0CAA0C;;;;;;;AAC1C,IAAI,aAAa;AACjB,MAAM,cAAc,CAAC;AAId,SAAS,cAAc,MAAM;IAChC,aAAa;AACjB;AAIO,SAAS;IACZ,OAAO;AACX;AAQO,SAAS,WAAW,OAAO;IAC9B,OAAO,MAAM,CAAC,aAAa;AAC/B;AAIO,SAAS,YAAY,QAAQ;IAChC,IAAK,MAAM,SAAS,YAAa;QAC7B,IAAI,SAAS,UAAU,CAAC,QAAQ;YAC5B,MAAM,cAAc,WAAW,CAAC,MAAM;YACtC,WAAW,SAAS,OAAO,CAAC,OAAO;QACvC;IACJ;IACA,IAAI,CAAC,SAAS,UAAU,CAAC,cAAc,CAAC,SAAS,UAAU,CAAC,aAAa;QACrE,WAAW,GAAG,aAAa,UAAU;IACzC;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/path-utils/get-cwd.js"],"sourcesContent":["// loaders.gl MIT license\nexport function getCWD() {\n    if (typeof process !== 'undefined' && typeof process.cwd !== 'undefined') {\n        return process.cwd();\n    }\n    const pathname = window.location?.pathname;\n    return pathname?.slice(0, pathname.lastIndexOf('/') + 1) || '';\n}\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;AAEV;AADR,SAAS;IACZ,IAAI,OAAO,gKAAA,CAAA,UAAO,KAAK,eAAe,OAAO,gKAAA,CAAA,UAAO,CAAC,GAAG,KAAK,aAAa;QACtE,OAAO,gKAAA,CAAA,UAAO,CAAC,GAAG;IACtB;IACA,MAAM,WAAW,OAAO,QAAQ,EAAE;IAClC,OAAO,UAAU,MAAM,GAAG,SAAS,WAAW,CAAC,OAAO,MAAM;AAChE","ignoreList":[0]}},
    {"offset": {"line": 176, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 182, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/path-utils/path.js"],"sourcesContent":["// Beginning of a minimal implementation of the Node.js path API, that doesn't pull in big polyfills.\nimport { getCWD } from \"./get-cwd.js\";\n/**\n * Replacement for Node.js path.filename\n * @param url\n */\nexport function filename(url) {\n    const slashIndex = url ? url.lastIndexOf('/') : -1;\n    return slashIndex >= 0 ? url.substr(slashIndex + 1) : '';\n}\n/**\n * Replacement for Node.js path.dirname\n * @param url\n */\nexport function dirname(url) {\n    const slashIndex = url ? url.lastIndexOf('/') : -1;\n    return slashIndex >= 0 ? url.substr(0, slashIndex) : '';\n}\n/**\n * Replacement for Node.js path.join\n * @param parts\n */\nexport function join(...parts) {\n    const separator = '/';\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(`^${separator}`), '');\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(`${separator}$`), '');\n        }\n        return part;\n    });\n    return parts.join(separator);\n}\n/* eslint-disable no-continue */\n/**\n * https://nodejs.org/api/path.html#path_path_resolve_paths\n * @param paths A sequence of paths or path segments.\n * @return resolved path\n * Forked from BTOdell/path-resolve under MIT license\n * @see https://github.com/BTOdell/path-resolve/blob/master/LICENSE\n */\nexport function resolve(...components) {\n    const paths = [];\n    for (let _i = 0; _i < components.length; _i++) {\n        paths[_i] = components[_i];\n    }\n    let resolvedPath = '';\n    let resolvedAbsolute = false;\n    let cwd;\n    for (let i = paths.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n        let path;\n        if (i >= 0) {\n            path = paths[i];\n        }\n        else {\n            if (cwd === undefined) {\n                cwd = getCWD();\n            }\n            path = cwd;\n        }\n        // Skip empty entries\n        if (path.length === 0) {\n            continue;\n        }\n        resolvedPath = `${path}/${resolvedPath}`;\n        resolvedAbsolute = path.charCodeAt(0) === SLASH;\n    }\n    // At this point the path should be resolved to a full absolute path, but\n    // handle relative paths to be safe (might happen when process.cwd() fails)\n    // Normalize the path (removes leading slash)\n    resolvedPath = normalizeStringPosix(resolvedPath, !resolvedAbsolute);\n    if (resolvedAbsolute) {\n        return `/${resolvedPath}`;\n    }\n    else if (resolvedPath.length > 0) {\n        return resolvedPath;\n    }\n    return '.';\n}\nconst SLASH = 47;\nconst DOT = 46;\n/**\n * Resolves . and .. elements in a path with directory names\n * Forked from BTOdell/path-resolve under MIT license\n * @see https://github.com/BTOdell/path-resolve/blob/master/LICENSE\n */\n/* eslint-disable max-depth */\n// eslint-disable-next-line complexity, max-statements\nfunction normalizeStringPosix(path, allowAboveRoot) {\n    let res = '';\n    let lastSlash = -1;\n    let dots = 0;\n    let code;\n    let isAboveRoot = false;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (code === SLASH) {\n            break;\n        }\n        else {\n            code = SLASH;\n        }\n        if (code === SLASH) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (lastSlash !== i - 1 && dots === 2) {\n                if (res.length < 2 ||\n                    !isAboveRoot ||\n                    res.charCodeAt(res.length - 1) !== DOT ||\n                    res.charCodeAt(res.length - 2) !== DOT) {\n                    if (res.length > 2) {\n                        const start = res.length - 1;\n                        let j = start;\n                        for (; j >= 0; --j) {\n                            if (res.charCodeAt(j) === SLASH) {\n                                break;\n                            }\n                        }\n                        if (j !== start) {\n                            res = j === -1 ? '' : res.slice(0, j);\n                            lastSlash = i;\n                            dots = 0;\n                            isAboveRoot = false;\n                            continue;\n                        }\n                    }\n                    else if (res.length === 2 || res.length === 1) {\n                        res = '';\n                        lastSlash = i;\n                        dots = 0;\n                        isAboveRoot = false;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    if (res.length > 0) {\n                        res += '/..';\n                    }\n                    else {\n                        res = '..';\n                    }\n                    isAboveRoot = true;\n                }\n            }\n            else {\n                const slice = path.slice(lastSlash + 1, i);\n                if (res.length > 0) {\n                    res += `/${slice}`;\n                }\n                else {\n                    res = slice;\n                }\n                isAboveRoot = false;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 340, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/binary-utils/array-buffer-utils.js"],"sourcesContent":["/**\n * compare two binary arrays for equality\n * @param a\n * @param b\n * @param byteLength\n */\nexport function compareArrayBuffers(arrayBuffer1, arrayBuffer2, byteLength) {\n    byteLength = byteLength || arrayBuffer1.byteLength;\n    if (arrayBuffer1.byteLength < byteLength || arrayBuffer2.byteLength < byteLength) {\n        return false;\n    }\n    const array1 = new Uint8Array(arrayBuffer1);\n    const array2 = new Uint8Array(arrayBuffer2);\n    for (let i = 0; i < array1.length; ++i) {\n        if (array1[i] !== array2[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Concatenate a sequence of ArrayBuffers from arguments\n * @return A concatenated ArrayBuffer\n */\nexport function concatenateArrayBuffers(...sources) {\n    return concatenateArrayBuffersFromArray(sources);\n}\n/**\n * Concatenate a sequence of ArrayBuffers from array\n * @return A concatenated ArrayBuffer\n */\nexport function concatenateArrayBuffersFromArray(sources) {\n    // Make sure all inputs are wrapped in typed arrays\n    const sourceArrays = sources.map((source2) => source2 instanceof ArrayBuffer ? new Uint8Array(source2) : source2);\n    // Get length of all inputs\n    const byteLength = sourceArrays.reduce((length, typedArray) => length + typedArray.byteLength, 0);\n    // Allocate array with space for all inputs\n    const result = new Uint8Array(byteLength);\n    // Copy the subarrays\n    let offset = 0;\n    for (const sourceArray of sourceArrays) {\n        result.set(sourceArray, offset);\n        offset += sourceArray.byteLength;\n    }\n    // We work with ArrayBuffers, discard the typed array wrapper\n    return result.buffer;\n}\n/**\n * Concatenate arbitrary count of typed arrays\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Typed_arrays\n * @param - list of arrays. All arrays should be the same type\n * @return A concatenated TypedArray\n */\nexport function concatenateTypedArrays(...typedArrays) {\n    // @ts-ignore\n    const arrays = typedArrays;\n    // @ts-ignore\n    const TypedArrayConstructor = (arrays && arrays.length > 1 && arrays[0].constructor) || null;\n    if (!TypedArrayConstructor) {\n        throw new Error('\"concatenateTypedArrays\" - incorrect quantity of arguments or arguments have incompatible data types');\n    }\n    const sumLength = arrays.reduce((acc, value) => acc + value.length, 0);\n    // @ts-ignore typescript does not like dynamic constructors\n    const result = new TypedArrayConstructor(sumLength);\n    let offset = 0;\n    for (const array of arrays) {\n        result.set(array, offset);\n        offset += array.length;\n    }\n    return result;\n}\n/**\n * Copy a view of an ArrayBuffer into new ArrayBuffer with byteOffset = 0\n * @param arrayBuffer\n * @param byteOffset\n * @param byteLength\n */\nexport function sliceArrayBuffer(arrayBuffer, byteOffset, byteLength) {\n    const subArray = byteLength !== undefined\n        ? new Uint8Array(arrayBuffer).subarray(byteOffset, byteOffset + byteLength)\n        : new Uint8Array(arrayBuffer).subarray(byteOffset);\n    const arrayCopy = new Uint8Array(subArray);\n    return arrayCopy.buffer;\n}\n"],"names":[],"mappings":"AAAA;;;;;CAKC;;;;;;;AACM,SAAS,oBAAoB,YAAY,EAAE,YAAY,EAAE,UAAU;IACtE,aAAa,cAAc,aAAa,UAAU;IAClD,IAAI,aAAa,UAAU,GAAG,cAAc,aAAa,UAAU,GAAG,YAAY;QAC9E,OAAO;IACX;IACA,MAAM,SAAS,IAAI,WAAW;IAC9B,MAAM,SAAS,IAAI,WAAW;IAC9B,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,EAAE,EAAG;QACpC,IAAI,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,EAAE,EAAE;YACzB,OAAO;QACX;IACJ;IACA,OAAO;AACX;AAKO,SAAS,wBAAwB,GAAG,OAAO;IAC9C,OAAO,iCAAiC;AAC5C;AAKO,SAAS,iCAAiC,OAAO;IACpD,mDAAmD;IACnD,MAAM,eAAe,QAAQ,GAAG,CAAC,CAAC,UAAY,mBAAmB,cAAc,IAAI,WAAW,WAAW;IACzG,2BAA2B;IAC3B,MAAM,aAAa,aAAa,MAAM,CAAC,CAAC,QAAQ,aAAe,SAAS,WAAW,UAAU,EAAE;IAC/F,2CAA2C;IAC3C,MAAM,SAAS,IAAI,WAAW;IAC9B,qBAAqB;IACrB,IAAI,SAAS;IACb,KAAK,MAAM,eAAe,aAAc;QACpC,OAAO,GAAG,CAAC,aAAa;QACxB,UAAU,YAAY,UAAU;IACpC;IACA,6DAA6D;IAC7D,OAAO,OAAO,MAAM;AACxB;AAOO,SAAS,uBAAuB,GAAG,WAAW;IACjD,aAAa;IACb,MAAM,SAAS;IACf,aAAa;IACb,MAAM,wBAAwB,AAAC,UAAU,OAAO,MAAM,GAAG,KAAK,MAAM,CAAC,EAAE,CAAC,WAAW,IAAK;IACxF,IAAI,CAAC,uBAAuB;QACxB,MAAM,IAAI,MAAM;IACpB;IACA,MAAM,YAAY,OAAO,MAAM,CAAC,CAAC,KAAK,QAAU,MAAM,MAAM,MAAM,EAAE;IACpE,2DAA2D;IAC3D,MAAM,SAAS,IAAI,sBAAsB;IACzC,IAAI,SAAS;IACb,KAAK,MAAM,SAAS,OAAQ;QACxB,OAAO,GAAG,CAAC,OAAO;QAClB,UAAU,MAAM,MAAM;IAC1B;IACA,OAAO;AACX;AAOO,SAAS,iBAAiB,WAAW,EAAE,UAAU,EAAE,UAAU;IAChE,MAAM,WAAW,eAAe,YAC1B,IAAI,WAAW,aAAa,QAAQ,CAAC,YAAY,aAAa,cAC9D,IAAI,WAAW,aAAa,QAAQ,CAAC;IAC3C,MAAM,YAAY,IAAI,WAAW;IACjC,OAAO,UAAU,MAAM;AAC3B","ignoreList":[0]}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 414, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/option-utils/merge-loader-options.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/**\n *\n * @param baseOptions Can be undefined, in which case a fresh options object will be minted\n * @param newOptions\n * @returns\n */\nexport function mergeLoaderOptions(baseOptions, newOptions) {\n    return mergeOptionsRecursively(baseOptions || {}, newOptions);\n}\nfunction mergeOptionsRecursively(baseOptions, newOptions, level = 0) {\n    // Sanity check (jest test runner overwrites the console object which can lead to infinite recursion)\n    if (level > 3) {\n        return newOptions;\n    }\n    const options = { ...baseOptions };\n    for (const [key, newValue] of Object.entries(newOptions)) {\n        if (newValue && typeof newValue === 'object' && !Array.isArray(newValue)) {\n            options[key] = mergeOptionsRecursively(options[key] || {}, newOptions[key], level + 1);\n            // Object.assign(options[key] as object, newOptions[key]);\n        }\n        else {\n            options[key] = newOptions[key];\n        }\n    }\n    return options;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;AACpC;;;;;CAKC;;;AACM,SAAS,mBAAmB,WAAW,EAAE,UAAU;IACtD,OAAO,wBAAwB,eAAe,CAAC,GAAG;AACtD;AACA,SAAS,wBAAwB,WAAW,EAAE,UAAU,EAAE,QAAQ,CAAC;IAC/D,qGAAqG;IACrG,IAAI,QAAQ,GAAG;QACX,OAAO;IACX;IACA,MAAM,UAAU;QAAE,GAAG,WAAW;IAAC;IACjC,KAAK,MAAM,CAAC,KAAK,SAAS,IAAI,OAAO,OAAO,CAAC,YAAa;QACtD,IAAI,YAAY,OAAO,aAAa,YAAY,CAAC,MAAM,OAAO,CAAC,WAAW;YACtE,OAAO,CAAC,IAAI,GAAG,wBAAwB,OAAO,CAAC,IAAI,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,EAAE,QAAQ;QACpF,0DAA0D;QAC9D,OACK;YACD,OAAO,CAAC,IAAI,GAAG,UAAU,CAAC,IAAI;QAClC;IACJ;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 446, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/node/buffer.browser.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Isolates Buffer references to ensure they are only bundled under Node.js (avoids big webpack polyfill)\n// this file is selected by the package.json \"browser\" field).\n/**\n * Convert Buffer to ArrayBuffer\n * Converts Node.js `Buffer` to `ArrayBuffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function toArrayBuffer(buffer) {\n    return buffer;\n}\n/**\n * Convert (copy) ArrayBuffer to Buffer\n */\nexport function toBuffer(binaryData) {\n    throw new Error('Buffer not supported in browser');\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;AACpC,yGAAyG;AACzG,8DAA8D;AAC9D;;;;CAIC;;;;AACM,SAAS,cAAc,MAAM;IAChC,OAAO;AACX;AAIO,SAAS,SAAS,UAAU;IAC/B,MAAM,IAAI,MAAM;AACpB","ignoreList":[0]}},
    {"offset": {"line": 471, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/binary-utils/memory-conversion-utils.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport * as node from \"../node/buffer.js\";\n/**\n * Check for Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n */\nexport function isBuffer(value) {\n    return value && typeof value === 'object' && value.isBuffer;\n}\n/**\n * Converts to Node.js `Buffer` (without triggering bundler to include Buffer polyfill on browser)\n * @todo better data type\n */\nexport function toBuffer(data) {\n    return node.toBuffer ? node.toBuffer(data) : data;\n}\n/**\n * Convert an object to an array buffer\n */\nexport function toArrayBuffer(data) {\n    // Note: Should be called first, Buffers can trigger other detections below\n    if (isBuffer(data)) {\n        return node.toArrayBuffer(data);\n    }\n    if (data instanceof ArrayBuffer) {\n        return data;\n    }\n    // Careful - Node Buffers look like Uint8Arrays (keep after isBuffer)\n    if (ArrayBuffer.isView(data)) {\n        if (data.byteOffset === 0 && data.byteLength === data.buffer.byteLength) {\n            return data.buffer;\n        }\n        return data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n    }\n    if (typeof data === 'string') {\n        const text = data;\n        const uint8Array = new TextEncoder().encode(text);\n        return uint8Array.buffer;\n    }\n    // HACK to support Blob polyfill\n    if (data && typeof data === 'object' && data._toArrayBuffer) {\n        return data._toArrayBuffer();\n    }\n    throw new Error('toArrayBuffer');\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;;AACpC;;AAIO,SAAS,SAAS,KAAK;IAC1B,OAAO,SAAS,OAAO,UAAU,YAAY,MAAM,QAAQ;AAC/D;AAKO,SAAS,SAAS,IAAI;IACzB,OAAO,kMAAK,QAAQ,GAAG,kMAAK,QAAQ,CAAC,QAAQ;AACjD;AAIO,SAAS,cAAc,IAAI;IAC9B,2EAA2E;IAC3E,IAAI,SAAS,OAAO;QAChB,OAAO,kMAAK,aAAa,CAAC;IAC9B;IACA,IAAI,gBAAgB,aAAa;QAC7B,OAAO;IACX;IACA,qEAAqE;IACrE,IAAI,YAAY,MAAM,CAAC,OAAO;QAC1B,IAAI,KAAK,UAAU,KAAK,KAAK,KAAK,UAAU,KAAK,KAAK,MAAM,CAAC,UAAU,EAAE;YACrE,OAAO,KAAK,MAAM;QACtB;QACA,OAAO,KAAK,MAAM,CAAC,KAAK,CAAC,KAAK,UAAU,EAAE,KAAK,UAAU,GAAG,KAAK,UAAU;IAC/E;IACA,IAAI,OAAO,SAAS,UAAU;QAC1B,MAAM,OAAO;QACb,MAAM,aAAa,IAAI,cAAc,MAAM,CAAC;QAC5C,OAAO,WAAW,MAAM;IAC5B;IACA,gCAAgC;IAChC,IAAI,QAAQ,OAAO,SAAS,YAAY,KAAK,cAAc,EAAE;QACzD,OAAO,KAAK,cAAc;IAC9B;IACA,MAAM,IAAI,MAAM;AACpB","ignoreList":[0]}},
    {"offset": {"line": 519, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 525, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/iterators/async-iteration.js"],"sourcesContent":["import { concatenateArrayBuffers } from \"../binary-utils/array-buffer-utils.js\";\n// GENERAL UTILITIES\n/**\n * Iterate over async iterator, without resetting iterator if end is not reached\n * - forEach intentionally does not reset iterator if exiting loop prematurely\n *   so that iteration can continue in a second loop\n * - It is recommended to use a standard for-await as last loop to ensure\n *   iterator gets properly reset\n *\n * TODO - optimize using sync iteration if argument is an Iterable?\n *\n * @param iterator\n * @param visitor\n */\nexport async function forEach(iterator, visitor) {\n    // eslint-disable-next-line\n    while (true) {\n        const { done, value } = await iterator.next();\n        if (done) {\n            iterator.return();\n            return;\n        }\n        const cancel = visitor(value);\n        if (cancel) {\n            return;\n        }\n    }\n}\n// Breaking big data into iterable chunks, concatenating iterable chunks into big data objects\n/**\n * Concatenates all data chunks yielded by an (async) iterator\n * This function can e.g. be used to enable atomic parsers to work on (async) iterator inputs\n */\nexport async function concatenateArrayBuffersAsync(asyncIterator) {\n    const arrayBuffers = [];\n    for await (const chunk of asyncIterator) {\n        arrayBuffers.push(chunk);\n    }\n    return concatenateArrayBuffers(...arrayBuffers);\n}\nexport async function concatenateStringsAsync(asyncIterator) {\n    const strings = [];\n    for await (const chunk of asyncIterator) {\n        strings.push(chunk);\n    }\n    return strings.join('');\n}\n"],"names":[],"mappings":";;;;;AAAA;;AAcO,eAAe,QAAQ,QAAQ,EAAE,OAAO;IAC3C,2BAA2B;IAC3B,MAAO,KAAM;QACT,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI;QAC3C,IAAI,MAAM;YACN,SAAS,MAAM;YACf;QACJ;QACA,MAAM,SAAS,QAAQ;QACvB,IAAI,QAAQ;YACR;QACJ;IACJ;AACJ;AAMO,eAAe,6BAA6B,aAAa;IAC5D,MAAM,eAAe,EAAE;IACvB,WAAW,MAAM,SAAS,cAAe;QACrC,aAAa,IAAI,CAAC;IACtB;IACA,OAAO,CAAA,GAAA,mNAAA,CAAA,0BAAuB,AAAD,KAAK;AACtC;AACO,eAAe,wBAAwB,aAAa;IACvD,MAAM,UAAU,EAAE;IAClB,WAAW,MAAM,SAAS,cAAe;QACrC,QAAQ,IAAI,CAAC;IACjB;IACA,OAAO,QAAQ,IAAI,CAAC;AACxB","ignoreList":[0]}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 566, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/loader-utils/dist/lib/worker-loader-utils/parse-with-worker.js"],"sourcesContent":["import { isBrowser, WorkerFarm, getWorkerURL } from '@loaders.gl/worker-utils';\n/**\n * Determines if a loader can parse with worker\n * @param loader\n * @param options\n */\nexport function canParseWithWorker(loader, options) {\n    if (!WorkerFarm.isSupported()) {\n        return false;\n    }\n    // Node workers are still experimental\n    if (!isBrowser && !options?._nodeWorkers) {\n        return false;\n    }\n    return loader.worker && options?.worker;\n}\n/**\n * this function expects that the worker function sends certain messages,\n * this can be automated if the worker is wrapper by a call to createLoaderWorker in @loaders.gl/loader-utils.\n */\nexport async function parseWithWorker(loader, data, options, context, parseOnMainThread) {\n    const name = loader.id; // TODO\n    const url = getWorkerURL(loader, options);\n    const workerFarm = WorkerFarm.getWorkerFarm(options);\n    const workerPool = workerFarm.getWorkerPool({ name, url });\n    // options.log object contains functions which cannot be transferred\n    // context.fetch & context.parse functions cannot be transferred\n    // TODO - decide how to handle logging on workers\n    options = JSON.parse(JSON.stringify(options));\n    context = JSON.parse(JSON.stringify(context || {}));\n    const job = await workerPool.startJob('process-on-worker', \n    // @ts-expect-error\n    onMessage.bind(null, parseOnMainThread) // eslint-disable-line @typescript-eslint/no-misused-promises\n    );\n    job.postMessage('process', {\n        // @ts-ignore\n        input: data,\n        options,\n        context\n    });\n    const result = await job.result;\n    // TODO - what is going on here?\n    return await result.result;\n}\n/**\n * Handle worker's responses to the main thread\n * @param job\n * @param type\n * @param payload\n */\nasync function onMessage(parseOnMainThread, job, type, payload) {\n    switch (type) {\n        case 'done':\n            job.done(payload);\n            break;\n        case 'error':\n            job.error(new Error(payload.error));\n            break;\n        case 'process':\n            // Worker is asking for main thread to parseO\n            const { id, input, options } = payload;\n            try {\n                const result = await parseOnMainThread(input, options);\n                job.postMessage('done', { id, result });\n            }\n            catch (error) {\n                const message = error instanceof Error ? error.message : 'unknown error';\n                job.postMessage('error', { id, error: message });\n            }\n            break;\n        default:\n            // eslint-disable-next-line\n            console.warn(`parse-with-worker unknown message ${type}`);\n    }\n}\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;;AAMO,SAAS,mBAAmB,MAAM,EAAE,OAAO;IAC9C,IAAI,CAAC,iPAAA,CAAA,aAAU,CAAC,WAAW,IAAI;QAC3B,OAAO;IACX;IACA,sCAAsC;IACtC,IAAI,CAAC,+LAAA,CAAA,YAAS,IAAI,CAAC,SAAS,cAAc;QACtC,OAAO;IACX;IACA,OAAO,OAAO,MAAM,IAAI,SAAS;AACrC;AAKO,eAAe,gBAAgB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,iBAAiB;IACnF,MAAM,OAAO,OAAO,EAAE,EAAE,OAAO;IAC/B,MAAM,MAAM,CAAA,GAAA,6MAAA,CAAA,eAAY,AAAD,EAAE,QAAQ;IACjC,MAAM,aAAa,iPAAA,CAAA,aAAU,CAAC,aAAa,CAAC;IAC5C,MAAM,aAAa,WAAW,aAAa,CAAC;QAAE;QAAM;IAAI;IACxD,oEAAoE;IACpE,gEAAgE;IAChE,iDAAiD;IACjD,UAAU,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC;IACpC,UAAU,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,WAAW,CAAC;IAChD,MAAM,MAAM,MAAM,WAAW,QAAQ,CAAC,qBACtC,mBAAmB;IACnB,UAAU,IAAI,CAAC,MAAM,mBAAmB,6DAA6D;;IAErG,IAAI,WAAW,CAAC,WAAW;QACvB,aAAa;QACb,OAAO;QACP;QACA;IACJ;IACA,MAAM,SAAS,MAAM,IAAI,MAAM;IAC/B,gCAAgC;IAChC,OAAO,MAAM,OAAO,MAAM;AAC9B;AACA;;;;;CAKC,GACD,eAAe,UAAU,iBAAiB,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO;IAC1D,OAAQ;QACJ,KAAK;YACD,IAAI,IAAI,CAAC;YACT;QACJ,KAAK;YACD,IAAI,KAAK,CAAC,IAAI,MAAM,QAAQ,KAAK;YACjC;QACJ,KAAK;YACD,6CAA6C;YAC7C,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG;YAC/B,IAAI;gBACA,MAAM,SAAS,MAAM,kBAAkB,OAAO;gBAC9C,IAAI,WAAW,CAAC,QAAQ;oBAAE;oBAAI;gBAAO;YACzC,EACA,OAAO,OAAO;gBACV,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;gBACzD,IAAI,WAAW,CAAC,SAAS;oBAAE;oBAAI,OAAO;gBAAQ;YAClD;YACA;QACJ;YACI,2BAA2B;YAC3B,QAAQ,IAAI,CAAC,CAAC,kCAAkC,EAAE,MAAM;IAChE;AACJ","ignoreList":[0]}},
    {"offset": {"line": 645, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 651, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/loader-utils/normalize-loader.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from '@loaders.gl/loader-utils';\nexport function isLoaderObject(loader) {\n    if (!loader) {\n        return false;\n    }\n    if (Array.isArray(loader)) {\n        loader = loader[0];\n    }\n    const hasExtensions = Array.isArray(loader?.extensions);\n    /* Now handled by types and worker loaders do not have these\n    let hasParser =\n      loader.parseTextSync ||\n      loader.parseSync ||\n      loader.parse ||\n      loader.parseStream || // TODO Remove, Replace with parseInBatches\n      loader.parseInBatches;\n    */\n    return hasExtensions;\n}\nexport function normalizeLoader(loader) {\n    // This error is fairly easy to trigger by mixing up import statements etc\n    // So we make an exception and add a developer error message for this case\n    // To help new users from getting stuck here\n    assert(loader, 'null loader');\n    assert(isLoaderObject(loader), 'invalid loader');\n    // NORMALIZE [LOADER, OPTIONS] => LOADER\n    // If [loader, options], create a new loaders object with options merged in\n    let options;\n    if (Array.isArray(loader)) {\n        options = loader[1];\n        loader = loader[0];\n        loader = {\n            ...loader,\n            options: { ...loader.options, ...options }\n        };\n    }\n    // NORMALIZE text and binary flags\n    // Ensure at least one of text/binary flags are properly set\n    // @ts-expect-error\n    if (loader?.parseTextSync || loader?.parseText) {\n        loader.text = true;\n    }\n    if (!loader.text) {\n        loader.binary = true;\n    }\n    return loader;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;AACpC;;AACO,SAAS,eAAe,MAAM;IACjC,IAAI,CAAC,QAAQ;QACT,OAAO;IACX;IACA,IAAI,MAAM,OAAO,CAAC,SAAS;QACvB,SAAS,MAAM,CAAC,EAAE;IACtB;IACA,MAAM,gBAAgB,MAAM,OAAO,CAAC,QAAQ;IAC5C;;;;;;;IAOA,GACA,OAAO;AACX;AACO,SAAS,gBAAgB,MAAM;IAClC,0EAA0E;IAC1E,0EAA0E;IAC1E,4CAA4C;IAC5C,CAAA,GAAA,8LAAA,CAAA,SAAM,AAAD,EAAE,QAAQ;IACf,CAAA,GAAA,8LAAA,CAAA,SAAM,AAAD,EAAE,eAAe,SAAS;IAC/B,wCAAwC;IACxC,2EAA2E;IAC3E,IAAI;IACJ,IAAI,MAAM,OAAO,CAAC,SAAS;QACvB,UAAU,MAAM,CAAC,EAAE;QACnB,SAAS,MAAM,CAAC,EAAE;QAClB,SAAS;YACL,GAAG,MAAM;YACT,SAAS;gBAAE,GAAG,OAAO,OAAO;gBAAE,GAAG,OAAO;YAAC;QAC7C;IACJ;IACA,kCAAkC;IAClC,4DAA4D;IAC5D,mBAAmB;IACnB,IAAI,QAAQ,iBAAiB,QAAQ,WAAW;QAC5C,OAAO,IAAI,GAAG;IAClB;IACA,IAAI,CAAC,OAAO,IAAI,EAAE;QACd,OAAO,MAAM,GAAG;IACpB;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 708, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 714, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/loader-utils/loggers.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// probe.gl Log compatible loggers\nimport { Log } from '@probe.gl/log';\nexport const probeLog = new Log({ id: 'loaders.gl' });\n// Logs nothing\nexport class NullLog {\n    log() {\n        return () => { };\n    }\n    info() {\n        return () => { };\n    }\n    warn() {\n        return () => { };\n    }\n    error() {\n        return () => { };\n    }\n}\n// Logs to console\nexport class ConsoleLog {\n    console;\n    constructor() {\n        this.console = console; // eslint-disable-line\n    }\n    log(...args) {\n        return this.console.log.bind(this.console, ...args);\n    }\n    info(...args) {\n        return this.console.info.bind(this.console, ...args);\n    }\n    warn(...args) {\n        return this.console.warn.bind(this.console, ...args);\n    }\n    error(...args) {\n        return this.console.error.bind(this.console, ...args);\n    }\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;AACpC,kCAAkC;;;;;;AAClC;;AACO,MAAM,WAAW,IAAI,sJAAA,CAAA,MAAG,CAAC;IAAE,IAAI;AAAa;AAE5C,MAAM;IACT,MAAM;QACF,OAAO,KAAQ;IACnB;IACA,OAAO;QACH,OAAO,KAAQ;IACnB;IACA,OAAO;QACH,OAAO,KAAQ;IACnB;IACA,QAAQ;QACJ,OAAO,KAAQ;IACnB;AACJ;AAEO,MAAM;IACT,QAAQ;IACR,aAAc;QACV,IAAI,CAAC,OAAO,GAAG,SAAS,sBAAsB;IAClD;IACA,IAAI,GAAG,IAAI,EAAE;QACT,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK;IAClD;IACA,KAAK,GAAG,IAAI,EAAE;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK;IACnD;IACA,KAAK,GAAG,IAAI,EAAE;QACV,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK;IACnD;IACA,MAAM,GAAG,IAAI,EAAE;QACX,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK;IACpD;AACJ","ignoreList":[0]}},
    {"offset": {"line": 760, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 766, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/loader-utils/option-defaults.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isBrowser } from '@loaders.gl/loader-utils';\nimport { ConsoleLog } from \"./loggers.js\";\nexport const DEFAULT_LOADER_OPTIONS = {\n    // baseUri\n    fetch: null,\n    mimeType: undefined,\n    nothrow: false,\n    log: new ConsoleLog(), // A probe.gl compatible (`log.log()()` syntax) that just logs to console\n    useLocalLibraries: false,\n    CDN: 'https://unpkg.com/@loaders.gl',\n    worker: true, // By default, use worker if provided by loader.\n    maxConcurrency: 3, // How many worker instances should be created for each loader.\n    maxMobileConcurrency: 1, // How many worker instances should be created for each loader on mobile devices.\n    reuseWorkers: isBrowser, // By default reuse workers in browser (Node.js refuses to terminate if browsers are running)\n    _nodeWorkers: false, // By default do not support node workers\n    _workerType: '', // 'test' to use locally generated workers\n    limit: 0,\n    _limitMB: 0,\n    batchSize: 'auto',\n    batchDebounceMs: 0,\n    metadata: false, // TODO - currently only implemented for parseInBatches, adds initial metadata batch,\n    transforms: []\n};\nexport const REMOVED_LOADER_OPTIONS = {\n    throws: 'nothrow',\n    dataType: '(no longer used)',\n    uri: 'baseUri',\n    // Warn if fetch options are used on top-level\n    method: 'fetch.method',\n    headers: 'fetch.headers',\n    body: 'fetch.body',\n    mode: 'fetch.mode',\n    credentials: 'fetch.credentials',\n    cache: 'fetch.cache',\n    redirect: 'fetch.redirect',\n    referrer: 'fetch.referrer',\n    referrerPolicy: 'fetch.referrerPolicy',\n    integrity: 'fetch.integrity',\n    keepalive: 'fetch.keepalive',\n    signal: 'fetch.signal'\n};\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;AAEpC;AADA;;;AAEO,MAAM,yBAAyB;IAClC,UAAU;IACV,OAAO;IACP,UAAU;IACV,SAAS;IACT,KAAK,IAAI,uLAAA,CAAA,aAAU;IACnB,mBAAmB;IACnB,KAAK;IACL,QAAQ;IACR,gBAAgB;IAChB,sBAAsB;IACtB,cAAc,+LAAA,CAAA,YAAS;IACvB,cAAc;IACd,aAAa;IACb,OAAO;IACP,UAAU;IACV,WAAW;IACX,iBAAiB;IACjB,UAAU;IACV,YAAY,EAAE;AAClB;AACO,MAAM,yBAAyB;IAClC,QAAQ;IACR,UAAU;IACV,KAAK;IACL,8CAA8C;IAC9C,QAAQ;IACR,SAAS;IACT,MAAM;IACN,MAAM;IACN,aAAa;IACb,OAAO;IACP,UAAU;IACV,UAAU;IACV,gBAAgB;IAChB,WAAW;IACX,WAAW;IACX,QAAQ;AACZ","ignoreList":[0]}},
    {"offset": {"line": 816, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 822, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/javascript-utils/is-type.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst isBoolean = (x) => typeof x === 'boolean';\nconst isFunction = (x) => typeof x === 'function';\nexport const isObject = (x) => x !== null && typeof x === 'object';\nexport const isPureObject = (x) => isObject(x) && x.constructor === {}.constructor;\nexport const isPromise = (x) => isObject(x) && isFunction(x.then);\nexport const isIterable = (x) => Boolean(x) && typeof x[Symbol.iterator] === 'function';\nexport const isAsyncIterable = (x) => x && typeof x[Symbol.asyncIterator] === 'function';\nexport const isIterator = (x) => x && isFunction(x.next);\nexport const isResponse = (x) => (typeof Response !== 'undefined' && x instanceof Response) ||\n    (x && x.arrayBuffer && x.text && x.json);\nexport const isFile = (x) => typeof File !== 'undefined' && x instanceof File;\nexport const isBlob = (x) => typeof Blob !== 'undefined' && x instanceof Blob;\n/** Check for Node.js `Buffer` without triggering bundler to include buffer polyfill */\nexport const isBuffer = (x) => x && typeof x === 'object' && x.isBuffer;\nexport const isWritableDOMStream = (x) => isObject(x) && isFunction(x.abort) && isFunction(x.getWriter);\nexport const isReadableDOMStream = (x) => (typeof ReadableStream !== 'undefined' && x instanceof ReadableStream) ||\n    (isObject(x) && isFunction(x.tee) && isFunction(x.cancel) && isFunction(x.getReader));\n// Not implemented in Firefox: && isFunction(x.pipeTo)\nexport const isWritableNodeStream = (x) => isObject(x) && isFunction(x.end) && isFunction(x.write) && isBoolean(x.writable);\nexport const isReadableNodeStream = (x) => isObject(x) && isFunction(x.read) && isFunction(x.pipe) && isBoolean(x.readable);\nexport const isReadableStream = (x) => isReadableDOMStream(x) || isReadableNodeStream(x);\nexport const isWritableStream = (x) => isWritableDOMStream(x) || isWritableNodeStream(x);\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;;;;;;;;;;;;;;;AACpC,MAAM,YAAY,CAAC,IAAM,OAAO,MAAM;AACtC,MAAM,aAAa,CAAC,IAAM,OAAO,MAAM;AAChC,MAAM,WAAW,CAAC,IAAM,MAAM,QAAQ,OAAO,MAAM;AACnD,MAAM,eAAe,CAAC,IAAM,SAAS,MAAM,EAAE,WAAW,KAAK,CAAA,CAAC,CAAA,EAAE,WAAW;AAC3E,MAAM,YAAY,CAAC,IAAM,SAAS,MAAM,WAAW,EAAE,IAAI;AACzD,MAAM,aAAa,CAAC,IAAM,QAAQ,MAAM,OAAO,CAAC,CAAC,OAAO,QAAQ,CAAC,KAAK;AACtE,MAAM,kBAAkB,CAAC,IAAM,KAAK,OAAO,CAAC,CAAC,OAAO,aAAa,CAAC,KAAK;AACvE,MAAM,aAAa,CAAC,IAAM,KAAK,WAAW,EAAE,IAAI;AAChD,MAAM,aAAa,CAAC,IAAM,AAAC,OAAO,aAAa,eAAe,aAAa,YAC7E,KAAK,EAAE,WAAW,IAAI,EAAE,IAAI,IAAI,EAAE,IAAI;AACpC,MAAM,SAAS,CAAC,IAAM,OAAO,SAAS,eAAe,aAAa;AAClE,MAAM,SAAS,CAAC,IAAM,OAAO,SAAS,eAAe,aAAa;AAElE,MAAM,WAAW,CAAC,IAAM,KAAK,OAAO,MAAM,YAAY,EAAE,QAAQ;AAChE,MAAM,sBAAsB,CAAC,IAAM,SAAS,MAAM,WAAW,EAAE,KAAK,KAAK,WAAW,EAAE,SAAS;AAC/F,MAAM,sBAAsB,CAAC,IAAM,AAAC,OAAO,mBAAmB,eAAe,aAAa,kBAC5F,SAAS,MAAM,WAAW,EAAE,GAAG,KAAK,WAAW,EAAE,MAAM,KAAK,WAAW,EAAE,SAAS;AAEhF,MAAM,uBAAuB,CAAC,IAAM,SAAS,MAAM,WAAW,EAAE,GAAG,KAAK,WAAW,EAAE,KAAK,KAAK,UAAU,EAAE,QAAQ;AACnH,MAAM,uBAAuB,CAAC,IAAM,SAAS,MAAM,WAAW,EAAE,IAAI,KAAK,WAAW,EAAE,IAAI,KAAK,UAAU,EAAE,QAAQ;AACnH,MAAM,mBAAmB,CAAC,IAAM,oBAAoB,MAAM,qBAAqB;AAC/E,MAAM,mBAAmB,CAAC,IAAM,oBAAoB,MAAM,qBAAqB","ignoreList":[0]}},
    {"offset": {"line": 861, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 867, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/loader-utils/option-utils.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { registerJSModules } from '@loaders.gl/loader-utils';\nimport { isPureObject, isObject } from \"../../javascript-utils/is-type.js\";\nimport { probeLog, NullLog } from \"./loggers.js\";\nimport { DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS } from \"./option-defaults.js\";\n/**\n * Helper for safely accessing global loaders.gl variables\n * Wraps initialization of global variable in function to defeat overly aggressive tree-shakers\n */\nexport function getGlobalLoaderState() {\n    // @ts-ignore\n    globalThis.loaders = globalThis.loaders || {};\n    // @ts-ignore\n    const { loaders } = globalThis;\n    // Add _state object to keep separate from modules added to globalThis.loaders\n    if (!loaders._state) {\n        loaders._state = {};\n    }\n    return loaders._state;\n}\n/**\n * Store global loader options on the global object to increase chances of cross loaders-version interoperability\n * NOTE: This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\n * @returns global loader options merged with default loader options\n */\nexport function getGlobalLoaderOptions() {\n    const state = getGlobalLoaderState();\n    // Ensure all default loader options from this library are mentioned\n    state.globalOptions = state.globalOptions || { ...DEFAULT_LOADER_OPTIONS };\n    return state.globalOptions;\n}\n/**\n * Set global loader options\n * @param options\n */\nexport function setGlobalOptions(options) {\n    const state = getGlobalLoaderState();\n    const globalOptions = getGlobalLoaderOptions();\n    // @ts-expect-error First param looks incorrect\n    state.globalOptions = normalizeOptionsInternal(globalOptions, options);\n    // Make sure any new modules are registered\n    registerJSModules(options.modules);\n}\n/**\n * Merges options with global opts and loader defaults, also injects baseUri\n * @param options\n * @param loader\n * @param loaders\n * @param url\n */\nexport function normalizeOptions(options, loader, loaders, url) {\n    loaders = loaders || [];\n    loaders = Array.isArray(loaders) ? loaders : [loaders];\n    validateOptions(options, loaders);\n    return normalizeOptionsInternal(loader, options, url);\n}\n// VALIDATE OPTIONS\n/**\n * Warn for unsupported options\n * @param options\n * @param loaders\n */\nfunction validateOptions(options, loaders) {\n    // Check top level options\n    validateOptionsObject(options, null, DEFAULT_LOADER_OPTIONS, REMOVED_LOADER_OPTIONS, loaders);\n    for (const loader of loaders) {\n        // Get the scoped, loader specific options from the user supplied options\n        const idOptions = ((options && options[loader.id]) || {});\n        // Get scoped, loader specific default and deprecated options from the selected loader\n        const loaderOptions = (loader.options && loader.options[loader.id]) || {};\n        const deprecatedOptions = (loader.deprecatedOptions && loader.deprecatedOptions[loader.id]) || {};\n        // Validate loader specific options\n        // @ts-ignore\n        validateOptionsObject(idOptions, loader.id, loaderOptions, deprecatedOptions, loaders);\n    }\n}\n// eslint-disable-next-line max-params, complexity\nfunction validateOptionsObject(options, id, defaultOptions, deprecatedOptions, loaders) {\n    const loaderName = id || 'Top level';\n    const prefix = id ? `${id}.` : '';\n    for (const key in options) {\n        // If top level option value is an object it could options for a loader, so ignore\n        const isSubOptions = !id && isObject(options[key]);\n        const isBaseUriOption = key === 'baseUri' && !id;\n        const isWorkerUrlOption = key === 'workerUrl' && id;\n        // <loader>.workerUrl requires special handling as it is now auto-generated and no longer specified as a default option.\n        if (!(key in defaultOptions) && !isBaseUriOption && !isWorkerUrlOption) {\n            // Issue deprecation warnings\n            if (key in deprecatedOptions) {\n                probeLog.warn(`${loaderName} loader option \\'${prefix}${key}\\' no longer supported, use \\'${deprecatedOptions[key]}\\'`)();\n            }\n            else if (!isSubOptions) {\n                const suggestion = findSimilarOption(key, loaders);\n                probeLog.warn(`${loaderName} loader option \\'${prefix}${key}\\' not recognized. ${suggestion}`)();\n            }\n        }\n    }\n}\nfunction findSimilarOption(optionKey, loaders) {\n    const lowerCaseOptionKey = optionKey.toLowerCase();\n    let bestSuggestion = '';\n    for (const loader of loaders) {\n        for (const key in loader.options) {\n            if (optionKey === key) {\n                return `Did you mean \\'${loader.id}.${key}\\'?`;\n            }\n            const lowerCaseKey = key.toLowerCase();\n            const isPartialMatch = lowerCaseOptionKey.startsWith(lowerCaseKey) || lowerCaseKey.startsWith(lowerCaseOptionKey);\n            if (isPartialMatch) {\n                bestSuggestion = bestSuggestion || `Did you mean \\'${loader.id}.${key}\\'?`;\n            }\n        }\n    }\n    return bestSuggestion;\n}\nfunction normalizeOptionsInternal(loader, options, url) {\n    const loaderDefaultOptions = loader.options || {};\n    const mergedOptions = { ...loaderDefaultOptions };\n    addUrlOptions(mergedOptions, url);\n    // LOGGING: options.log can be set to `null` to defeat logging\n    if (mergedOptions.log === null) {\n        mergedOptions.log = new NullLog();\n    }\n    mergeNestedFields(mergedOptions, getGlobalLoaderOptions());\n    mergeNestedFields(mergedOptions, options);\n    return mergedOptions;\n}\n// Merge nested options objects\nfunction mergeNestedFields(mergedOptions, options) {\n    for (const key in options) {\n        // Check for nested options\n        // object in options => either no key in defaultOptions or object in defaultOptions\n        if (key in options) {\n            const value = options[key];\n            if (isPureObject(value) && isPureObject(mergedOptions[key])) {\n                mergedOptions[key] = {\n                    ...mergedOptions[key],\n                    ...options[key]\n                };\n            }\n            else {\n                mergedOptions[key] = options[key];\n            }\n        }\n        // else: No need to merge nested opts, and the initial merge already copied over the nested options\n    }\n}\n/**\n * Harvest information from the url\n * @deprecated This is mainly there to support a hack in the GLTFLoader\n * TODO - baseUri should be a directory, i.e. remove file component from baseUri\n * TODO - extract extension?\n * TODO - extract query parameters?\n * TODO - should these be injected on context instead of options?\n */\nfunction addUrlOptions(options, url) {\n    if (url && !('baseUri' in options)) {\n        options.baseUri = url;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1021, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1027, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/utils/mime-type-utils.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// TODO - build/integrate proper MIME type parsing\n// https://mimesniff.spec.whatwg.org/\nconst DATA_URL_PATTERN = /^data:([-\\w.]+\\/[-\\w.+]+)(;|,)/;\nconst MIME_TYPE_PATTERN = /^([-\\w.]+\\/[-\\w.+]+)/;\n/**\n * Compare two MIME types, case insensitively etc.\n * @param mimeType1\n * @param mimeType2\n * @returns true if the MIME types are equivalent\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types#structure_of_a_mime_type\n */\nexport function compareMIMETypes(mimeType1, mimeType2) {\n    if (mimeType1.toLowerCase() === mimeType2.toLowerCase()) {\n        return true;\n    }\n    return false;\n}\n/**\n * Remove extra data like `charset` from MIME types\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMEType(mimeString) {\n    // If resource is a data url, extract any embedded mime type\n    const matches = MIME_TYPE_PATTERN.exec(mimeString);\n    if (matches) {\n        return matches[1];\n    }\n    return mimeString;\n}\n/**\n * Extract MIME type from data URL\n *\n * @param mimeString\n * @returns A clean MIME type, or an empty string\n *\n * @todo - handle more advanced MIMETYpes, multiple types\n * @todo - extract charset etc\n */\nexport function parseMIMETypeFromURL(url) {\n    // If resource is a data URL, extract any embedded mime type\n    const matches = DATA_URL_PATTERN.exec(url);\n    if (matches) {\n        return matches[1];\n    }\n    return '';\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;AACpC,kDAAkD;AAClD,qCAAqC;;;;;;AACrC,MAAM,mBAAmB;AACzB,MAAM,oBAAoB;AAQnB,SAAS,iBAAiB,SAAS,EAAE,SAAS;IACjD,IAAI,UAAU,WAAW,OAAO,UAAU,WAAW,IAAI;QACrD,OAAO;IACX;IACA,OAAO;AACX;AASO,SAAS,cAAc,UAAU;IACpC,4DAA4D;IAC5D,MAAM,UAAU,kBAAkB,IAAI,CAAC;IACvC,IAAI,SAAS;QACT,OAAO,OAAO,CAAC,EAAE;IACrB;IACA,OAAO;AACX;AAUO,SAAS,qBAAqB,GAAG;IACpC,4DAA4D;IAC5D,MAAM,UAAU,iBAAiB,IAAI,CAAC;IACtC,IAAI,SAAS;QACT,OAAO,OAAO,CAAC,EAAE;IACrB;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 1061, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1067, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/utils/url-utils.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst QUERY_STRING_PATTERN = /\\?.*/;\nexport function extractQueryString(url) {\n    const matches = url.match(QUERY_STRING_PATTERN);\n    return matches && matches[0];\n}\nexport function stripQueryString(url) {\n    return url.replace(QUERY_STRING_PATTERN, '');\n}\nexport function shortenUrlForDisplay(url) {\n    if (url.length < 50) {\n        return url;\n    }\n    const urlEnd = url.slice(url.length - 15);\n    const urlStart = url.substr(0, 32);\n    return `${urlStart}...${urlEnd}`;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;;AACpC,MAAM,uBAAuB;AACtB,SAAS,mBAAmB,GAAG;IAClC,MAAM,UAAU,IAAI,KAAK,CAAC;IAC1B,OAAO,WAAW,OAAO,CAAC,EAAE;AAChC;AACO,SAAS,iBAAiB,GAAG;IAChC,OAAO,IAAI,OAAO,CAAC,sBAAsB;AAC7C;AACO,SAAS,qBAAqB,GAAG;IACpC,IAAI,IAAI,MAAM,GAAG,IAAI;QACjB,OAAO;IACX;IACA,MAAM,SAAS,IAAI,KAAK,CAAC,IAAI,MAAM,GAAG;IACtC,MAAM,WAAW,IAAI,MAAM,CAAC,GAAG;IAC/B,OAAO,GAAG,SAAS,GAAG,EAAE,QAAQ;AACpC","ignoreList":[0]}},
    {"offset": {"line": 1091, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1097, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/utils/resource-utils.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isResponse, isBlob } from \"../../javascript-utils/is-type.js\";\nimport { parseMIMEType, parseMIMETypeFromURL } from \"./mime-type-utils.js\";\nimport { stripQueryString } from \"./url-utils.js\";\n/**\n * Returns the URL associated with this resource.\n * The returned value may include a query string and need further processing.\n * If it cannot determine url, the corresponding value will be an empty string\n *\n * @todo string parameters are assumed to be URLs\n */\nexport function getResourceUrl(resource) {\n    // If resource is a `Response`, it contains the information directly as a field\n    if (isResponse(resource)) {\n        const response = resource;\n        return response.url;\n    }\n    // If the resource is a Blob or a File (subclass of Blob)\n    if (isBlob(resource)) {\n        const blob = resource;\n        // File objects have a \"name\" property. Blob objects don't have any\n        // url (name) information\n        return blob.name || '';\n    }\n    if (typeof resource === 'string') {\n        return resource;\n    }\n    // Unknown\n    return '';\n}\n/**\n * Returns the URL associated with this resource.\n * The returned value may include a query string and need further processing.\n * If it cannot determine url, the corresponding value will be an empty string\n *\n * @todo string parameters are assumed to be URLs\n */\nexport function getResourceMIMEType(resource) {\n    // If resource is a response, it contains the information directly\n    if (isResponse(resource)) {\n        const response = resource;\n        const contentTypeHeader = response.headers.get('content-type') || '';\n        const noQueryUrl = stripQueryString(response.url);\n        return parseMIMEType(contentTypeHeader) || parseMIMETypeFromURL(noQueryUrl);\n    }\n    // If the resource is a Blob or a File (subclass of Blob)\n    if (isBlob(resource)) {\n        const blob = resource;\n        return blob.type || '';\n    }\n    if (typeof resource === 'string') {\n        return parseMIMETypeFromURL(resource);\n    }\n    // Unknown\n    return '';\n}\n/**\n  * Returns (approximate) content length for a resource if it can be determined.\n  * Returns -1 if content length cannot be determined.\n  * @param resource\n\n  * @note string parameters are NOT assumed to be URLs\n  */\nexport function getResourceContentLength(resource) {\n    if (isResponse(resource)) {\n        const response = resource;\n        return response.headers['content-length'] || -1;\n    }\n    if (isBlob(resource)) {\n        const blob = resource;\n        return blob.size;\n    }\n    if (typeof resource === 'string') {\n        // TODO - handle data URL?\n        return resource.length;\n    }\n    if (resource instanceof ArrayBuffer) {\n        return resource.byteLength;\n    }\n    if (ArrayBuffer.isView(resource)) {\n        return resource.byteLength;\n    }\n    return -1;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;;AACpC;AACA;AACA;;;;AAQO,SAAS,eAAe,QAAQ;IACnC,+EAA+E;IAC/E,IAAI,CAAA,GAAA,uLAAA,CAAA,aAAU,AAAD,EAAE,WAAW;QACtB,MAAM,WAAW;QACjB,OAAO,SAAS,GAAG;IACvB;IACA,yDAAyD;IACzD,IAAI,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD,EAAE,WAAW;QAClB,MAAM,OAAO;QACb,mEAAmE;QACnE,yBAAyB;QACzB,OAAO,KAAK,IAAI,IAAI;IACxB;IACA,IAAI,OAAO,aAAa,UAAU;QAC9B,OAAO;IACX;IACA,UAAU;IACV,OAAO;AACX;AAQO,SAAS,oBAAoB,QAAQ;IACxC,kEAAkE;IAClE,IAAI,CAAA,GAAA,uLAAA,CAAA,aAAU,AAAD,EAAE,WAAW;QACtB,MAAM,WAAW;QACjB,MAAM,oBAAoB,SAAS,OAAO,CAAC,GAAG,CAAC,mBAAmB;QAClE,MAAM,aAAa,CAAA,GAAA,kLAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS,GAAG;QAChD,OAAO,CAAA,GAAA,2LAAA,CAAA,gBAAa,AAAD,EAAE,sBAAsB,CAAA,GAAA,2LAAA,CAAA,uBAAoB,AAAD,EAAE;IACpE;IACA,yDAAyD;IACzD,IAAI,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD,EAAE,WAAW;QAClB,MAAM,OAAO;QACb,OAAO,KAAK,IAAI,IAAI;IACxB;IACA,IAAI,OAAO,aAAa,UAAU;QAC9B,OAAO,CAAA,GAAA,2LAAA,CAAA,uBAAoB,AAAD,EAAE;IAChC;IACA,UAAU;IACV,OAAO;AACX;AAQO,SAAS,yBAAyB,QAAQ;IAC7C,IAAI,CAAA,GAAA,uLAAA,CAAA,aAAU,AAAD,EAAE,WAAW;QACtB,MAAM,WAAW;QACjB,OAAO,SAAS,OAAO,CAAC,iBAAiB,IAAI,CAAC;IAClD;IACA,IAAI,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD,EAAE,WAAW;QAClB,MAAM,OAAO;QACb,OAAO,KAAK,IAAI;IACpB;IACA,IAAI,OAAO,aAAa,UAAU;QAC9B,0BAA0B;QAC1B,OAAO,SAAS,MAAM;IAC1B;IACA,IAAI,oBAAoB,aAAa;QACjC,OAAO,SAAS,UAAU;IAC9B;IACA,IAAI,YAAY,MAAM,CAAC,WAAW;QAC9B,OAAO,SAAS,UAAU;IAC9B;IACA,OAAO,CAAC;AACZ","ignoreList":[0]}},
    {"offset": {"line": 1170, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1176, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/fetch/fetch-error.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nexport class FetchError extends Error {\n    constructor(message, info) {\n        super(message);\n        this.reason = info.reason;\n        this.url = info.url;\n        this.response = info.response;\n    }\n    /** A best effort reason for why the fetch failed */\n    reason;\n    /** The URL that failed to load. Empty string if not available. */\n    url;\n    /** The Response object, if any. */\n    response;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AAC7B,MAAM,mBAAmB;IAC5B,YAAY,OAAO,EAAE,IAAI,CAAE;QACvB,KAAK,CAAC;QACN,IAAI,CAAC,MAAM,GAAG,KAAK,MAAM;QACzB,IAAI,CAAC,GAAG,GAAG,KAAK,GAAG;QACnB,IAAI,CAAC,QAAQ,GAAG,KAAK,QAAQ;IACjC;IACA,kDAAkD,GAClD,OAAO;IACP,gEAAgE,GAChE,IAAI;IACJ,iCAAiC,GACjC,SAAS;AACb","ignoreList":[0]}},
    {"offset": {"line": 1193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1199, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/utils/response-utils.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isResponse } from \"../../javascript-utils/is-type.js\";\nimport { FetchError } from \"../fetch/fetch-error.js\";\nimport { getResourceContentLength, getResourceUrl, getResourceMIMEType } from \"./resource-utils.js\";\nimport { shortenUrlForDisplay } from \"./url-utils.js\";\n/**\n * Returns a Response object\n * Adds content-length header when possible\n *\n * @param resource\n */\nexport async function makeResponse(resource) {\n    if (isResponse(resource)) {\n        return resource;\n    }\n    // Add content-length header if possible\n    const headers = {};\n    const contentLength = getResourceContentLength(resource);\n    if (contentLength >= 0) {\n        headers['content-length'] = String(contentLength);\n    }\n    // `new Response(File)` does not preserve content-type and URL\n    // so we add them here\n    const url = getResourceUrl(resource);\n    const type = getResourceMIMEType(resource);\n    if (type) {\n        headers['content-type'] = type;\n    }\n    // Add a custom header with initial bytes if available\n    const initialDataUrl = await getInitialDataUrl(resource);\n    if (initialDataUrl) {\n        headers['x-first-bytes'] = initialDataUrl;\n    }\n    // TODO - is this the best way of handling strings?\n    // Maybe package as data URL instead?\n    if (typeof resource === 'string') {\n        // Convert to ArrayBuffer to avoid Response treating it as a URL\n        resource = new TextEncoder().encode(resource);\n    }\n    // Attempt to create a Response from the resource, adding headers and setting url\n    const response = new Response(resource, { headers });\n    // We can't control `Response.url` via constructor, use a property override to record URL.\n    Object.defineProperty(response, 'url', { value: url });\n    return response;\n}\n/**\n * Checks response status (async) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport async function checkResponse(response) {\n    if (!response.ok) {\n        const error = await getResponseError(response);\n        throw error;\n    }\n}\n/**\n * Checks response status (sync) and throws a helpful error message if status is not OK.\n * @param response\n */\nexport function checkResponseSync(response) {\n    if (!response.ok) {\n        let message = `${response.status} ${response.statusText}`;\n        message = message.length > 60 ? `${message.slice(0, 60)}...` : message;\n        throw new Error(message);\n    }\n}\n// HELPERS\nasync function getResponseError(response) {\n    const shortUrl = shortenUrlForDisplay(response.url);\n    let message = `Failed to fetch resource (${response.status}) ${response.statusText}: ${shortUrl}`;\n    message = message.length > 100 ? `${message.slice(0, 100)}...` : message;\n    const info = {\n        reason: response.statusText,\n        url: response.url,\n        response\n    };\n    // See if we got an error message in the body\n    try {\n        const contentType = response.headers.get('Content-Type');\n        info.reason =\n            !response.bodyUsed && contentType?.includes('application/json')\n                ? await response.json()\n                : await response.text();\n    }\n    catch (error) {\n        // eslint forbids return in a finally statement, so we just catch here\n    }\n    return new FetchError(message, info);\n}\nasync function getInitialDataUrl(resource) {\n    const INITIAL_DATA_LENGTH = 5;\n    if (typeof resource === 'string') {\n        return `data:,${resource.slice(0, INITIAL_DATA_LENGTH)}`;\n    }\n    if (resource instanceof Blob) {\n        const blobSlice = resource.slice(0, 5);\n        return await new Promise((resolve) => {\n            const reader = new FileReader();\n            reader.onload = (event) => resolve(event?.target?.result);\n            reader.readAsDataURL(blobSlice);\n        });\n    }\n    if (resource instanceof ArrayBuffer) {\n        const slice = resource.slice(0, INITIAL_DATA_LENGTH);\n        const base64 = arrayBufferToBase64(slice);\n        return `data:base64,${base64}`;\n    }\n    return null;\n}\n// https://stackoverflow.com/questions/9267899/arraybuffer-to-base64-encoded-string\nfunction arrayBufferToBase64(buffer) {\n    let binary = '';\n    const bytes = new Uint8Array(buffer);\n    for (let i = 0; i < bytes.byteLength; i++) {\n        binary += String.fromCharCode(bytes[i]);\n    }\n    return btoa(binary);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1314, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1320, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/fetch/fetch-file.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { resolvePath } from '@loaders.gl/loader-utils';\nimport { makeResponse } from \"../utils/response-utils.js\";\n// import {FetchError} from './fetch-error';\nexport function isNodePath(url) {\n    return !isRequestURL(url) && !isDataURL(url);\n}\nexport function isRequestURL(url) {\n    return url.startsWith('http:') || url.startsWith('https:');\n}\nexport function isDataURL(url) {\n    return url.startsWith('data:');\n}\n/**\n * fetch API compatible function\n * - Supports fetching from Node.js local file system paths\n * - Respects pathPrefix and file aliases\n */\nexport async function fetchFile(urlOrData, fetchOptions) {\n    if (typeof urlOrData === 'string') {\n        const url = resolvePath(urlOrData);\n        // Support fetching from local file system\n        if (isNodePath(url)) {\n            if (globalThis.loaders?.fetchNode) {\n                return globalThis.loaders?.fetchNode(url, fetchOptions);\n            }\n            // throw new Error(\n            //   'fetchFile: globalThis.loaders.fetchNode not defined. Install @loaders.gl/polyfills'\n            // );\n        }\n        // Call global fetch\n        return await fetch(url, fetchOptions);\n    }\n    // TODO - should we still call fetch on non-URL inputs?\n    return await makeResponse(urlOrData);\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;;;AAEpC;AADA;;;AAGO,SAAS,WAAW,GAAG;IAC1B,OAAO,CAAC,aAAa,QAAQ,CAAC,UAAU;AAC5C;AACO,SAAS,aAAa,GAAG;IAC5B,OAAO,IAAI,UAAU,CAAC,YAAY,IAAI,UAAU,CAAC;AACrD;AACO,SAAS,UAAU,GAAG;IACzB,OAAO,IAAI,UAAU,CAAC;AAC1B;AAMO,eAAe,UAAU,SAAS,EAAE,YAAY;IACnD,IAAI,OAAO,cAAc,UAAU;QAC/B,MAAM,MAAM,CAAA,GAAA,wMAAA,CAAA,cAAW,AAAD,EAAE;QACxB,0CAA0C;QAC1C,IAAI,WAAW,MAAM;YACjB,IAAI,WAAW,OAAO,EAAE,WAAW;gBAC/B,OAAO,WAAW,OAAO,EAAE,UAAU,KAAK;YAC9C;QACA,mBAAmB;QACnB,yFAAyF;QACzF,KAAK;QACT;QACA,oBAAoB;QACpB,OAAO,MAAM,MAAM,KAAK;IAC5B;IACA,uDAAuD;IACvD,OAAO,MAAM,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,EAAE;AAC9B","ignoreList":[0]}},
    {"offset": {"line": 1360, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1366, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/loader-utils/get-fetch-function.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isObject } from \"../../javascript-utils/is-type.js\";\nimport { fetchFile } from \"../fetch/fetch-file.js\";\nimport { getGlobalLoaderOptions } from \"./option-utils.js\";\n/**\n * Gets the current fetch function from options and context\n * @param options\n * @param context\n */\nexport function getFetchFunction(options, context) {\n    const globalOptions = getGlobalLoaderOptions();\n    const loaderOptions = options || globalOptions;\n    // options.fetch can be a function\n    if (typeof loaderOptions.fetch === 'function') {\n        return loaderOptions.fetch;\n    }\n    // options.fetch can be an options object\n    if (isObject(loaderOptions.fetch)) {\n        return (url) => fetchFile(url, loaderOptions.fetch);\n    }\n    // else refer to context (from parent loader) if available\n    if (context?.fetch) {\n        return context?.fetch;\n    }\n    // else return the default fetch function\n    return fetchFile;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AAGpC;AAFA;AACA;;;;AAOO,SAAS,iBAAiB,OAAO,EAAE,OAAO;IAC7C,MAAM,gBAAgB,CAAA,GAAA,+LAAA,CAAA,yBAAsB,AAAD;IAC3C,MAAM,gBAAgB,WAAW;IACjC,kCAAkC;IAClC,IAAI,OAAO,cAAc,KAAK,KAAK,YAAY;QAC3C,OAAO,cAAc,KAAK;IAC9B;IACA,yCAAyC;IACzC,IAAI,CAAA,GAAA,uLAAA,CAAA,WAAQ,AAAD,EAAE,cAAc,KAAK,GAAG;QAC/B,OAAO,CAAC,MAAQ,CAAA,GAAA,mLAAA,CAAA,YAAS,AAAD,EAAE,KAAK,cAAc,KAAK;IACtD;IACA,0DAA0D;IAC1D,IAAI,SAAS,OAAO;QAChB,OAAO,SAAS;IACpB;IACA,yCAAyC;IACzC,OAAO,mLAAA,CAAA,YAAS;AACpB","ignoreList":[0]}},
    {"offset": {"line": 1396, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1402, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/loader-utils/loader-context.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { getFetchFunction } from \"./get-fetch-function.js\";\nimport { extractQueryString, stripQueryString } from \"../utils/url-utils.js\";\nimport { path } from '@loaders.gl/loader-utils';\n/**\n * \"sub\" loaders invoked by other loaders get a \"context\" injected on `this`\n * The context will inject core methods like `parse` and contain information\n * about loaders and options passed in to the top-level `parse` call.\n *\n * @param context\n * @param options\n * @param previousContext\n */\nexport function getLoaderContext(context, options, parentContext) {\n    // For recursive calls, we already have a context\n    // TODO - add any additional loaders to context?\n    if (parentContext) {\n        return parentContext;\n    }\n    const newContext = {\n        fetch: getFetchFunction(options, context),\n        ...context\n    };\n    // Parse URLs so that subloaders can easily generate correct strings\n    if (newContext.url) {\n        const baseUrl = stripQueryString(newContext.url);\n        newContext.baseUrl = baseUrl;\n        newContext.queryString = extractQueryString(newContext.url);\n        newContext.filename = path.filename(baseUrl);\n        newContext.baseUrl = path.dirname(baseUrl);\n    }\n    // Recursive loading does not use single loader\n    if (!Array.isArray(newContext.loaders)) {\n        newContext.loaders = null;\n    }\n    return newContext;\n}\n// eslint-disable-next-line complexity\nexport function getLoadersFromContext(loaders, context) {\n    // A single loader (non-array) indicates no selection desired. Force select.\n    if (loaders && !Array.isArray(loaders)) {\n        return loaders;\n    }\n    // Create a merged list\n    let candidateLoaders;\n    if (loaders) {\n        candidateLoaders = Array.isArray(loaders) ? loaders : [loaders];\n    }\n    if (context && context.loaders) {\n        const contextLoaders = Array.isArray(context.loaders) ? context.loaders : [context.loaders];\n        candidateLoaders = candidateLoaders ? [...candidateLoaders, ...contextLoaders] : contextLoaders;\n    }\n    // If no loaders, return null to look in globally registered loaders\n    return candidateLoaders && candidateLoaders.length ? candidateLoaders : undefined;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;AACpC;AACA;AACA;;;;AAUO,SAAS,iBAAiB,OAAO,EAAE,OAAO,EAAE,aAAa;IAC5D,iDAAiD;IACjD,gDAAgD;IAChD,IAAI,eAAe;QACf,OAAO;IACX;IACA,MAAM,aAAa;QACf,OAAO,CAAA,GAAA,wMAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS;QACjC,GAAG,OAAO;IACd;IACA,oEAAoE;IACpE,IAAI,WAAW,GAAG,EAAE;QAChB,MAAM,UAAU,CAAA,GAAA,kLAAA,CAAA,mBAAgB,AAAD,EAAE,WAAW,GAAG;QAC/C,WAAW,OAAO,GAAG;QACrB,WAAW,WAAW,GAAG,CAAA,GAAA,kLAAA,CAAA,qBAAkB,AAAD,EAAE,WAAW,GAAG;QAC1D,WAAW,QAAQ,GAAG,6NAAA,CAAA,OAAI,CAAC,QAAQ,CAAC;QACpC,WAAW,OAAO,GAAG,6NAAA,CAAA,OAAI,CAAC,OAAO,CAAC;IACtC;IACA,+CAA+C;IAC/C,IAAI,CAAC,MAAM,OAAO,CAAC,WAAW,OAAO,GAAG;QACpC,WAAW,OAAO,GAAG;IACzB;IACA,OAAO;AACX;AAEO,SAAS,sBAAsB,OAAO,EAAE,OAAO;IAClD,4EAA4E;IAC5E,IAAI,WAAW,CAAC,MAAM,OAAO,CAAC,UAAU;QACpC,OAAO;IACX;IACA,uBAAuB;IACvB,IAAI;IACJ,IAAI,SAAS;QACT,mBAAmB,MAAM,OAAO,CAAC,WAAW,UAAU;YAAC;SAAQ;IACnE;IACA,IAAI,WAAW,QAAQ,OAAO,EAAE;QAC5B,MAAM,iBAAiB,MAAM,OAAO,CAAC,QAAQ,OAAO,IAAI,QAAQ,OAAO,GAAG;YAAC,QAAQ,OAAO;SAAC;QAC3F,mBAAmB,mBAAmB;eAAI;eAAqB;SAAe,GAAG;IACrF;IACA,oEAAoE;IACpE,OAAO,oBAAoB,iBAAiB,MAAM,GAAG,mBAAmB;AAC5E","ignoreList":[0]}},
    {"offset": {"line": 1463, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1469, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/api/register-loaders.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { normalizeLoader } from \"../loader-utils/normalize-loader.js\";\nimport { getGlobalLoaderState } from \"../loader-utils/option-utils.js\";\n/**\n * Store global registered loaders on the global object to increase chances of cross loaders-version interoperability\n * This use case is not reliable but can help when testing new versions of loaders.gl with existing frameworks\n */\nconst getGlobalLoaderRegistry = () => {\n    const state = getGlobalLoaderState();\n    state.loaderRegistry = state.loaderRegistry || [];\n    return state.loaderRegistry;\n};\n/**\n * Register a list of global loaders\n * @note Registration erases loader type information.\n * @deprecated It is recommended that applications manage loader registration. This function will likely be remove in loaders.gl v5\n */\nexport function registerLoaders(loaders) {\n    const loaderRegistry = getGlobalLoaderRegistry();\n    loaders = Array.isArray(loaders) ? loaders : [loaders];\n    for (const loader of loaders) {\n        const normalizedLoader = normalizeLoader(loader);\n        if (!loaderRegistry.find((registeredLoader) => normalizedLoader === registeredLoader)) {\n            // add to the beginning of the loaderRegistry, so the last registeredLoader get picked\n            loaderRegistry.unshift(normalizedLoader);\n        }\n    }\n}\n/**\n * @deprecated It is recommended that applications manage loader registration. This function will likely be remove in loaders.gl v5\n */\nexport function getRegisteredLoaders() {\n    return getGlobalLoaderRegistry();\n}\n/** @deprecated For testing only  */\nexport function _unregisterLoaders() {\n    const state = getGlobalLoaderState();\n    state.loaderRegistry = [];\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;;AAEpC;AADA;;;AAEA;;;CAGC,GACD,MAAM,0BAA0B;IAC5B,MAAM,QAAQ,CAAA,GAAA,+LAAA,CAAA,uBAAoB,AAAD;IACjC,MAAM,cAAc,GAAG,MAAM,cAAc,IAAI,EAAE;IACjD,OAAO,MAAM,cAAc;AAC/B;AAMO,SAAS,gBAAgB,OAAO;IACnC,MAAM,iBAAiB;IACvB,UAAU,MAAM,OAAO,CAAC,WAAW,UAAU;QAAC;KAAQ;IACtD,KAAK,MAAM,UAAU,QAAS;QAC1B,MAAM,mBAAmB,CAAA,GAAA,mMAAA,CAAA,kBAAe,AAAD,EAAE;QACzC,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC,mBAAqB,qBAAqB,mBAAmB;YACnF,sFAAsF;YACtF,eAAe,OAAO,CAAC;QAC3B;IACJ;AACJ;AAIO,SAAS;IACZ,OAAO;AACX;AAEO,SAAS;IACZ,MAAM,QAAQ,CAAA,GAAA,+LAAA,CAAA,uBAAoB,AAAD;IACjC,MAAM,cAAc,GAAG,EAAE;AAC7B","ignoreList":[0]}},
    {"offset": {"line": 1509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1515, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/api/select-loader.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { compareArrayBuffers, path, log } from '@loaders.gl/loader-utils';\nimport { normalizeLoader } from \"../loader-utils/normalize-loader.js\";\nimport { getResourceUrl, getResourceMIMEType } from \"../utils/resource-utils.js\";\nimport { compareMIMETypes } from \"../utils/mime-type-utils.js\";\nimport { getRegisteredLoaders } from \"./register-loaders.js\";\nimport { isBlob } from \"../../javascript-utils/is-type.js\";\nimport { stripQueryString } from \"../utils/url-utils.js\";\nconst EXT_PATTERN = /\\.([^.]+)$/;\n// TODO - Need a variant that peeks at streams for parseInBatches\n// TODO - Detect multiple matching loaders? Use heuristics to grade matches?\n// TODO - Allow apps to pass context to disambiguate between multiple matches (e.g. multiple .json formats)?\n/**\n * Find a loader that matches file extension and/or initial file content\n * Search the loaders array argument for a loader that matches url extension or initial data\n * Returns: a normalized loader\n * @param data data to assist\n * @param loaders\n * @param options\n * @param context used internally, applications should not provide this parameter\n */\nexport async function selectLoader(data, loaders = [], options, context) {\n    if (!validHTTPResponse(data)) {\n        return null;\n    }\n    // First make a sync attempt, disabling exceptions\n    let loader = selectLoaderSync(data, loaders, { ...options, nothrow: true }, context);\n    if (loader) {\n        return loader;\n    }\n    // For Blobs and Files, try to asynchronously read a small initial slice and test again with that\n    // to see if we can detect by initial content\n    if (isBlob(data)) {\n        data = await data.slice(0, 10).arrayBuffer();\n        loader = selectLoaderSync(data, loaders, options, context);\n    }\n    // no loader available\n    if (!loader && !options?.nothrow) {\n        throw new Error(getNoValidLoaderMessage(data));\n    }\n    return loader;\n}\n/**\n * Find a loader that matches file extension and/or initial file content\n * Search the loaders array argument for a loader that matches url extension or initial data\n * Returns: a normalized loader\n * @param data data to assist\n * @param loaders\n * @param options\n * @param context used internally, applications should not provide this parameter\n */\nexport function selectLoaderSync(data, loaders = [], options, context) {\n    if (!validHTTPResponse(data)) {\n        return null;\n    }\n    // eslint-disable-next-line complexity\n    // if only a single loader was provided (not as array), force its use\n    // TODO - Should this behavior be kept and documented?\n    if (loaders && !Array.isArray(loaders)) {\n        // TODO - remove support for legacy loaders\n        return normalizeLoader(loaders);\n    }\n    // Build list of candidate loaders that will be searched in order for a match\n    let candidateLoaders = [];\n    // First search supplied loaders\n    if (loaders) {\n        candidateLoaders = candidateLoaders.concat(loaders);\n    }\n    // Then fall back to registered loaders\n    if (!options?.ignoreRegisteredLoaders) {\n        candidateLoaders.push(...getRegisteredLoaders());\n    }\n    // TODO - remove support for legacy loaders\n    normalizeLoaders(candidateLoaders);\n    const loader = selectLoaderInternal(data, candidateLoaders, options, context);\n    // no loader available\n    if (!loader && !options?.nothrow) {\n        throw new Error(getNoValidLoaderMessage(data));\n    }\n    return loader;\n}\n/** Implements loaders selection logic */\n// eslint-disable-next-line complexity\nfunction selectLoaderInternal(data, loaders, options, context) {\n    const url = getResourceUrl(data);\n    const type = getResourceMIMEType(data);\n    const testUrl = stripQueryString(url) || context?.url;\n    let loader = null;\n    let reason = '';\n    // if options.mimeType is supplied, it takes precedence\n    if (options?.mimeType) {\n        loader = findLoaderByMIMEType(loaders, options?.mimeType);\n        reason = `match forced by supplied MIME type ${options?.mimeType}`;\n    }\n    // Look up loader by url\n    loader = loader || findLoaderByUrl(loaders, testUrl);\n    reason = reason || (loader ? `matched url ${testUrl}` : '');\n    // Look up loader by mime type\n    loader = loader || findLoaderByMIMEType(loaders, type);\n    reason = reason || (loader ? `matched MIME type ${type}` : '');\n    // Look for loader via initial bytes (Note: not always accessible (e.g. Response, stream, async iterator)\n    // @ts-ignore Blob | Response\n    loader = loader || findLoaderByInitialBytes(loaders, data);\n    // @ts-ignore Blob | Response\n    reason = reason || (loader ? `matched initial data ${getFirstCharacters(data)}` : '');\n    // Look up loader by fallback mime type\n    if (options?.fallbackMimeType) {\n        loader = loader || findLoaderByMIMEType(loaders, options?.fallbackMimeType);\n        reason = reason || (loader ? `matched fallback MIME type ${type}` : '');\n    }\n    if (reason) {\n        log.log(1, `selectLoader selected ${loader?.name}: ${reason}.`);\n    }\n    return loader;\n}\n/** Check HTTP Response */\nfunction validHTTPResponse(data) {\n    // HANDLE HTTP status\n    if (data instanceof Response) {\n        // 204 - NO CONTENT. This handles cases where e.g. a tile server responds with 204 for a missing tile\n        if (data.status === 204) {\n            return false;\n        }\n    }\n    return true;\n}\n/** Generate a helpful message to help explain why loader selection failed. */\nfunction getNoValidLoaderMessage(data) {\n    const url = getResourceUrl(data);\n    const type = getResourceMIMEType(data);\n    let message = 'No valid loader found (';\n    message += url ? `${path.filename(url)}, ` : 'no url provided, ';\n    message += `MIME type: ${type ? `\"${type}\"` : 'not provided'}, `;\n    // First characters are only accessible when called on data (string or arrayBuffer).\n    // @ts-ignore Blob | Response\n    const firstCharacters = data ? getFirstCharacters(data) : '';\n    message += firstCharacters ? ` first bytes: \"${firstCharacters}\"` : 'first bytes: not available';\n    message += ')';\n    return message;\n}\nfunction normalizeLoaders(loaders) {\n    for (const loader of loaders) {\n        normalizeLoader(loader);\n    }\n}\n// TODO - Would be nice to support http://example.com/file.glb?parameter=1\n// E.g: x = new URL('http://example.com/file.glb?load=1'; x.pathname\nfunction findLoaderByUrl(loaders, url) {\n    // Get extension\n    const match = url && EXT_PATTERN.exec(url);\n    const extension = match && match[1];\n    return extension ? findLoaderByExtension(loaders, extension) : null;\n}\nfunction findLoaderByExtension(loaders, extension) {\n    extension = extension.toLowerCase();\n    for (const loader of loaders) {\n        for (const loaderExtension of loader.extensions) {\n            if (loaderExtension.toLowerCase() === extension) {\n                return loader;\n            }\n        }\n    }\n    return null;\n}\nfunction findLoaderByMIMEType(loaders, mimeType) {\n    for (const loader of loaders) {\n        if (loader.mimeTypes?.some((mimeType1) => compareMIMETypes(mimeType, mimeType1))) {\n            return loader;\n        }\n        // Support referring to loaders using the \"unregistered tree\"\n        // https://en.wikipedia.org/wiki/Media_type#Unregistered_tree\n        if (compareMIMETypes(mimeType, `application/x.${loader.id}`)) {\n            return loader;\n        }\n    }\n    return null;\n}\nfunction findLoaderByInitialBytes(loaders, data) {\n    if (!data) {\n        return null;\n    }\n    for (const loader of loaders) {\n        if (typeof data === 'string') {\n            if (testDataAgainstText(data, loader)) {\n                return loader;\n            }\n        }\n        else if (ArrayBuffer.isView(data)) {\n            // Typed Arrays can have offsets into underlying buffer\n            if (testDataAgainstBinary(data.buffer, data.byteOffset, loader)) {\n                return loader;\n            }\n        }\n        else if (data instanceof ArrayBuffer) {\n            const byteOffset = 0;\n            if (testDataAgainstBinary(data, byteOffset, loader)) {\n                return loader;\n            }\n        }\n        // TODO Handle streaming case (requires creating a new AsyncIterator)\n    }\n    return null;\n}\nfunction testDataAgainstText(data, loader) {\n    if (loader.testText) {\n        return loader.testText(data);\n    }\n    const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n    return tests.some((test) => data.startsWith(test));\n}\nfunction testDataAgainstBinary(data, byteOffset, loader) {\n    const tests = Array.isArray(loader.tests) ? loader.tests : [loader.tests];\n    return tests.some((test) => testBinary(data, byteOffset, loader, test));\n}\nfunction testBinary(data, byteOffset, loader, test) {\n    if (test instanceof ArrayBuffer) {\n        return compareArrayBuffers(test, data, test.byteLength);\n    }\n    switch (typeof test) {\n        case 'function':\n            return test(data);\n        case 'string':\n            // Magic bytes check: If `test` is a string, check if binary data starts with that strings\n            const magic = getMagicString(data, byteOffset, test.length);\n            return test === magic;\n        default:\n            return false;\n    }\n}\nfunction getFirstCharacters(data, length = 5) {\n    if (typeof data === 'string') {\n        return data.slice(0, length);\n    }\n    else if (ArrayBuffer.isView(data)) {\n        // Typed Arrays can have offsets into underlying buffer\n        return getMagicString(data.buffer, data.byteOffset, length);\n    }\n    else if (data instanceof ArrayBuffer) {\n        const byteOffset = 0;\n        return getMagicString(data, byteOffset, length);\n    }\n    return '';\n}\nfunction getMagicString(arrayBuffer, byteOffset, length) {\n    if (arrayBuffer.byteLength < byteOffset + length) {\n        return '';\n    }\n    const dataView = new DataView(arrayBuffer);\n    let magic = '';\n    for (let i = 0; i < length; i++) {\n        magic += String.fromCharCode(dataView.getUint8(byteOffset + i));\n    }\n    return magic;\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 1763, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1769, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/iterators/make-iterator/make-array-buffer-iterator.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst DEFAULT_CHUNK_SIZE = 256 * 1024;\n/**\n * Returns an iterator that breaks a big ArrayBuffer into chunks and yields them one-by-one\n * @param blob ArrayBuffer to iterate over\n * @param options\n * @param options.chunkSize\n */\nexport function* makeArrayBufferIterator(arrayBuffer, options = {}) {\n    const { chunkSize = DEFAULT_CHUNK_SIZE } = options;\n    let byteOffset = 0;\n    while (byteOffset < arrayBuffer.byteLength) {\n        // Create a chunk of the right size\n        const chunkByteLength = Math.min(arrayBuffer.byteLength - byteOffset, chunkSize);\n        const chunk = new ArrayBuffer(chunkByteLength);\n        // Copy data from the big chunk\n        const sourceArray = new Uint8Array(arrayBuffer, byteOffset, chunkByteLength);\n        const chunkArray = new Uint8Array(chunk);\n        chunkArray.set(sourceArray);\n        // yield the chunk\n        byteOffset += chunkByteLength;\n        yield chunk;\n    }\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AACpC,MAAM,qBAAqB,MAAM;AAO1B,UAAU,wBAAwB,WAAW,EAAE,UAAU,CAAC,CAAC;IAC9D,MAAM,EAAE,YAAY,kBAAkB,EAAE,GAAG;IAC3C,IAAI,aAAa;IACjB,MAAO,aAAa,YAAY,UAAU,CAAE;QACxC,mCAAmC;QACnC,MAAM,kBAAkB,KAAK,GAAG,CAAC,YAAY,UAAU,GAAG,YAAY;QACtE,MAAM,QAAQ,IAAI,YAAY;QAC9B,+BAA+B;QAC/B,MAAM,cAAc,IAAI,WAAW,aAAa,YAAY;QAC5D,MAAM,aAAa,IAAI,WAAW;QAClC,WAAW,GAAG,CAAC;QACf,kBAAkB;QAClB,cAAc;QACd,MAAM;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1792, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1798, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/iterators/make-iterator/make-stream-iterator.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isBrowser, toArrayBuffer } from '@loaders.gl/loader-utils';\n/**\n * Returns an async iterable that reads from a stream (works in both Node.js and browsers)\n * @param stream stream to iterator over\n */\nexport function makeStreamIterator(stream, options) {\n    return isBrowser\n        ? makeBrowserStreamIterator(stream, options)\n        : makeNodeStreamIterator(stream, options);\n}\n/**\n * Returns an async iterable that reads from a DOM (browser) stream\n * @param stream stream to iterate from\n * @see https://jakearchibald.com/2017/async-iterators-and-generators/#making-streams-iterate\n */\nasync function* makeBrowserStreamIterator(stream, options) {\n    // WhatWG: stream is supposed to have a `getIterator` method\n    // if (typeof stream.getIterator === 'function') {\n    //   return stream.getIterator();\n    // }\n    // if (typeof stream[Symbol.asyncIterator] === 'function') {\n    //   return makeToArrayBufferIterator(stream);\n    // }\n    // In the browser, we first need to get a lock on the stream\n    const reader = stream.getReader();\n    let nextBatchPromise;\n    try {\n        // eslint-disable-next-line no-constant-condition\n        while (true) {\n            const currentBatchPromise = nextBatchPromise || reader.read();\n            // Issue a read for an additional batch, while we await the next batch\n            // Idea is to make fetching happen in parallel with processing / parsing\n            if (options?._streamReadAhead) {\n                nextBatchPromise = reader.read();\n            }\n            // Read from the stream\n            // value is a Uint8Array\n            const { done, value } = await currentBatchPromise;\n            // Exit if we're done\n            if (done) {\n                return;\n            }\n            // Else yield the chunk\n            yield toArrayBuffer(value);\n        }\n    }\n    catch (error) {\n        // TODO - examples makes it look like this should always be called,\n        // but that generates exceptions so only call it if we do not reach the end\n        reader.releaseLock();\n    }\n}\n/**\n * Returns an async iterable that reads from a DOM (browser) stream\n * @param stream stream to iterate from\n * @note Requires Node.js >= 10\n */\nasync function* makeNodeStreamIterator(stream, options) {\n    // Hacky test for node version to ensure we don't call bad polyfills\n    // NODE 10+: stream is an asyncIterator\n    for await (const chunk of stream) {\n        yield toArrayBuffer(chunk); // Coerce each chunk to ArrayBuffer\n    }\n}\n/* TODO - remove NODE < 10\n * @see https://github.com/bustle/streaming-iterables, MIT license\n *\n  if (typeof stream[Symbol.asyncIterator] === 'function') {\n    return;\n  }\n\n  // TODO - check if is this ever used in Node 10+?\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const data = stream.read();\n    if (data !== null) {\n      yield toArrayBuffer(data);\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n    if (stream._readableState?.ended) {\n      return;\n    }\n    await onceReadable(stream);\n  }\n\nasync function onceReadable(stream: Readable): Promise<any> {\n  return new Promise((resolve) => {\n    stream.once('readable', resolve);\n  });\n}\n  */\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AACpC;AAAA;;AAKO,SAAS,mBAAmB,MAAM,EAAE,OAAO;IAC9C,OAAO,+LAAA,CAAA,YAAS,GACV,0BAA0B,QAAQ,WAClC,uBAAuB,QAAQ;AACzC;AACA;;;;CAIC,GACD,gBAAgB,0BAA0B,MAAM,EAAE,OAAO;IACrD,4DAA4D;IAC5D,kDAAkD;IAClD,iCAAiC;IACjC,IAAI;IACJ,4DAA4D;IAC5D,8CAA8C;IAC9C,IAAI;IACJ,4DAA4D;IAC5D,MAAM,SAAS,OAAO,SAAS;IAC/B,IAAI;IACJ,IAAI;QACA,iDAAiD;QACjD,MAAO,KAAM;YACT,MAAM,sBAAsB,oBAAoB,OAAO,IAAI;YAC3D,sEAAsE;YACtE,wEAAwE;YACxE,IAAI,SAAS,kBAAkB;gBAC3B,mBAAmB,OAAO,IAAI;YAClC;YACA,uBAAuB;YACvB,wBAAwB;YACxB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM;YAC9B,qBAAqB;YACrB,IAAI,MAAM;gBACN;YACJ;YACA,uBAAuB;YACvB,MAAM,CAAA,GAAA,wNAAA,CAAA,gBAAa,AAAD,EAAE;QACxB;IACJ,EACA,OAAO,OAAO;QACV,mEAAmE;QACnE,2EAA2E;QAC3E,OAAO,WAAW;IACtB;AACJ;AACA;;;;CAIC,GACD,gBAAgB,uBAAuB,MAAM,EAAE,OAAO;IAClD,oEAAoE;IACpE,uCAAuC;IACvC,WAAW,MAAM,SAAS,OAAQ;QAC9B,MAAM,CAAA,GAAA,wNAAA,CAAA,gBAAa,AAAD,EAAE,QAAQ,mCAAmC;IACnE;AACJ,EACA;;;;;;;;;;;;;;;;;;;;;;;;;;;EA2BE","ignoreList":[0]}},
    {"offset": {"line": 1888, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1894, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/iterators/make-iterator/make-blob-iterator.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst DEFAULT_CHUNK_SIZE = 1024 * 1024; // 1MB — biggest value that keeps UI responsive\n/**\n * Returns an iterator that breaks a big Blob into chunks and yields them one-by-one\n * @param blob Blob or File object\n * @param options\n * @param options.chunkSize\n */\nexport async function* makeBlobIterator(blob, options) {\n    const chunkSize = options?.chunkSize || DEFAULT_CHUNK_SIZE;\n    let offset = 0;\n    while (offset < blob.size) {\n        const end = offset + chunkSize;\n        const chunk = await blob.slice(offset, end).arrayBuffer();\n        offset = end;\n        yield chunk;\n    }\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AACpC,MAAM,qBAAqB,OAAO,MAAM,+CAA+C;AAOhF,gBAAgB,iBAAiB,IAAI,EAAE,OAAO;IACjD,MAAM,YAAY,SAAS,aAAa;IACxC,IAAI,SAAS;IACb,MAAO,SAAS,KAAK,IAAI,CAAE;QACvB,MAAM,MAAM,SAAS;QACrB,MAAM,QAAQ,MAAM,KAAK,KAAK,CAAC,QAAQ,KAAK,WAAW;QACvD,SAAS;QACT,MAAM;IACV;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1911, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1917, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/iterators/make-iterator/make-string-iterator.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nconst DEFAULT_CHUNK_SIZE = 256 * 1024;\n/**\n * Returns an iterator that breaks a big string into chunks and yields them one-by-one as ArrayBuffers\n * @param blob string to iterate over\n * @param options\n * @param options.chunkSize\n */\nexport function* makeStringIterator(string, options) {\n    const chunkSize = options?.chunkSize || DEFAULT_CHUNK_SIZE;\n    let offset = 0;\n    const textEncoder = new TextEncoder();\n    while (offset < string.length) {\n        // Create a chunk of the right size\n        const chunkLength = Math.min(string.length - offset, chunkSize);\n        const chunk = string.slice(offset, offset + chunkLength);\n        offset += chunkLength;\n        // yield an ArrayBuffer chunk\n        yield textEncoder.encode(chunk);\n    }\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AACpC,MAAM,qBAAqB,MAAM;AAO1B,UAAU,mBAAmB,MAAM,EAAE,OAAO;IAC/C,MAAM,YAAY,SAAS,aAAa;IACxC,IAAI,SAAS;IACb,MAAM,cAAc,IAAI;IACxB,MAAO,SAAS,OAAO,MAAM,CAAE;QAC3B,mCAAmC;QACnC,MAAM,cAAc,KAAK,GAAG,CAAC,OAAO,MAAM,GAAG,QAAQ;QACrD,MAAM,QAAQ,OAAO,KAAK,CAAC,QAAQ,SAAS;QAC5C,UAAU;QACV,6BAA6B;QAC7B,MAAM,YAAY,MAAM,CAAC;IAC7B;AACJ","ignoreList":[0]}},
    {"offset": {"line": 1937, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1943, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/iterators/make-iterator/make-iterator.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { makeStringIterator } from \"./make-string-iterator.js\";\nimport { makeArrayBufferIterator } from \"./make-array-buffer-iterator.js\";\nimport { makeBlobIterator } from \"./make-blob-iterator.js\";\nimport { makeStreamIterator } from \"./make-stream-iterator.js\";\nimport { isBlob, isReadableStream, isResponse } from \"../../javascript-utils/is-type.js\";\n/**\n * Returns an iterator that breaks its input into chunks and yields them one-by-one.\n * @param data\n * @param options\n * @returns\n * This function can e.g. be used to enable data sources that can only be read atomically\n * (such as `Blob` and `File` via `FileReader`) to still be parsed in batches.\n */\nexport function makeIterator(data, options) {\n    if (typeof data === 'string') {\n        // Note: Converts string chunks to binary\n        return makeStringIterator(data, options);\n    }\n    if (data instanceof ArrayBuffer) {\n        return makeArrayBufferIterator(data, options);\n    }\n    if (isBlob(data)) {\n        return makeBlobIterator(data, options);\n    }\n    if (isReadableStream(data)) {\n        return makeStreamIterator(data, options);\n    }\n    if (isResponse(data)) {\n        const response = data;\n        return makeStreamIterator(response.body, options);\n    }\n    throw new Error('makeIterator');\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AAEpC;AAGA;AADA;AADA;AAFA;;;;;;AAaO,SAAS,aAAa,IAAI,EAAE,OAAO;IACtC,IAAI,OAAO,SAAS,UAAU;QAC1B,yCAAyC;QACzC,OAAO,CAAA,GAAA,iNAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM;IACpC;IACA,IAAI,gBAAgB,aAAa;QAC7B,OAAO,CAAA,GAAA,0NAAA,CAAA,0BAAuB,AAAD,EAAE,MAAM;IACzC;IACA,IAAI,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD,EAAE,OAAO;QACd,OAAO,CAAA,GAAA,+MAAA,CAAA,mBAAgB,AAAD,EAAE,MAAM;IAClC;IACA,IAAI,CAAA,GAAA,uLAAA,CAAA,mBAAgB,AAAD,EAAE,OAAO;QACxB,OAAO,CAAA,GAAA,iNAAA,CAAA,qBAAkB,AAAD,EAAE,MAAM;IACpC;IACA,IAAI,CAAA,GAAA,uLAAA,CAAA,aAAU,AAAD,EAAE,OAAO;QAClB,MAAM,WAAW;QACjB,OAAO,CAAA,GAAA,iNAAA,CAAA,qBAAkB,AAAD,EAAE,SAAS,IAAI,EAAE;IAC7C;IACA,MAAM,IAAI,MAAM;AACpB","ignoreList":[0]}},
    {"offset": {"line": 1979, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1985, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/loader-utils/get-data.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { concatenateArrayBuffersAsync } from '@loaders.gl/loader-utils';\nimport { isResponse, isReadableStream, isAsyncIterable, isIterable, isIterator, isBlob, isBuffer } from \"../../javascript-utils/is-type.js\";\nimport { makeIterator } from \"../../iterators/make-iterator/make-iterator.js\";\nimport { checkResponse, makeResponse } from \"../utils/response-utils.js\";\nconst ERR_DATA = 'Cannot convert supplied data type';\n// eslint-disable-next-line complexity\nexport function getArrayBufferOrStringFromDataSync(data, loader, options) {\n    if (loader.text && typeof data === 'string') {\n        return data;\n    }\n    if (isBuffer(data)) {\n        // @ts-ignore\n        data = data.buffer;\n    }\n    if (data instanceof ArrayBuffer) {\n        const arrayBuffer = data;\n        if (loader.text && !loader.binary) {\n            const textDecoder = new TextDecoder('utf8');\n            return textDecoder.decode(arrayBuffer);\n        }\n        return arrayBuffer;\n    }\n    // We may need to handle offsets\n    if (ArrayBuffer.isView(data)) {\n        // TextDecoder is invoked on typed arrays and will handle offsets\n        if (loader.text && !loader.binary) {\n            const textDecoder = new TextDecoder('utf8');\n            return textDecoder.decode(data);\n        }\n        let arrayBuffer = data.buffer;\n        // Since we are returning the underlying arrayBuffer, we must create a new copy\n        // if this typed array / Buffer is a partial view into the ArryayBuffer\n        // TODO - this is a potentially unnecessary copy\n        const byteLength = data.byteLength || data.length;\n        if (data.byteOffset !== 0 || byteLength !== arrayBuffer.byteLength) {\n            // console.warn(`loaders.gl copying arraybuffer of length ${byteLength}`);\n            arrayBuffer = arrayBuffer.slice(data.byteOffset, data.byteOffset + byteLength);\n        }\n        return arrayBuffer;\n    }\n    throw new Error(ERR_DATA);\n}\n// Convert async iterator to a promise\nexport async function getArrayBufferOrStringFromData(data, loader, options) {\n    const isArrayBuffer = data instanceof ArrayBuffer || ArrayBuffer.isView(data);\n    if (typeof data === 'string' || isArrayBuffer) {\n        return getArrayBufferOrStringFromDataSync(data, loader, options);\n    }\n    // Blobs and files are FileReader compatible\n    if (isBlob(data)) {\n        data = await makeResponse(data);\n    }\n    if (isResponse(data)) {\n        const response = data;\n        await checkResponse(response);\n        return loader.binary ? await response.arrayBuffer() : await response.text();\n    }\n    if (isReadableStream(data)) {\n        // @ts-expect-error TS2559 options type\n        data = makeIterator(data, options);\n    }\n    if (isIterable(data) || isAsyncIterable(data)) {\n        // Assume arrayBuffer iterator - attempt to concatenate\n        return concatenateArrayBuffersAsync(data);\n    }\n    throw new Error(ERR_DATA);\n}\nexport async function getAsyncIterableFromData(data, options) {\n    if (isIterator(data)) {\n        return data;\n    }\n    if (isResponse(data)) {\n        const response = data;\n        // Note Since this function is not async, we currently can't load error message, just status\n        await checkResponse(response);\n        // TODO - bug in polyfill, body can be a Promise under Node.js\n        // eslint-disable-next-line @typescript-eslint/await-thenable\n        const body = await response.body;\n        // TODO - body can be null?\n        return makeIterator(body, options);\n    }\n    if (isBlob(data) || isReadableStream(data)) {\n        return makeIterator(data, options);\n    }\n    if (isAsyncIterable(data)) {\n        return data;\n    }\n    return getIterableFromData(data);\n}\nexport async function getReadableStream(data) {\n    if (isReadableStream(data)) {\n        return data;\n    }\n    if (isResponse(data)) {\n        // @ts-ignore\n        return data.body;\n    }\n    const response = await makeResponse(data);\n    // @ts-ignore\n    return response.body;\n}\n// HELPERS\nfunction getIterableFromData(data) {\n    // generate an iterator that emits a single chunk\n    if (ArrayBuffer.isView(data)) {\n        return (function* oneChunk() {\n            yield data.buffer;\n        })();\n    }\n    if (data instanceof ArrayBuffer) {\n        return (function* oneChunk() {\n            yield data;\n        })();\n    }\n    if (isIterator(data)) {\n        return data;\n    }\n    if (isIterable(data)) {\n        return data[Symbol.iterator]();\n    }\n    throw new Error(ERR_DATA);\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2124, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/api/parse.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { parseWithWorker, canParseWithWorker, mergeLoaderOptions } from '@loaders.gl/loader-utils';\nimport { assert, validateWorkerVersion } from '@loaders.gl/worker-utils';\nimport { isLoaderObject } from \"../loader-utils/normalize-loader.js\";\nimport { isResponse } from \"../../javascript-utils/is-type.js\";\nimport { normalizeOptions } from \"../loader-utils/option-utils.js\";\nimport { getArrayBufferOrStringFromData } from \"../loader-utils/get-data.js\";\nimport { getLoaderContext, getLoadersFromContext } from \"../loader-utils/loader-context.js\";\nimport { getResourceUrl } from \"../utils/resource-utils.js\";\nimport { selectLoader } from \"./select-loader.js\";\n/**\n * Parses `data` using a specified loader\n * @param data\n * @param loaders\n * @param options\n * @param context\n */\n// implementation signature\nexport async function parse(data, loaders, options, context) {\n    // Signature: parse(data, options, context | url)\n    // Uses registered loaders\n    if (loaders && !Array.isArray(loaders) && !isLoaderObject(loaders)) {\n        context = undefined; // context not supported in short signature\n        options = loaders;\n        loaders = undefined;\n    }\n    data = await data; // Resolve any promise\n    options = options || {}; // Could be invalid...\n    // Extract a url for auto detection\n    const url = getResourceUrl(data);\n    // Chooses a loader (and normalizes it)\n    // Also use any loaders in the context, new loaders take priority\n    const typedLoaders = loaders;\n    const candidateLoaders = getLoadersFromContext(typedLoaders, context);\n    // todo hacky type cast\n    const loader = await selectLoader(data, candidateLoaders, options);\n    // Note: if no loader was found, if so just return null\n    if (!loader) {\n        return null;\n    }\n    // Normalize options\n    // @ts-expect-error\n    options = normalizeOptions(options, loader, candidateLoaders, url); // Could be invalid...\n    // Get a context (if already present, will be unchanged)\n    context = getLoaderContext(\n    // @ts-expect-error\n    { url, _parse: parse, loaders: candidateLoaders }, options, context || null);\n    return await parseWithLoader(loader, data, options, context);\n}\n// TODO: support progress and abort\n// TODO - should accept loader.parseAsyncIterator and concatenate.\nasync function parseWithLoader(loader, data, options, context) {\n    validateWorkerVersion(loader);\n    options = mergeLoaderOptions(loader.options, options);\n    if (isResponse(data)) {\n        // Serialize to support passing the response to web worker\n        const response = data;\n        const { ok, redirected, status, statusText, type, url } = response;\n        const headers = Object.fromEntries(response.headers.entries());\n        // @ts-expect-error TODO - fix this\n        context.response = { headers, ok, redirected, status, statusText, type, url };\n    }\n    data = await getArrayBufferOrStringFromData(data, loader, options);\n    const loaderWithParser = loader;\n    // First check for synchronous text parser, wrap results in promises\n    if (loaderWithParser.parseTextSync && typeof data === 'string') {\n        return loaderWithParser.parseTextSync(data, options, context);\n    }\n    // If we have a workerUrl and the loader can parse the given options efficiently in a worker\n    if (canParseWithWorker(loader, options)) {\n        return await parseWithWorker(loader, data, options, context, parse);\n    }\n    // Check for asynchronous parser\n    if (loaderWithParser.parseText && typeof data === 'string') {\n        return await loaderWithParser.parseText(data, options, context);\n    }\n    if (loaderWithParser.parse) {\n        return await loaderWithParser.parse(data, options, context);\n    }\n    // This should not happen, all sync loaders should also offer `parse` function\n    assert(!loaderWithParser.parseSync);\n    // TBD - If asynchronous parser not available, return null\n    throw new Error(`${loader.id} loader - no parser found and worker is disabled`);\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AAGpC;AAKA;AADA;AAEA;AAJA;AAHA;AADA;AAGA;AAEA;AALA;AACA;;;;;;;;;;AAgBO,eAAe,MAAM,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IACvD,iDAAiD;IACjD,0BAA0B;IAC1B,IAAI,WAAW,CAAC,MAAM,OAAO,CAAC,YAAY,CAAC,CAAA,GAAA,mMAAA,CAAA,iBAAc,AAAD,EAAE,UAAU;QAChE,UAAU,WAAW,2CAA2C;QAChE,UAAU;QACV,UAAU;IACd;IACA,OAAO,MAAM,MAAM,sBAAsB;IACzC,UAAU,WAAW,CAAC,GAAG,sBAAsB;IAC/C,mCAAmC;IACnC,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,iBAAc,AAAD,EAAE;IAC3B,uCAAuC;IACvC,iEAAiE;IACjE,MAAM,eAAe;IACrB,MAAM,mBAAmB,CAAA,GAAA,iMAAA,CAAA,wBAAqB,AAAD,EAAE,cAAc;IAC7D,uBAAuB;IACvB,MAAM,SAAS,MAAM,CAAA,GAAA,oLAAA,CAAA,eAAY,AAAD,EAAE,MAAM,kBAAkB;IAC1D,uDAAuD;IACvD,IAAI,CAAC,QAAQ;QACT,OAAO;IACX;IACA,oBAAoB;IACpB,mBAAmB;IACnB,UAAU,CAAA,GAAA,+LAAA,CAAA,mBAAgB,AAAD,EAAE,SAAS,QAAQ,kBAAkB,MAAM,sBAAsB;IAC1F,wDAAwD;IACxD,UAAU,CAAA,GAAA,iMAAA,CAAA,mBAAgB,AAAD,EACzB,mBAAmB;IACnB;QAAE;QAAK,QAAQ;QAAO,SAAS;IAAiB,GAAG,SAAS,WAAW;IACvE,OAAO,MAAM,gBAAgB,QAAQ,MAAM,SAAS;AACxD;AACA,mCAAmC;AACnC,kEAAkE;AAClE,eAAe,gBAAgB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO;IACzD,CAAA,GAAA,sNAAA,CAAA,wBAAqB,AAAD,EAAE;IACtB,UAAU,CAAA,GAAA,qNAAA,CAAA,qBAAkB,AAAD,EAAE,OAAO,OAAO,EAAE;IAC7C,IAAI,CAAA,GAAA,uLAAA,CAAA,aAAU,AAAD,EAAE,OAAO;QAClB,0DAA0D;QAC1D,MAAM,WAAW;QACjB,MAAM,EAAE,EAAE,EAAE,UAAU,EAAE,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG;QAC1D,MAAM,UAAU,OAAO,WAAW,CAAC,SAAS,OAAO,CAAC,OAAO;QAC3D,mCAAmC;QACnC,QAAQ,QAAQ,GAAG;YAAE;YAAS;YAAI;YAAY;YAAQ;YAAY;YAAM;QAAI;IAChF;IACA,OAAO,MAAM,CAAA,GAAA,2LAAA,CAAA,iCAA8B,AAAD,EAAE,MAAM,QAAQ;IAC1D,MAAM,mBAAmB;IACzB,oEAAoE;IACpE,IAAI,iBAAiB,aAAa,IAAI,OAAO,SAAS,UAAU;QAC5D,OAAO,iBAAiB,aAAa,CAAC,MAAM,SAAS;IACzD;IACA,4FAA4F;IAC5F,IAAI,CAAA,GAAA,4NAAA,CAAA,qBAAkB,AAAD,EAAE,QAAQ,UAAU;QACrC,OAAO,MAAM,CAAA,GAAA,4NAAA,CAAA,kBAAe,AAAD,EAAE,QAAQ,MAAM,SAAS,SAAS;IACjE;IACA,gCAAgC;IAChC,IAAI,iBAAiB,SAAS,IAAI,OAAO,SAAS,UAAU;QACxD,OAAO,MAAM,iBAAiB,SAAS,CAAC,MAAM,SAAS;IAC3D;IACA,IAAI,iBAAiB,KAAK,EAAE;QACxB,OAAO,MAAM,iBAAiB,KAAK,CAAC,MAAM,SAAS;IACvD;IACA,8EAA8E;IAC9E,CAAA,GAAA,8LAAA,CAAA,SAAM,AAAD,EAAE,CAAC,iBAAiB,SAAS;IAClC,0DAA0D;IAC1D,MAAM,IAAI,MAAM,GAAG,OAAO,EAAE,CAAC,gDAAgD,CAAC;AAClF","ignoreList":[0]}},
    {"offset": {"line": 2227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2233, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/core/dist/lib/api/load.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isBlob } from \"../../javascript-utils/is-type.js\";\nimport { isLoaderObject } from \"../loader-utils/normalize-loader.js\";\nimport { getFetchFunction } from \"../loader-utils/get-fetch-function.js\";\nimport { parse } from \"./parse.js\";\n// export async function load(url: string | DataType, loaders: LoaderOptions): Promise<any>;\n// implementation signature\nexport async function load(url, loaders, options, context) {\n    let resolvedLoaders;\n    let resolvedOptions;\n    // Signature: load(url, options)\n    if (!Array.isArray(loaders) && !isLoaderObject(loaders)) {\n        resolvedLoaders = [];\n        resolvedOptions = loaders;\n        context = undefined; // context not supported in short signature\n    }\n    else {\n        resolvedLoaders = loaders;\n        resolvedOptions = options;\n    }\n    // Select fetch function\n    const fetch = getFetchFunction(resolvedOptions);\n    // at this point, `url` could be already loaded binary data\n    let data = url;\n    // url is a string, fetch the url\n    if (typeof url === 'string') {\n        data = await fetch(url);\n        // URL is Blob or File, fetchFile handles it (alt: we could generate ObjectURL here)\n    }\n    if (isBlob(url)) {\n        // The fetch response object will contain blob.name\n        // @ts-expect-error TODO - This may not work for overridden fetch functions\n        data = await fetch(url);\n    }\n    // Data is loaded (at least we have a `Response` object) so time to hand over to `parse`\n    // return await parse(data, loaders as Loader[], options);\n    return Array.isArray(resolvedLoaders)\n        ? await parse(data, resolvedLoaders, resolvedOptions) // loader array overload\n        : await parse(data, resolvedLoaders, resolvedOptions); // single loader overload\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AAEpC;AACA;AAFA;AAGA;;;;;AAGO,eAAe,KAAK,GAAG,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO;IACrD,IAAI;IACJ,IAAI;IACJ,gCAAgC;IAChC,IAAI,CAAC,MAAM,OAAO,CAAC,YAAY,CAAC,CAAA,GAAA,mMAAA,CAAA,iBAAc,AAAD,EAAE,UAAU;QACrD,kBAAkB,EAAE;QACpB,kBAAkB;QAClB,UAAU,WAAW,2CAA2C;IACpE,OACK;QACD,kBAAkB;QAClB,kBAAkB;IACtB;IACA,wBAAwB;IACxB,MAAM,QAAQ,CAAA,GAAA,wMAAA,CAAA,mBAAgB,AAAD,EAAE;IAC/B,2DAA2D;IAC3D,IAAI,OAAO;IACX,iCAAiC;IACjC,IAAI,OAAO,QAAQ,UAAU;QACzB,OAAO,MAAM,MAAM;IACnB,oFAAoF;IACxF;IACA,IAAI,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD,EAAE,MAAM;QACb,mDAAmD;QACnD,2EAA2E;QAC3E,OAAO,MAAM,MAAM;IACvB;IACA,wFAAwF;IACxF,0DAA0D;IAC1D,OAAO,MAAM,OAAO,CAAC,mBACf,MAAM,CAAA,GAAA,yKAAA,CAAA,QAAK,AAAD,EAAE,MAAM,iBAAiB,iBAAiB,wBAAwB;OAC5E,MAAM,CAAA,GAAA,yKAAA,CAAA,QAAK,AAAD,EAAE,MAAM,iBAAiB,kBAAkB,yBAAyB;AACxF","ignoreList":[0]}},
    {"offset": {"line": 2278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2284, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/env-utils/version.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n/**\n * TODO - unpkg.com doesn't seem to have a `latest` specifier for alpha releases...\n * 'beta' on beta branch, 'latest' on prod branch\n */\nexport const NPM_TAG = 'latest';\nfunction getVersion() {\n    if (!globalThis._loadersgl_?.version) {\n        globalThis._loadersgl_ = globalThis._loadersgl_ || {};\n        // __VERSION__ is injected by babel-plugin-version-inline\n        if (typeof \"4.3.2\" === 'undefined') {\n            // eslint-disable-next-line\n            console.warn('loaders.gl: The __VERSION__ variable is not injected using babel plugin. Latest unstable workers would be fetched from the CDN.');\n            globalThis._loadersgl_.version = NPM_TAG;\n        }\n        else {\n            globalThis._loadersgl_.version = \"4.3.2\";\n        }\n    }\n    return globalThis._loadersgl_.version;\n}\nexport const VERSION = getVersion();\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;AACpC,uGAAuG;AACvG;;;CAGC;;;;AACM,MAAM,UAAU;AACvB,SAAS;IACL,IAAI,CAAC,WAAW,WAAW,EAAE,SAAS;QAClC,WAAW,WAAW,GAAG,WAAW,WAAW,IAAI,CAAC;QACpD,yDAAyD;QACzD,IAAI,OAAO,YAAY,aAAa;YAChC,2BAA2B;YAC3B,QAAQ,IAAI,CAAC;YACb,WAAW,WAAW,CAAC,OAAO,GAAG;QACrC,OACK;YACD,WAAW,WAAW,CAAC,OAAO,GAAG;QACrC;IACJ;IACA,OAAO,WAAW,WAAW,CAAC,OAAO;AACzC;AACO,MAAM,UAAU","ignoreList":[0]}},
    {"offset": {"line": 2311, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2317, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/env-utils/assert.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Replacement for the external assert method to reduce bundle size\n// Note: We don't use the second \"message\" argument in calling code,\n// so no need to support it here\n/** Throws an `Error` with the optional `message` if `condition` is falsy */\nexport function assert(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'loaders.gl assertion failed.');\n    }\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;AACpC,mEAAmE;AACnE,oEAAoE;AACpE,gCAAgC;AAChC,0EAA0E;;;AACnE,SAAS,OAAO,SAAS,EAAE,OAAO;IACrC,IAAI,CAAC,WAAW;QACZ,MAAM,IAAI,MAAM,WAAW;IAC/B;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2331, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2337, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/worker-api/validate-worker-version.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from \"../env-utils/assert.js\";\nimport { VERSION } from \"../env-utils/version.js\";\n/**\n * Check if worker is compatible with this library version\n * @param worker\n * @param libVersion\n * @returns `true` if the two versions are compatible\n */\nexport function validateWorkerVersion(worker, coreVersion = VERSION) {\n    assert(worker, 'no worker provided');\n    const workerVersion = worker.version;\n    if (!coreVersion || !workerVersion) {\n        return false;\n    }\n    // TODO enable when fix the __version__ injection\n    // const coreVersions = parseVersion(coreVersion);\n    // const workerVersions = parseVersion(workerVersion);\n    // assert(\n    //   coreVersion.major === workerVersion.major && coreVersion.minor <= workerVersion.minor,\n    //   `worker: ${worker.name} is not compatible. ${coreVersion.major}.${\n    //     coreVersion.minor\n    //   }+ is required.`\n    // );\n    return true;\n}\n// @ts-ignore\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction parseVersion(version) {\n    const parts = version.split('.').map(Number);\n    return { major: parts[0], minor: parts[1] };\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AAEpC;AADA;;;AAQO,SAAS,sBAAsB,MAAM,EAAE,cAAc,+LAAA,CAAA,UAAO;IAC/D,CAAA,GAAA,8LAAA,CAAA,SAAM,AAAD,EAAE,QAAQ;IACf,MAAM,gBAAgB,OAAO,OAAO;IACpC,IAAI,CAAC,eAAe,CAAC,eAAe;QAChC,OAAO;IACX;IACA,iDAAiD;IACjD,kDAAkD;IAClD,sDAAsD;IACtD,UAAU;IACV,2FAA2F;IAC3F,uEAAuE;IACvE,wBAAwB;IACxB,qBAAqB;IACrB,KAAK;IACL,OAAO;AACX;AACA,aAAa;AACb,6DAA6D;AAC7D,SAAS,aAAa,OAAO;IACzB,MAAM,QAAQ,QAAQ,KAAK,CAAC,KAAK,GAAG,CAAC;IACrC,OAAO;QAAE,OAAO,KAAK,CAAC,EAAE;QAAE,OAAO,KAAK,CAAC,EAAE;IAAC;AAC9C","ignoreList":[0]}},
    {"offset": {"line": 2373, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2379, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/env-utils/globals.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// Purpose: include this in your module to avoids adding dependencies on\n// micro modules like 'global' and 'is-browser';\n/* eslint-disable no-restricted-globals */\nconst globals = {\n    self: typeof self !== 'undefined' && self,\n    window: typeof window !== 'undefined' && window,\n    global: typeof global !== 'undefined' && global,\n    document: typeof document !== 'undefined' && document\n};\nconst self_ = globals.self || globals.window || globals.global || {};\nconst window_ = globals.window || globals.self || globals.global || {};\nconst global_ = globals.global || globals.self || globals.window || {};\nconst document_ = globals.document || {};\nexport { self_ as self, window_ as window, global_ as global, document_ as document };\n/** true if running in the browser, false if running in Node.js */\nexport const isBrowser = \n// @ts-ignore process.browser\ntypeof process !== 'object' || String(process) !== '[object process]' || process.browser;\n/** true if running on a worker thread */\nexport const isWorker = typeof importScripts === 'function';\n/** true if running on a mobile device */\nexport const isMobile = typeof window !== 'undefined' && typeof window.orientation !== 'undefined';\n// Extract node major version\nconst matches = typeof process !== 'undefined' && process.version && /v([0-9]*)/.exec(process.version);\n/** Version of Node.js if running under Node, otherwise 0 */\nexport const nodeVersion = (matches && parseFloat(matches[1])) || 0;\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;AACpC,wEAAwE;AACxE,gDAAgD;AAChD,wCAAwC;;;;;;;;;;AAejC;AAdP,MAAM,UAAU;IACZ,MAAM,OAAO,SAAS,eAAe;IACrC,QAAQ,OAAO,WAAW,eAAe;IACzC,QAAQ,OAAO,WAAW,eAAe;IACzC,UAAU,OAAO,aAAa,eAAe;AACjD;AACA,MAAM,QAAQ,QAAQ,IAAI,IAAI,QAAQ,MAAM,IAAI,QAAQ,MAAM,IAAI,CAAC;AACnE,MAAM,UAAU,QAAQ,MAAM,IAAI,QAAQ,IAAI,IAAI,QAAQ,MAAM,IAAI,CAAC;AACrE,MAAM,UAAU,QAAQ,MAAM,IAAI,QAAQ,IAAI,IAAI,QAAQ,MAAM,IAAI,CAAC;AACrE,MAAM,YAAY,QAAQ,QAAQ,IAAI,CAAC;;AAGhC,MAAM,YACb,6BAA6B;AAC7B,OAAO,gKAAA,CAAA,UAAO,KAAK,YAAY,OAAO,gKAAA,CAAA,UAAO,MAAM;AAE5C,MAAM,WAAW,OAAO,kBAAkB;AAE1C,MAAM,WAAW,OAAO,WAAW,eAAe,OAAO,OAAO,WAAW,KAAK;AACvF,6BAA6B;AAC7B,MAAM,UAAU,OAAO,gKAAA,CAAA,UAAO,KAAK,eAAe,gKAAA,CAAA,UAAO,CAAC,OAAO,IAAI,YAAY,IAAI,CAAC,gKAAA,CAAA,UAAO,CAAC,OAAO;AAE9F,MAAM,cAAc,AAAC,WAAW,WAAW,OAAO,CAAC,EAAE,KAAM","ignoreList":[0]}},
    {"offset": {"line": 2413, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2419, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/node/worker_threads-browser.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n/** Browser polyfill for Node.js built-in `worker_threads` module.\n * These fills are non-functional, and just intended to ensure that\n * `import 'worker_threads` doesn't break browser builds.\n * The replacement is done in package.json browser field\n */\nexport class NodeWorker {\n    terminate() { }\n}\nexport const parentPort = null;\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;AACpC;;;;CAIC;;;;AACM,MAAM;IACT,YAAY,CAAE;AAClB;AACO,MAAM,aAAa","ignoreList":[0]}},
    {"offset": {"line": 2434, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2440, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/worker-utils/get-transfer-list.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// NOTE - there is a copy of this function is both in core and loader-utils\n// core does not need all the utils in loader-utils, just this one.\n/**\n * Returns an array of Transferrable objects that can be used with postMessage\n * https://developer.mozilla.org/en-US/docs/Web/API/Worker/postMessage\n * @param object data to be sent via postMessage\n * @param recursive - not for application use\n * @param transfers - not for application use\n * @returns a transfer list that can be passed to postMessage\n */\nexport function getTransferList(object, recursive = true, transfers) {\n    // Make sure that items in the transfer list is unique\n    const transfersSet = transfers || new Set();\n    if (!object) {\n        // ignore\n    }\n    else if (isTransferable(object)) {\n        transfersSet.add(object);\n    }\n    else if (isTransferable(object.buffer)) {\n        // Typed array\n        transfersSet.add(object.buffer);\n    }\n    else if (ArrayBuffer.isView(object)) {\n        // object is a TypeArray viewing into a SharedArrayBuffer (not transferable)\n        // Do not iterate through the content in this case\n    }\n    else if (recursive && typeof object === 'object') {\n        for (const key in object) {\n            // Avoid perf hit - only go one level deep\n            getTransferList(object[key], recursive, transfersSet);\n        }\n    }\n    // If transfers is defined, is internal recursive call\n    // Otherwise it's called by the user\n    return transfers === undefined ? Array.from(transfersSet) : [];\n}\n// https://developer.mozilla.org/en-US/docs/Web/API/Transferable\nfunction isTransferable(object) {\n    if (!object) {\n        return false;\n    }\n    if (object instanceof ArrayBuffer) {\n        return true;\n    }\n    if (typeof MessagePort !== 'undefined' && object instanceof MessagePort) {\n        return true;\n    }\n    if (typeof ImageBitmap !== 'undefined' && object instanceof ImageBitmap) {\n        return true;\n    }\n    // @ts-ignore\n    if (typeof OffscreenCanvas !== 'undefined' && object instanceof OffscreenCanvas) {\n        return true;\n    }\n    return false;\n}\n/**\n * Recursively drop non serializable values like functions and regexps.\n * @param object\n */\nexport function getTransferListForWriter(object) {\n    if (object === null) {\n        return {};\n    }\n    const clone = Object.assign({}, object);\n    Object.keys(clone).forEach((key) => {\n        // Typed Arrays and Arrays are passed with no change\n        if (typeof object[key] === 'object' &&\n            !ArrayBuffer.isView(object[key]) &&\n            !(object[key] instanceof Array)) {\n            clone[key] = getTransferListForWriter(object[key]);\n        }\n        else if (typeof clone[key] === 'function' || clone[key] instanceof RegExp) {\n            clone[key] = {};\n        }\n        else {\n            clone[key] = object[key];\n        }\n    });\n    return clone;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;AACpC,2EAA2E;AAC3E,mEAAmE;AACnE;;;;;;;CAOC;;;;AACM,SAAS,gBAAgB,MAAM,EAAE,YAAY,IAAI,EAAE,SAAS;IAC/D,sDAAsD;IACtD,MAAM,eAAe,aAAa,IAAI;IACtC,IAAI,CAAC,QAAQ;IACT,SAAS;IACb,OACK,IAAI,eAAe,SAAS;QAC7B,aAAa,GAAG,CAAC;IACrB,OACK,IAAI,eAAe,OAAO,MAAM,GAAG;QACpC,cAAc;QACd,aAAa,GAAG,CAAC,OAAO,MAAM;IAClC,OACK,IAAI,YAAY,MAAM,CAAC,SAAS;IACjC,4EAA4E;IAC5E,kDAAkD;IACtD,OACK,IAAI,aAAa,OAAO,WAAW,UAAU;QAC9C,IAAK,MAAM,OAAO,OAAQ;YACtB,0CAA0C;YAC1C,gBAAgB,MAAM,CAAC,IAAI,EAAE,WAAW;QAC5C;IACJ;IACA,sDAAsD;IACtD,oCAAoC;IACpC,OAAO,cAAc,YAAY,MAAM,IAAI,CAAC,gBAAgB,EAAE;AAClE;AACA,gEAAgE;AAChE,SAAS,eAAe,MAAM;IAC1B,IAAI,CAAC,QAAQ;QACT,OAAO;IACX;IACA,IAAI,kBAAkB,aAAa;QAC/B,OAAO;IACX;IACA,IAAI,OAAO,gBAAgB,eAAe,kBAAkB,aAAa;QACrE,OAAO;IACX;IACA,IAAI,OAAO,gBAAgB,eAAe,kBAAkB,aAAa;QACrE,OAAO;IACX;IACA,aAAa;IACb,IAAI,OAAO,oBAAoB,eAAe,kBAAkB,iBAAiB;QAC7E,OAAO;IACX;IACA,OAAO;AACX;AAKO,SAAS,yBAAyB,MAAM;IAC3C,IAAI,WAAW,MAAM;QACjB,OAAO,CAAC;IACZ;IACA,MAAM,QAAQ,OAAO,MAAM,CAAC,CAAC,GAAG;IAChC,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,CAAC;QACxB,oDAAoD;QACpD,IAAI,OAAO,MAAM,CAAC,IAAI,KAAK,YACvB,CAAC,YAAY,MAAM,CAAC,MAAM,CAAC,IAAI,KAC/B,CAAC,CAAC,MAAM,CAAC,IAAI,YAAY,KAAK,GAAG;YACjC,KAAK,CAAC,IAAI,GAAG,yBAAyB,MAAM,CAAC,IAAI;QACrD,OACK,IAAI,OAAO,KAAK,CAAC,IAAI,KAAK,cAAc,KAAK,CAAC,IAAI,YAAY,QAAQ;YACvE,KAAK,CAAC,IAAI,GAAG,CAAC;QAClB,OACK;YACD,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI;QAC5B;IACJ;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 2516, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2522, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/worker-utils/get-loadable-worker-url.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from \"../env-utils/assert.js\";\nconst workerURLCache = new Map();\n/**\n * Creates a loadable URL from worker source or URL\n * that can be used to create `Worker` instances.\n * Due to CORS issues it may be necessary to wrap a URL in a small importScripts\n * @param props\n * @param props.source Worker source\n * @param props.url Worker URL\n * @returns loadable url\n */\nexport function getLoadableWorkerURL(props) {\n    assert((props.source && !props.url) || (!props.source && props.url)); // Either source or url must be defined\n    let workerURL = workerURLCache.get(props.source || props.url);\n    if (!workerURL) {\n        // Differentiate worker urls from worker source code\n        if (props.url) {\n            workerURL = getLoadableWorkerURLFromURL(props.url);\n            workerURLCache.set(props.url, workerURL);\n        }\n        if (props.source) {\n            workerURL = getLoadableWorkerURLFromSource(props.source);\n            workerURLCache.set(props.source, workerURL);\n        }\n    }\n    assert(workerURL);\n    return workerURL;\n}\n/**\n * Build a loadable worker URL from worker URL\n * @param url\n * @returns loadable URL\n */\nfunction getLoadableWorkerURLFromURL(url) {\n    // A local script url, we can use it to initialize a Worker directly\n    if (!url.startsWith('http')) {\n        return url;\n    }\n    // A remote script, we need to use `importScripts` to load from different origin\n    const workerSource = buildScriptSource(url);\n    return getLoadableWorkerURLFromSource(workerSource);\n}\n/**\n * Build a loadable worker URL from worker source\n * @param workerSource\n * @returns loadable url\n */\nfunction getLoadableWorkerURLFromSource(workerSource) {\n    const blob = new Blob([workerSource], { type: 'application/javascript' });\n    return URL.createObjectURL(blob);\n}\n/**\n * Per spec, worker cannot be initialized with a script from a different origin\n * However a local worker script can still import scripts from other origins,\n * so we simply build a wrapper script.\n *\n * @param workerUrl\n * @returns source\n */\nfunction buildScriptSource(workerUrl) {\n    return `\\\ntry {\n  importScripts('${workerUrl}');\n} catch (error) {\n  console.error(error);\n  throw error;\n}`;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AACpC;;AACA,MAAM,iBAAiB,IAAI;AAUpB,SAAS,qBAAqB,KAAK;IACtC,CAAA,GAAA,8LAAA,CAAA,SAAM,AAAD,EAAE,AAAC,MAAM,MAAM,IAAI,CAAC,MAAM,GAAG,IAAM,CAAC,MAAM,MAAM,IAAI,MAAM,GAAG,GAAI,uCAAuC;IAC7G,IAAI,YAAY,eAAe,GAAG,CAAC,MAAM,MAAM,IAAI,MAAM,GAAG;IAC5D,IAAI,CAAC,WAAW;QACZ,oDAAoD;QACpD,IAAI,MAAM,GAAG,EAAE;YACX,YAAY,4BAA4B,MAAM,GAAG;YACjD,eAAe,GAAG,CAAC,MAAM,GAAG,EAAE;QAClC;QACA,IAAI,MAAM,MAAM,EAAE;YACd,YAAY,+BAA+B,MAAM,MAAM;YACvD,eAAe,GAAG,CAAC,MAAM,MAAM,EAAE;QACrC;IACJ;IACA,CAAA,GAAA,8LAAA,CAAA,SAAM,AAAD,EAAE;IACP,OAAO;AACX;AACA;;;;CAIC,GACD,SAAS,4BAA4B,GAAG;IACpC,oEAAoE;IACpE,IAAI,CAAC,IAAI,UAAU,CAAC,SAAS;QACzB,OAAO;IACX;IACA,gFAAgF;IAChF,MAAM,eAAe,kBAAkB;IACvC,OAAO,+BAA+B;AAC1C;AACA;;;;CAIC,GACD,SAAS,+BAA+B,YAAY;IAChD,MAAM,OAAO,IAAI,KAAK;QAAC;KAAa,EAAE;QAAE,MAAM;IAAyB;IACvE,OAAO,IAAI,eAAe,CAAC;AAC/B;AACA;;;;;;;CAOC,GACD,SAAS,kBAAkB,SAAS;IAChC,OAAO,CAAC;;iBAEK,EAAE,UAAU;;;;CAI5B,CAAC;AACF","ignoreList":[0]}},
    {"offset": {"line": 2589, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2595, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/worker-farm/worker-thread.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { NodeWorker } from \"../node/worker_threads.js\";\nimport { isBrowser } from \"../env-utils/globals.js\";\nimport { assert } from \"../env-utils/assert.js\";\nimport { getLoadableWorkerURL } from \"../worker-utils/get-loadable-worker-url.js\";\nimport { getTransferList } from \"../worker-utils/get-transfer-list.js\";\nconst NOOP = () => { };\n/**\n * Represents one worker thread\n */\nexport default class WorkerThread {\n    name;\n    source;\n    url;\n    terminated = false;\n    worker;\n    onMessage;\n    onError;\n    _loadableURL = '';\n    /** Checks if workers are supported on this platform */\n    static isSupported() {\n        return ((typeof Worker !== 'undefined' && isBrowser) ||\n            (typeof NodeWorker !== 'undefined' && !isBrowser));\n    }\n    constructor(props) {\n        const { name, source, url } = props;\n        assert(source || url); // Either source or url must be defined\n        this.name = name;\n        this.source = source;\n        this.url = url;\n        this.onMessage = NOOP;\n        this.onError = (error) => console.log(error); // eslint-disable-line\n        this.worker = isBrowser ? this._createBrowserWorker() : this._createNodeWorker();\n    }\n    /**\n     * Terminate this worker thread\n     * @note Can free up significant memory\n     */\n    destroy() {\n        this.onMessage = NOOP;\n        this.onError = NOOP;\n        this.worker.terminate(); // eslint-disable-line @typescript-eslint/no-floating-promises\n        this.terminated = true;\n    }\n    get isRunning() {\n        return Boolean(this.onMessage);\n    }\n    /**\n     * Send a message to this worker thread\n     * @param data any data structure, ideally consisting mostly of transferrable objects\n     * @param transferList If not supplied, calculated automatically by traversing data\n     */\n    postMessage(data, transferList) {\n        transferList = transferList || getTransferList(data);\n        // @ts-ignore\n        this.worker.postMessage(data, transferList);\n    }\n    // PRIVATE\n    /**\n     * Generate a standard Error from an ErrorEvent\n     * @param event\n     */\n    _getErrorFromErrorEvent(event) {\n        // Note Error object does not have the expected fields if loading failed completely\n        // https://developer.mozilla.org/en-US/docs/Web/API/Worker#Event_handlers\n        // https://developer.mozilla.org/en-US/docs/Web/API/ErrorEvent\n        let message = 'Failed to load ';\n        message += `worker ${this.name} from ${this.url}. `;\n        if (event.message) {\n            message += `${event.message} in `;\n        }\n        // const hasFilename = event.filename && !event.filename.startsWith('blob:');\n        // message += hasFilename ? event.filename : this.source.slice(0, 100);\n        if (event.lineno) {\n            message += `:${event.lineno}:${event.colno}`;\n        }\n        return new Error(message);\n    }\n    /**\n     * Creates a worker thread on the browser\n     */\n    _createBrowserWorker() {\n        this._loadableURL = getLoadableWorkerURL({ source: this.source, url: this.url });\n        const worker = new Worker(this._loadableURL, { name: this.name });\n        worker.onmessage = (event) => {\n            if (!event.data) {\n                this.onError(new Error('No data received'));\n            }\n            else {\n                this.onMessage(event.data);\n            }\n        };\n        // This callback represents an uncaught exception in the worker thread\n        worker.onerror = (error) => {\n            this.onError(this._getErrorFromErrorEvent(error));\n            this.terminated = true;\n        };\n        // TODO - not clear when this would be called, for now just log in case it happens\n        worker.onmessageerror = (event) => console.error(event); // eslint-disable-line\n        return worker;\n    }\n    /**\n     * Creates a worker thread in node.js\n     * @todo https://nodejs.org/api/async_hooks.html#async-resource-worker-pool\n     */\n    _createNodeWorker() {\n        let worker;\n        if (this.url) {\n            // Make sure relative URLs start with './'\n            const absolute = this.url.includes(':/') || this.url.startsWith('/');\n            const url = absolute ? this.url : `./${this.url}`;\n            // console.log('Starting work from', url);\n            worker = new NodeWorker(url, { eval: false });\n        }\n        else if (this.source) {\n            worker = new NodeWorker(this.source, { eval: true });\n        }\n        else {\n            throw new Error('no worker');\n        }\n        worker.on('message', (data) => {\n            // console.error('message', data);\n            this.onMessage(data);\n        });\n        worker.on('error', (error) => {\n            // console.error('error', error);\n            this.onError(error);\n        });\n        worker.on('exit', (code) => {\n            // console.error('exit', code);\n        });\n        return worker;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2735, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2741, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/worker-farm/worker-job.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from \"../env-utils/assert.js\";\n/**\n * Represents one Job handled by a WorkerPool or WorkerFarm\n */\nexport default class WorkerJob {\n    name;\n    workerThread;\n    isRunning = true;\n    /** Promise that resolves when Job is done */\n    result;\n    _resolve = () => { };\n    _reject = () => { };\n    constructor(jobName, workerThread) {\n        this.name = jobName;\n        this.workerThread = workerThread;\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n    /**\n     * Send a message to the job's worker thread\n     * @param data any data structure, ideally consisting mostly of transferrable objects\n     */\n    postMessage(type, payload) {\n        this.workerThread.postMessage({\n            source: 'loaders.gl', // Lets worker ignore unrelated messages\n            type,\n            payload\n        });\n    }\n    /**\n     * Call to resolve the `result` Promise with the supplied value\n     */\n    done(value) {\n        assert(this.isRunning);\n        this.isRunning = false;\n        this._resolve(value);\n    }\n    /**\n     * Call to reject the `result` Promise with the supplied error\n     */\n    error(error) {\n        assert(this.isRunning);\n        this.isRunning = false;\n        this._reject(error);\n    }\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AACpC;;AAIe,MAAM;IACjB,KAAK;IACL,aAAa;IACb,YAAY,KAAK;IACjB,2CAA2C,GAC3C,OAAO;IACP,WAAW,KAAQ,EAAE;IACrB,UAAU,KAAQ,EAAE;IACpB,YAAY,OAAO,EAAE,YAAY,CAAE;QAC/B,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,MAAM,GAAG,IAAI,QAAQ,CAAC,SAAS;YAChC,IAAI,CAAC,QAAQ,GAAG;YAChB,IAAI,CAAC,OAAO,GAAG;QACnB;IACJ;IACA;;;KAGC,GACD,YAAY,IAAI,EAAE,OAAO,EAAE;QACvB,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;YAC1B,QAAQ;YACR;YACA;QACJ;IACJ;IACA;;KAEC,GACD,KAAK,KAAK,EAAE;QACR,CAAA,GAAA,8LAAA,CAAA,SAAM,AAAD,EAAE,IAAI,CAAC,SAAS;QACrB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,QAAQ,CAAC;IAClB;IACA;;KAEC,GACD,MAAM,KAAK,EAAE;QACT,CAAA,GAAA,8LAAA,CAAA,SAAM,AAAD,EAAE,IAAI,CAAC,SAAS;QACrB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,OAAO,CAAC;IACjB;AACJ","ignoreList":[0]}},
    {"offset": {"line": 2789, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2795, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/worker-farm/worker-pool.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { isMobile, isBrowser } from \"../env-utils/globals.js\";\nimport WorkerThread from \"./worker-thread.js\";\nimport WorkerJob from \"./worker-job.js\";\n/**\n * Process multiple data messages with small pool of identical workers\n */\nexport default class WorkerPool {\n    name = 'unnamed';\n    source; // | Function;\n    url;\n    maxConcurrency = 1;\n    maxMobileConcurrency = 1;\n    onDebug = () => { };\n    reuseWorkers = true;\n    props = {};\n    jobQueue = [];\n    idleQueue = [];\n    count = 0;\n    isDestroyed = false;\n    /** Checks if workers are supported on this platform */\n    static isSupported() {\n        return WorkerThread.isSupported();\n    }\n    /**\n     * @param processor - worker function\n     * @param maxConcurrency - max count of workers\n     */\n    constructor(props) {\n        this.source = props.source;\n        this.url = props.url;\n        this.setProps(props);\n    }\n    /**\n     * Terminates all workers in the pool\n     * @note Can free up significant memory\n     */\n    destroy() {\n        // Destroy idle workers, active Workers will be destroyed on completion\n        this.idleQueue.forEach((worker) => worker.destroy());\n        this.isDestroyed = true;\n    }\n    setProps(props) {\n        this.props = { ...this.props, ...props };\n        if (props.name !== undefined) {\n            this.name = props.name;\n        }\n        if (props.maxConcurrency !== undefined) {\n            this.maxConcurrency = props.maxConcurrency;\n        }\n        if (props.maxMobileConcurrency !== undefined) {\n            this.maxMobileConcurrency = props.maxMobileConcurrency;\n        }\n        if (props.reuseWorkers !== undefined) {\n            this.reuseWorkers = props.reuseWorkers;\n        }\n        if (props.onDebug !== undefined) {\n            this.onDebug = props.onDebug;\n        }\n    }\n    async startJob(name, onMessage = (job, type, data) => job.done(data), onError = (job, error) => job.error(error)) {\n        // Promise resolves when thread starts working on this job\n        const startPromise = new Promise((onStart) => {\n            // Promise resolves when thread completes or fails working on this job\n            this.jobQueue.push({ name, onMessage, onError, onStart });\n            return this;\n        });\n        this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n        return await startPromise;\n    }\n    // PRIVATE\n    /**\n     * Starts first queued job if worker is available or can be created\n     * Called when job is started and whenever a worker returns to the idleQueue\n     */\n    async _startQueuedJob() {\n        if (!this.jobQueue.length) {\n            return;\n        }\n        const workerThread = this._getAvailableWorker();\n        if (!workerThread) {\n            return;\n        }\n        // We have a worker, dequeue and start the job\n        const queuedJob = this.jobQueue.shift();\n        if (queuedJob) {\n            // Emit a debug event\n            // @ts-ignore\n            this.onDebug({\n                message: 'Starting job',\n                name: queuedJob.name,\n                workerThread,\n                backlog: this.jobQueue.length\n            });\n            // Create a worker job to let the app access thread and manage job completion\n            const job = new WorkerJob(queuedJob.name, workerThread);\n            // Set the worker thread's message handlers\n            workerThread.onMessage = (data) => queuedJob.onMessage(job, data.type, data.payload);\n            workerThread.onError = (error) => queuedJob.onError(job, error);\n            // Resolve the start promise so that the app can start sending messages to worker\n            queuedJob.onStart(job);\n            // Wait for the app to signal that the job is complete, then return worker to queue\n            try {\n                await job.result;\n            }\n            catch (error) {\n                // eslint-disable-next-line no-console\n                console.error(`Worker exception: ${error}`);\n            }\n            finally {\n                this.returnWorkerToQueue(workerThread);\n            }\n        }\n    }\n    /**\n     * Returns a worker to the idle queue\n     * Destroys the worker if\n     *  - pool is destroyed\n     *  - if this pool doesn't reuse workers\n     *  - if maxConcurrency has been lowered\n     * @param worker\n     */\n    returnWorkerToQueue(worker) {\n        const shouldDestroyWorker = \n        // Workers on Node.js prevent the process from exiting.\n        // Until we figure out how to close them before exit, we always destroy them\n        !isBrowser ||\n            // If the pool is destroyed, there is no reason to keep the worker around\n            this.isDestroyed ||\n            // If the app has disabled worker reuse, any completed workers should be destroyed\n            !this.reuseWorkers ||\n            // If concurrency has been lowered, this worker might be surplus to requirements\n            this.count > this._getMaxConcurrency();\n        if (shouldDestroyWorker) {\n            worker.destroy();\n            this.count--;\n        }\n        else {\n            this.idleQueue.push(worker);\n        }\n        if (!this.isDestroyed) {\n            this._startQueuedJob(); // eslint-disable-line @typescript-eslint/no-floating-promises\n        }\n    }\n    /**\n     * Returns idle worker or creates new worker if maxConcurrency has not been reached\n     */\n    _getAvailableWorker() {\n        // If a worker has completed and returned to the queue, it can be used\n        if (this.idleQueue.length > 0) {\n            return this.idleQueue.shift() || null;\n        }\n        // Create fresh worker if we haven't yet created the max amount of worker threads for this worker source\n        if (this.count < this._getMaxConcurrency()) {\n            this.count++;\n            const name = `${this.name.toLowerCase()} (#${this.count} of ${this.maxConcurrency})`;\n            return new WorkerThread({ name, source: this.source, url: this.url });\n        }\n        // No worker available, have to wait\n        return null;\n    }\n    _getMaxConcurrency() {\n        return isMobile ? this.maxMobileConcurrency : this.maxConcurrency;\n    }\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2964, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2970, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/worker-farm/worker-farm.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport WorkerPool from \"./worker-pool.js\";\nimport WorkerThread from \"./worker-thread.js\";\nconst DEFAULT_PROPS = {\n    maxConcurrency: 3,\n    maxMobileConcurrency: 1,\n    reuseWorkers: true,\n    onDebug: () => { }\n};\n/**\n * Process multiple jobs with a \"farm\" of different workers in worker pools.\n */\nexport default class WorkerFarm {\n    props;\n    workerPools = new Map();\n    // singleton\n    static _workerFarm;\n    /** Checks if workers are supported on this platform */\n    static isSupported() {\n        return WorkerThread.isSupported();\n    }\n    /** Get the singleton instance of the global worker farm */\n    static getWorkerFarm(props = {}) {\n        WorkerFarm._workerFarm = WorkerFarm._workerFarm || new WorkerFarm({});\n        WorkerFarm._workerFarm.setProps(props);\n        return WorkerFarm._workerFarm;\n    }\n    /** get global instance with WorkerFarm.getWorkerFarm() */\n    constructor(props) {\n        this.props = { ...DEFAULT_PROPS };\n        this.setProps(props);\n        /** @type Map<string, WorkerPool>} */\n        this.workerPools = new Map();\n    }\n    /**\n     * Terminate all workers in the farm\n     * @note Can free up significant memory\n     */\n    destroy() {\n        for (const workerPool of this.workerPools.values()) {\n            workerPool.destroy();\n        }\n        this.workerPools = new Map();\n    }\n    /**\n     * Set props used when initializing worker pools\n     * @param props\n     */\n    setProps(props) {\n        this.props = { ...this.props, ...props };\n        // Update worker pool props\n        for (const workerPool of this.workerPools.values()) {\n            workerPool.setProps(this._getWorkerPoolProps());\n        }\n    }\n    /**\n     * Returns a worker pool for the specified worker\n     * @param options - only used first time for a specific worker name\n     * @param options.name - the name of the worker - used to identify worker pool\n     * @param options.url -\n     * @param options.source -\n     * @example\n     *   const job = WorkerFarm.getWorkerFarm().getWorkerPool({name, url}).startJob(...);\n     */\n    getWorkerPool(options) {\n        const { name, source, url } = options;\n        let workerPool = this.workerPools.get(name);\n        if (!workerPool) {\n            workerPool = new WorkerPool({\n                name,\n                source,\n                url\n            });\n            workerPool.setProps(this._getWorkerPoolProps());\n            this.workerPools.set(name, workerPool);\n        }\n        return workerPool;\n    }\n    _getWorkerPoolProps() {\n        return {\n            maxConcurrency: this.props.maxConcurrency,\n            maxMobileConcurrency: this.props.maxMobileConcurrency,\n            reuseWorkers: this.props.reuseWorkers,\n            onDebug: this.props.onDebug\n        };\n    }\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;AAEpC;AADA;;;AAEA,MAAM,gBAAgB;IAClB,gBAAgB;IAChB,sBAAsB;IACtB,cAAc;IACd,SAAS,KAAQ;AACrB;AAIe,MAAM;IACjB,MAAM;IACN,cAAc,IAAI,MAAM;IACxB,YAAY;IACZ,OAAO,YAAY;IACnB,qDAAqD,GACrD,OAAO,cAAc;QACjB,OAAO,0MAAA,CAAA,UAAY,CAAC,WAAW;IACnC;IACA,yDAAyD,GACzD,OAAO,cAAc,QAAQ,CAAC,CAAC,EAAE;QAC7B,WAAW,WAAW,GAAG,WAAW,WAAW,IAAI,IAAI,WAAW,CAAC;QACnE,WAAW,WAAW,CAAC,QAAQ,CAAC;QAChC,OAAO,WAAW,WAAW;IACjC;IACA,wDAAwD,GACxD,YAAY,KAAK,CAAE;QACf,IAAI,CAAC,KAAK,GAAG;YAAE,GAAG,aAAa;QAAC;QAChC,IAAI,CAAC,QAAQ,CAAC;QACd,mCAAmC,GACnC,IAAI,CAAC,WAAW,GAAG,IAAI;IAC3B;IACA;;;KAGC,GACD,UAAU;QACN,KAAK,MAAM,cAAc,IAAI,CAAC,WAAW,CAAC,MAAM,GAAI;YAChD,WAAW,OAAO;QACtB;QACA,IAAI,CAAC,WAAW,GAAG,IAAI;IAC3B;IACA;;;KAGC,GACD,SAAS,KAAK,EAAE;QACZ,IAAI,CAAC,KAAK,GAAG;YAAE,GAAG,IAAI,CAAC,KAAK;YAAE,GAAG,KAAK;QAAC;QACvC,2BAA2B;QAC3B,KAAK,MAAM,cAAc,IAAI,CAAC,WAAW,CAAC,MAAM,GAAI;YAChD,WAAW,QAAQ,CAAC,IAAI,CAAC,mBAAmB;QAChD;IACJ;IACA;;;;;;;;KAQC,GACD,cAAc,OAAO,EAAE;QACnB,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG;QAC9B,IAAI,aAAa,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC;QACtC,IAAI,CAAC,YAAY;YACb,aAAa,IAAI,wMAAA,CAAA,UAAU,CAAC;gBACxB;gBACA;gBACA;YACJ;YACA,WAAW,QAAQ,CAAC,IAAI,CAAC,mBAAmB;YAC5C,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM;QAC/B;QACA,OAAO;IACX;IACA,sBAAsB;QAClB,OAAO;YACH,gBAAgB,IAAI,CAAC,KAAK,CAAC,cAAc;YACzC,sBAAsB,IAAI,CAAC,KAAK,CAAC,oBAAoB;YACrD,cAAc,IAAI,CAAC,KAAK,CAAC,YAAY;YACrC,SAAS,IAAI,CAAC,KAAK,CAAC,OAAO;QAC/B;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3059, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3075, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/worker-utils/dist/lib/worker-api/get-worker-url.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\nimport { assert } from \"../env-utils/assert.js\";\nimport { isBrowser } from \"../env-utils/globals.js\";\nimport { VERSION, NPM_TAG } from \"../env-utils/version.js\";\n/**\n * Gets worker object's name (for debugging in Chrome thread inspector window)\n */\nexport function getWorkerName(worker) {\n    const warning = worker.version !== VERSION ? ` (worker-utils@${VERSION})` : '';\n    return `${worker.name}@${worker.version}${warning}`;\n}\n/**\n * Generate a worker URL based on worker object and options\n * @returns A URL to one of the following:\n * - a published worker on unpkg CDN\n * - a local test worker\n * - a URL provided by the user in options\n */\nexport function getWorkerURL(worker, options = {}) {\n    const workerOptions = options[worker.id] || {};\n    const workerFile = isBrowser ? `${worker.id}-worker.js` : `${worker.id}-worker-node.js`;\n    let url = workerOptions.workerUrl;\n    // HACK: Allow for non-nested workerUrl for the CompressionWorker.\n    // For the compression worker, workerOptions is currently not nested correctly. For most loaders,\n    // you'd have options within an object, i.e. `{mvt: {coordinates: ...}}` but the CompressionWorker\n    // puts options at the top level, not within a `compression` key (its `id`). For this reason, the\n    // above `workerOptions` will always be a string (i.e. `'gzip'`) for the CompressionWorker. To not\n    // break backwards compatibility, we allow the CompressionWorker to have options at the top level.\n    if (!url && worker.id === 'compression') {\n        url = options.workerUrl;\n    }\n    // If URL is test, generate local loaders.gl url\n    // @ts-ignore _workerType\n    if (options._workerType === 'test') {\n        if (isBrowser) {\n            url = `modules/${worker.module}/dist/${workerFile}`;\n        }\n        else {\n            // In the test environment the ts-node loader requires TypeScript code\n            url = `modules/${worker.module}/src/workers/${worker.id}-worker-node.ts`;\n        }\n    }\n    // If url override is not provided, generate a URL to published version on npm CDN unpkg.com\n    if (!url) {\n        // GENERATE\n        let version = worker.version;\n        // On master we need to load npm alpha releases published with the `beta` tag\n        if (version === 'latest') {\n            // throw new Error('latest worker version specified');\n            version = NPM_TAG;\n        }\n        const versionTag = version ? `@${version}` : '';\n        url = `https://unpkg.com/@loaders.gl/${worker.module}${versionTag}/dist/${workerFile}`;\n    }\n    assert(url);\n    // Allow user to override location\n    return url;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;;;;;AAGpC;AADA;AADA;;;;AAMO,SAAS,cAAc,MAAM;IAChC,MAAM,UAAU,OAAO,OAAO,KAAK,+LAAA,CAAA,UAAO,GAAG,CAAC,eAAe,EAAE,+LAAA,CAAA,UAAO,CAAC,CAAC,CAAC,GAAG;IAC5E,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC,EAAE,OAAO,OAAO,GAAG,SAAS;AACvD;AAQO,SAAS,aAAa,MAAM,EAAE,UAAU,CAAC,CAAC;IAC7C,MAAM,gBAAgB,OAAO,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC;IAC7C,MAAM,aAAa,+LAAA,CAAA,YAAS,GAAG,GAAG,OAAO,EAAE,CAAC,UAAU,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC,eAAe,CAAC;IACvF,IAAI,MAAM,cAAc,SAAS;IACjC,kEAAkE;IAClE,iGAAiG;IACjG,kGAAkG;IAClG,iGAAiG;IACjG,kGAAkG;IAClG,kGAAkG;IAClG,IAAI,CAAC,OAAO,OAAO,EAAE,KAAK,eAAe;QACrC,MAAM,QAAQ,SAAS;IAC3B;IACA,gDAAgD;IAChD,yBAAyB;IACzB,IAAI,QAAQ,WAAW,KAAK,QAAQ;QAChC,IAAI,+LAAA,CAAA,YAAS,EAAE;YACX,MAAM,CAAC,QAAQ,EAAE,OAAO,MAAM,CAAC,MAAM,EAAE,YAAY;QACvD,OACK;YACD,sEAAsE;YACtE,MAAM,CAAC,QAAQ,EAAE,OAAO,MAAM,CAAC,aAAa,EAAE,OAAO,EAAE,CAAC,eAAe,CAAC;QAC5E;IACJ;IACA,4FAA4F;IAC5F,IAAI,CAAC,KAAK;QACN,WAAW;QACX,IAAI,UAAU,OAAO,OAAO;QAC5B,6EAA6E;QAC7E,IAAI,YAAY,UAAU;YACtB,sDAAsD;YACtD,UAAU,+LAAA,CAAA,UAAO;QACrB;QACA,MAAM,aAAa,UAAU,CAAC,CAAC,EAAE,SAAS,GAAG;QAC7C,MAAM,CAAC,8BAA8B,EAAE,OAAO,MAAM,GAAG,WAAW,MAAM,EAAE,YAAY;IAC1F;IACA,CAAA,GAAA,8LAAA,CAAA,SAAM,AAAD,EAAE;IACP,kCAAkC;IAClC,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 3131, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3137, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/images/dist/lib/utils/version.js"],"sourcesContent":["// Version constant cannot be imported, it needs to correspond to the build version of **this** module.\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nexport const VERSION = typeof \"4.3.2\" !== 'undefined' ? \"4.3.2\" : 'latest';\n"],"names":[],"mappings":"AAAA,uGAAuG;AACvG,yDAAyD;AACzD,qDAAqD;;;;AAC9C,MAAM,UAAU,OAAO,YAAY,cAAc,UAAU","ignoreList":[0]}},
    {"offset": {"line": 3144, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3150, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/images/dist/lib/parsers/svg-utils.js"],"sourcesContent":["// SVG parsing has limitations, e.g:\n// https://bugs.chromium.org/p/chromium/issues/detail?id=606319\nconst SVG_DATA_URL_PATTERN = /^data:image\\/svg\\+xml/;\nconst SVG_URL_PATTERN = /\\.svg((\\?|#).*)?$/;\nexport function isSVG(url) {\n    return url && (SVG_DATA_URL_PATTERN.test(url) || SVG_URL_PATTERN.test(url));\n}\nexport function getBlobOrSVGDataUrl(arrayBuffer, url) {\n    if (isSVG(url)) {\n        // Prepare a properly tagged data URL, and load using normal mechanism\n        const textDecoder = new TextDecoder();\n        let xmlText = textDecoder.decode(arrayBuffer);\n        // TODO Escape in browser to support e.g. Chinese characters\n        try {\n            if (typeof unescape === 'function' && typeof encodeURIComponent === 'function') {\n                xmlText = unescape(encodeURIComponent(xmlText));\n            }\n        }\n        catch (error) {\n            throw new Error(error.message);\n        }\n        // base64 encoding is safer. utf-8 fails in some browsers\n        const src = `data:image/svg+xml;base64,${btoa(xmlText)}`;\n        return src;\n    }\n    return getBlob(arrayBuffer, url);\n}\nexport function getBlob(arrayBuffer, url) {\n    if (isSVG(url)) {\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=606319\n        // return new Blob([new Uint8Array(arrayBuffer)], {type: 'image/svg+xml'});\n        throw new Error('SVG cannot be parsed directly to imagebitmap');\n    }\n    // TODO - how to determine mime type? Param? Sniff here?\n    return new Blob([new Uint8Array(arrayBuffer)]); // MIME type not needed?\n}\n"],"names":[],"mappings":"AAAA,oCAAoC;AACpC,+DAA+D;;;;;;AAC/D,MAAM,uBAAuB;AAC7B,MAAM,kBAAkB;AACjB,SAAS,MAAM,GAAG;IACrB,OAAO,OAAO,CAAC,qBAAqB,IAAI,CAAC,QAAQ,gBAAgB,IAAI,CAAC,IAAI;AAC9E;AACO,SAAS,oBAAoB,WAAW,EAAE,GAAG;IAChD,IAAI,MAAM,MAAM;QACZ,sEAAsE;QACtE,MAAM,cAAc,IAAI;QACxB,IAAI,UAAU,YAAY,MAAM,CAAC;QACjC,4DAA4D;QAC5D,IAAI;YACA,IAAI,OAAO,aAAa,cAAc,OAAO,uBAAuB,YAAY;gBAC5E,UAAU,SAAS,mBAAmB;YAC1C;QACJ,EACA,OAAO,OAAO;YACV,MAAM,IAAI,MAAM,MAAM,OAAO;QACjC;QACA,yDAAyD;QACzD,MAAM,MAAM,CAAC,0BAA0B,EAAE,KAAK,UAAU;QACxD,OAAO;IACX;IACA,OAAO,QAAQ,aAAa;AAChC;AACO,SAAS,QAAQ,WAAW,EAAE,GAAG;IACpC,IAAI,MAAM,MAAM;QACZ,+DAA+D;QAC/D,2EAA2E;QAC3E,MAAM,IAAI,MAAM;IACpB;IACA,wDAAwD;IACxD,OAAO,IAAI,KAAK;QAAC,IAAI,WAAW;KAAa,GAAG,wBAAwB;AAC5E","ignoreList":[0]}},
    {"offset": {"line": 3192, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3198, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/images/dist/lib/parsers/parse-to-image.js"],"sourcesContent":["import { getBlobOrSVGDataUrl } from \"./svg-utils.js\";\n// Parses html image from array buffer\nexport async function parseToImage(arrayBuffer, options, url) {\n    // Note: image parsing requires conversion to Blob (for createObjectURL).\n    // Potentially inefficient for not using `response.blob()` (and for File / Blob inputs)...\n    // But presumably not worth adding 'blob' flag to loader objects?\n    const blobOrDataUrl = getBlobOrSVGDataUrl(arrayBuffer, url);\n    const URL = self.URL || self.webkitURL;\n    const objectUrl = typeof blobOrDataUrl !== 'string' && URL.createObjectURL(blobOrDataUrl);\n    try {\n        return await loadToImage(objectUrl || blobOrDataUrl, options);\n    }\n    finally {\n        if (objectUrl) {\n            URL.revokeObjectURL(objectUrl);\n        }\n    }\n}\nexport async function loadToImage(url, options) {\n    const image = new Image();\n    image.src = url;\n    // The `image.onload()` callback does not guarantee that the image has been decoded\n    // so a main thread \"freeze\" can be incurred when using the image for the first time.\n    // `Image.decode()` returns a promise that completes when image is decoded.\n    // https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/decode\n    // Note: When calling `img.decode()`, we do not need to wait for `img.onload()`\n    // Note: `HTMLImageElement.decode()` is not available in Edge and IE11\n    if (options.image && options.image.decode && image.decode) {\n        await image.decode();\n        return image;\n    }\n    // Create a promise that tracks onload/onerror callbacks\n    return await new Promise((resolve, reject) => {\n        try {\n            image.onload = () => resolve(image);\n            image.onerror = (error) => {\n                const message = error instanceof Error ? error.message : 'error';\n                reject(new Error(message));\n            };\n        }\n        catch (error) {\n            reject(error);\n        }\n    });\n}\n"],"names":[],"mappings":";;;;AAAA;;AAEO,eAAe,aAAa,WAAW,EAAE,OAAO,EAAE,GAAG;IACxD,yEAAyE;IACzE,0FAA0F;IAC1F,iEAAiE;IACjE,MAAM,gBAAgB,CAAA,GAAA,sLAAA,CAAA,sBAAmB,AAAD,EAAE,aAAa;IACvD,MAAM,MAAM,KAAK,GAAG,IAAI,KAAK,SAAS;IACtC,MAAM,YAAY,OAAO,kBAAkB,YAAY,IAAI,eAAe,CAAC;IAC3E,IAAI;QACA,OAAO,MAAM,YAAY,aAAa,eAAe;IACzD,SACQ;QACJ,IAAI,WAAW;YACX,IAAI,eAAe,CAAC;QACxB;IACJ;AACJ;AACO,eAAe,YAAY,GAAG,EAAE,OAAO;IAC1C,MAAM,QAAQ,IAAI;IAClB,MAAM,GAAG,GAAG;IACZ,mFAAmF;IACnF,qFAAqF;IACrF,2EAA2E;IAC3E,2EAA2E;IAC3E,+EAA+E;IAC/E,sEAAsE;IACtE,IAAI,QAAQ,KAAK,IAAI,QAAQ,KAAK,CAAC,MAAM,IAAI,MAAM,MAAM,EAAE;QACvD,MAAM,MAAM,MAAM;QAClB,OAAO;IACX;IACA,wDAAwD;IACxD,OAAO,MAAM,IAAI,QAAQ,CAAC,SAAS;QAC/B,IAAI;YACA,MAAM,MAAM,GAAG,IAAM,QAAQ;YAC7B,MAAM,OAAO,GAAG,CAAC;gBACb,MAAM,UAAU,iBAAiB,QAAQ,MAAM,OAAO,GAAG;gBACzD,OAAO,IAAI,MAAM;YACrB;QACJ,EACA,OAAO,OAAO;YACV,OAAO;QACX;IACJ;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3245, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3251, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/images/dist/lib/parsers/parse-to-image-bitmap.js"],"sourcesContent":["import { isSVG, getBlob } from \"./svg-utils.js\";\nimport { parseToImage } from \"./parse-to-image.js\";\nconst EMPTY_OBJECT = {};\nlet imagebitmapOptionsSupported = true;\n/**\n * Asynchronously parses an array buffer into an ImageBitmap - this contains the decoded data\n * ImageBitmaps are supported on worker threads, but not supported on Edge, IE11 and Safari\n * https://developer.mozilla.org/en-US/docs/Web/API/ImageBitmap#Browser_compatibility\n *\n * TODO - createImageBitmap supports source rect (5 param overload), pass through?\n */\nexport async function parseToImageBitmap(arrayBuffer, options, url) {\n    let blob;\n    // Cannot parse SVG directly to ImageBitmap, parse to Image first\n    if (isSVG(url)) {\n        // Note: this only works on main thread\n        const image = await parseToImage(arrayBuffer, options, url);\n        blob = image;\n    }\n    else {\n        // Create blob from the array buffer\n        blob = getBlob(arrayBuffer, url);\n    }\n    const imagebitmapOptions = options && options.imagebitmap;\n    return await safeCreateImageBitmap(blob, imagebitmapOptions);\n}\n/**\n * Safely creates an imageBitmap with options\n * *\n * Firefox crashes if imagebitmapOptions is supplied\n * Avoid supplying if not provided or supported, remember if not supported\n */\nasync function safeCreateImageBitmap(blob, imagebitmapOptions = null) {\n    if (isEmptyObject(imagebitmapOptions) || !imagebitmapOptionsSupported) {\n        imagebitmapOptions = null;\n    }\n    if (imagebitmapOptions) {\n        try {\n            // @ts-ignore Options\n            return await createImageBitmap(blob, imagebitmapOptions);\n        }\n        catch (error) {\n            console.warn(error); // eslint-disable-line\n            imagebitmapOptionsSupported = false;\n        }\n    }\n    return await createImageBitmap(blob);\n}\nfunction isEmptyObject(object) {\n    // @ts-ignore\n    for (const key in object || EMPTY_OBJECT) {\n        return false;\n    }\n    return true;\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AACA,MAAM,eAAe,CAAC;AACtB,IAAI,8BAA8B;AAQ3B,eAAe,mBAAmB,WAAW,EAAE,OAAO,EAAE,GAAG;IAC9D,IAAI;IACJ,iEAAiE;IACjE,IAAI,CAAA,GAAA,sLAAA,CAAA,QAAK,AAAD,EAAE,MAAM;QACZ,uCAAuC;QACvC,MAAM,QAAQ,MAAM,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE,aAAa,SAAS;QACvD,OAAO;IACX,OACK;QACD,oCAAoC;QACpC,OAAO,CAAA,GAAA,sLAAA,CAAA,UAAO,AAAD,EAAE,aAAa;IAChC;IACA,MAAM,qBAAqB,WAAW,QAAQ,WAAW;IACzD,OAAO,MAAM,sBAAsB,MAAM;AAC7C;AACA;;;;;CAKC,GACD,eAAe,sBAAsB,IAAI,EAAE,qBAAqB,IAAI;IAChE,IAAI,cAAc,uBAAuB,CAAC,6BAA6B;QACnE,qBAAqB;IACzB;IACA,IAAI,oBAAoB;QACpB,IAAI;YACA,qBAAqB;YACrB,OAAO,MAAM,kBAAkB,MAAM;QACzC,EACA,OAAO,OAAO;YACV,QAAQ,IAAI,CAAC,QAAQ,sBAAsB;YAC3C,8BAA8B;QAClC;IACJ;IACA,OAAO,MAAM,kBAAkB;AACnC;AACA,SAAS,cAAc,MAAM;IACzB,aAAa;IACb,IAAK,MAAM,OAAO,UAAU,aAAc;QACtC,OAAO;IACX;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 3301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3307, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/images/dist/lib/category-api/parse-isobmff-binary.js"],"sourcesContent":["// loaders.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n// code adapted from https://github.com/sindresorhus/file-type under MIT license\n/**\n * Tests if a buffer is in ISO base media file format (ISOBMFF) @see https://en.wikipedia.org/wiki/ISO_base_media_file_format\n * (ISOBMFF is a media container standard based on the Apple QuickTime container format)\n */\nexport function getISOBMFFMediaType(buffer) {\n    // Almost all ISO base media files start with `ftyp` box. (It's not required to be first, but it's recommended to be.)\n    if (!checkString(buffer, 'ftyp', 4)) {\n        return null;\n    }\n    // Extra check: test for 8859-1 printable characters (for simplicity, it's a mask which also catches one non-printable character).\n    if ((buffer[8] & 0x60) === 0x00) {\n        return null;\n    }\n    // `ftyp` box must contain a brand major identifier, which must consist of ISO 8859-1 printable characters.\n    return decodeMajorBrand(buffer);\n}\n/**\n * brands explained @see https://github.com/strukturag/libheif/issues/83\n * code adapted from @see https://github.com/sindresorhus/file-type/blob/main/core.js#L489-L492\n */\nexport function decodeMajorBrand(buffer) {\n    const brandMajor = getUTF8String(buffer, 8, 12).replace('\\0', ' ').trim();\n    switch (brandMajor) {\n        case 'avif':\n        case 'avis':\n            return { extension: 'avif', mimeType: 'image/avif' };\n        default:\n            return null;\n    }\n    // We don't need these now, but they are easy to add\n    // case 'mif1':\n    //   return {extension: 'heic', mimeType: 'image/heif'};\n    // case 'msf1':\n    //   return {extension: 'heic', mimeType: 'image/heif-sequence'};\n    // case 'heic':\n    // case 'heix':\n    //   return {extension: 'heic', mimeType: 'image/heic'};\n    // case 'hevc':\n    // case 'hevx':\n    //   return {extension: 'heic', mimeType: 'image/heic-sequence'};\n    // case 'qt':\n    //   return {ext: 'mov', mime: 'video/quicktime'};\n    // case 'M4V':\n    // case 'M4VH':\n    // case 'M4VP':\n    //   return {ext: 'm4v', mime: 'video/x-m4v'};\n    // case 'M4P':\n    //   return {ext: 'm4p', mime: 'video/mp4'};\n    // case 'M4B':\n    //   return {ext: 'm4b', mime: 'audio/mp4'};\n    // case 'M4A':\n    //   return {ext: 'm4a', mime: 'audio/x-m4a'};\n    // case 'F4V':\n    //   return {ext: 'f4v', mime: 'video/mp4'};\n    // case 'F4P':\n    //   return {ext: 'f4p', mime: 'video/mp4'};\n    // case 'F4A':\n    //   return {ext: 'f4a', mime: 'audio/mp4'};\n    // case 'F4B':\n    //   return {ext: 'f4b', mime: 'audio/mp4'};\n    // case 'crx':\n    //   return {ext: 'cr3', mime: 'image/x-canon-cr3'};\n    // default:\n    // if (brandMajor.startsWith('3g')) {\n    //   if (brandMajor.startsWith('3g2')) {\n    //     return {ext: '3g2', mime: 'video/3gpp2'};\n    //   }\n    //   return {ext: '3gp', mime: 'video/3gpp'};\n    // }\n    // return {ext: 'mp4', mime: 'video/mp4'};\n}\n/** Interpret a chunk of bytes as a UTF8 string */\nfunction getUTF8String(array, start, end) {\n    return String.fromCharCode(...array.slice(start, end));\n}\nfunction stringToBytes(string) {\n    return [...string].map((character) => character.charCodeAt(0));\n}\nfunction checkString(buffer, header, offset = 0) {\n    const headerBytes = stringToBytes(header);\n    for (let i = 0; i < headerBytes.length; ++i) {\n        if (headerBytes[i] !== buffer[i + offset]) {\n            return false;\n        }\n    }\n    return true;\n}\n"],"names":[],"mappings":"AAAA,aAAa;AACb,+BAA+B;AAC/B,oCAAoC;AACpC,gFAAgF;AAChF;;;CAGC;;;;AACM,SAAS,oBAAoB,MAAM;IACtC,sHAAsH;IACtH,IAAI,CAAC,YAAY,QAAQ,QAAQ,IAAI;QACjC,OAAO;IACX;IACA,kIAAkI;IAClI,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,IAAI,MAAM,MAAM;QAC7B,OAAO;IACX;IACA,2GAA2G;IAC3G,OAAO,iBAAiB;AAC5B;AAKO,SAAS,iBAAiB,MAAM;IACnC,MAAM,aAAa,cAAc,QAAQ,GAAG,IAAI,OAAO,CAAC,MAAM,KAAK,IAAI;IACvE,OAAQ;QACJ,KAAK;QACL,KAAK;YACD,OAAO;gBAAE,WAAW;gBAAQ,UAAU;YAAa;QACvD;YACI,OAAO;IACf;AACA,oDAAoD;AACpD,eAAe;AACf,wDAAwD;AACxD,eAAe;AACf,iEAAiE;AACjE,eAAe;AACf,eAAe;AACf,wDAAwD;AACxD,eAAe;AACf,eAAe;AACf,iEAAiE;AACjE,aAAa;AACb,kDAAkD;AAClD,cAAc;AACd,eAAe;AACf,eAAe;AACf,8CAA8C;AAC9C,cAAc;AACd,4CAA4C;AAC5C,cAAc;AACd,4CAA4C;AAC5C,cAAc;AACd,8CAA8C;AAC9C,cAAc;AACd,4CAA4C;AAC5C,cAAc;AACd,4CAA4C;AAC5C,cAAc;AACd,4CAA4C;AAC5C,cAAc;AACd,4CAA4C;AAC5C,cAAc;AACd,oDAAoD;AACpD,WAAW;AACX,qCAAqC;AACrC,wCAAwC;AACxC,gDAAgD;AAChD,MAAM;AACN,6CAA6C;AAC7C,IAAI;AACJ,0CAA0C;AAC9C;AACA,gDAAgD,GAChD,SAAS,cAAc,KAAK,EAAE,KAAK,EAAE,GAAG;IACpC,OAAO,OAAO,YAAY,IAAI,MAAM,KAAK,CAAC,OAAO;AACrD;AACA,SAAS,cAAc,MAAM;IACzB,OAAO;WAAI;KAAO,CAAC,GAAG,CAAC,CAAC,YAAc,UAAU,UAAU,CAAC;AAC/D;AACA,SAAS,YAAY,MAAM,EAAE,MAAM,EAAE,SAAS,CAAC;IAC3C,MAAM,cAAc,cAAc;IAClC,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,MAAM,EAAE,EAAE,EAAG;QACzC,IAAI,WAAW,CAAC,EAAE,KAAK,MAAM,CAAC,IAAI,OAAO,EAAE;YACvC,OAAO;QACX;IACJ;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 3401, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3407, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/images/dist/lib/category-api/binary-image-api.js"],"sourcesContent":["// Attributions\n// * Based on binary-gltf-utils under MIT license: Copyright (c) 2016-17 Karl Cheng\nimport { getISOBMFFMediaType } from \"./parse-isobmff-binary.js\";\nconst BIG_ENDIAN = false;\nconst LITTLE_ENDIAN = true;\n/**\n * Extracts `{mimeType, width and height}` from a memory buffer containing a known image format\n * Currently supports `image/png`, `image/jpeg`, `image/bmp` and `image/gif`.\n * @param binaryData: DataView | ArrayBuffer image file memory to parse\n * @returns metadata or null if memory is not a valid image file format layout.\n */\nexport function getBinaryImageMetadata(binaryData) {\n    const dataView = toDataView(binaryData);\n    return (getPngMetadata(dataView) ||\n        getJpegMetadata(dataView) ||\n        getGifMetadata(dataView) ||\n        getBmpMetadata(dataView) ||\n        getISOBMFFMetadata(dataView));\n}\n// ISOBMFF\nfunction getISOBMFFMetadata(binaryData) {\n    const buffer = new Uint8Array(binaryData instanceof DataView ? binaryData.buffer : binaryData);\n    const mediaType = getISOBMFFMediaType(buffer);\n    if (!mediaType) {\n        return null;\n    }\n    return {\n        mimeType: mediaType.mimeType,\n        // TODO - decode width and height\n        width: 0,\n        height: 0\n    };\n}\n// PNG\nfunction getPngMetadata(binaryData) {\n    const dataView = toDataView(binaryData);\n    // Check file contains the first 4 bytes of the PNG signature.\n    const isPng = dataView.byteLength >= 24 && dataView.getUint32(0, BIG_ENDIAN) === 0x89504e47;\n    if (!isPng) {\n        return null;\n    }\n    // Extract size from a binary PNG file\n    return {\n        mimeType: 'image/png',\n        width: dataView.getUint32(16, BIG_ENDIAN),\n        height: dataView.getUint32(20, BIG_ENDIAN)\n    };\n}\n// GIF\n// Extract size from a binary GIF file\n// TODO: GIF is not this simple\nfunction getGifMetadata(binaryData) {\n    const dataView = toDataView(binaryData);\n    // Check first 4 bytes of the GIF signature (\"GIF8\").\n    const isGif = dataView.byteLength >= 10 && dataView.getUint32(0, BIG_ENDIAN) === 0x47494638;\n    if (!isGif) {\n        return null;\n    }\n    // GIF is little endian.\n    return {\n        mimeType: 'image/gif',\n        width: dataView.getUint16(6, LITTLE_ENDIAN),\n        height: dataView.getUint16(8, LITTLE_ENDIAN)\n    };\n}\n// BMP\n// TODO: BMP is not this simple\nexport function getBmpMetadata(binaryData) {\n    const dataView = toDataView(binaryData);\n    // Check magic number is valid (first 2 characters should be \"BM\").\n    // The mandatory bitmap file header is 14 bytes long.\n    const isBmp = dataView.byteLength >= 14 &&\n        dataView.getUint16(0, BIG_ENDIAN) === 0x424d &&\n        dataView.getUint32(2, LITTLE_ENDIAN) === dataView.byteLength;\n    if (!isBmp) {\n        return null;\n    }\n    // BMP is little endian.\n    return {\n        mimeType: 'image/bmp',\n        width: dataView.getUint32(18, LITTLE_ENDIAN),\n        height: dataView.getUint32(22, LITTLE_ENDIAN)\n    };\n}\n// JPEG\n// Extract width and height from a binary JPEG file\nfunction getJpegMetadata(binaryData) {\n    const dataView = toDataView(binaryData);\n    // Check file contains the JPEG \"start of image\" (SOI) marker\n    // followed by another marker.\n    const isJpeg = dataView.byteLength >= 3 &&\n        dataView.getUint16(0, BIG_ENDIAN) === 0xffd8 &&\n        dataView.getUint8(2) === 0xff;\n    if (!isJpeg) {\n        return null;\n    }\n    const { tableMarkers, sofMarkers } = getJpegMarkers();\n    // Exclude the two byte SOI marker.\n    let i = 2;\n    while (i + 9 < dataView.byteLength) {\n        const marker = dataView.getUint16(i, BIG_ENDIAN);\n        // The frame that contains the width and height of the JPEG image.\n        if (sofMarkers.has(marker)) {\n            return {\n                mimeType: 'image/jpeg',\n                height: dataView.getUint16(i + 5, BIG_ENDIAN), // Number of lines\n                width: dataView.getUint16(i + 7, BIG_ENDIAN) // Number of pixels per line\n            };\n        }\n        // Miscellaneous tables/data preceding the frame header.\n        if (!tableMarkers.has(marker)) {\n            return null;\n        }\n        // Length includes size of length parameter but not the two byte header.\n        i += 2;\n        i += dataView.getUint16(i, BIG_ENDIAN);\n    }\n    return null;\n}\nfunction getJpegMarkers() {\n    // Tables/misc header markers.\n    // DQT, DHT, DAC, DRI, COM, APP_n\n    const tableMarkers = new Set([0xffdb, 0xffc4, 0xffcc, 0xffdd, 0xfffe]);\n    for (let i = 0xffe0; i < 0xfff0; ++i) {\n        tableMarkers.add(i);\n    }\n    // SOF markers and DHP marker.\n    // These markers are after tables/misc data.\n    const sofMarkers = new Set([\n        0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc5, 0xffc6, 0xffc7, 0xffc9, 0xffca, 0xffcb, 0xffcd, 0xffce,\n        0xffcf, 0xffde\n    ]);\n    return { tableMarkers, sofMarkers };\n}\n// TODO - move into image module?\nfunction toDataView(data) {\n    if (data instanceof DataView) {\n        return data;\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new DataView(data.buffer);\n    }\n    // TODO: make these functions work for Node.js buffers?\n    // if (bufferToArrayBuffer) {\n    //   data = bufferToArrayBuffer(data);\n    // }\n    // Careful - Node Buffers will look like ArrayBuffers (keep after isBuffer)\n    if (data instanceof ArrayBuffer) {\n        return new DataView(data);\n    }\n    throw new Error('toDataView');\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 3569, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3575, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/images/dist/lib/parsers/parse-to-node-image.js"],"sourcesContent":["import { assert } from '@loaders.gl/loader-utils';\nimport { getBinaryImageMetadata } from \"../category-api/binary-image-api.js\";\n// Use polyfills if installed to parsed image using get-pixels\nexport async function parseToNodeImage(arrayBuffer, options) {\n    const { mimeType } = getBinaryImageMetadata(arrayBuffer) || {};\n    // @ts-ignore\n    const parseImageNode = globalThis.loaders?.parseImageNode;\n    assert(parseImageNode); // '@loaders.gl/polyfills not installed'\n    // @ts-expect-error TODO should we throw error in this case?\n    return await parseImageNode(arrayBuffer, mimeType);\n}\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,eAAe,iBAAiB,WAAW,EAAE,OAAO;IACvD,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAA,GAAA,wMAAA,CAAA,yBAAsB,AAAD,EAAE,gBAAgB,CAAC;IAC7D,aAAa;IACb,MAAM,iBAAiB,WAAW,OAAO,EAAE;IAC3C,CAAA,GAAA,8LAAA,CAAA,SAAM,AAAD,EAAE,iBAAiB,wCAAwC;IAChE,4DAA4D;IAC5D,OAAO,MAAM,eAAe,aAAa;AAC7C","ignoreList":[0]}},
    {"offset": {"line": 3590, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3596, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/images/dist/lib/category-api/parsed-image-api.js"],"sourcesContent":["export function isImage(image) {\n    return Boolean(getImageTypeOrNull(image));\n}\nexport function deleteImage(image) {\n    switch (getImageType(image)) {\n        case 'imagebitmap':\n            image.close();\n            break;\n        default:\n        // Nothing to do for images and image data objects\n    }\n}\nexport function getImageType(image) {\n    const format = getImageTypeOrNull(image);\n    if (!format) {\n        throw new Error('Not an image');\n    }\n    return format;\n}\nexport function getImageSize(image) {\n    return getImageData(image);\n}\nexport function getImageData(image) {\n    switch (getImageType(image)) {\n        case 'data':\n            return image;\n        case 'image':\n        case 'imagebitmap':\n            // Extract the image data from the image via a canvas\n            const canvas = document.createElement('canvas');\n            // TODO - reuse the canvas?\n            const context = canvas.getContext('2d');\n            if (!context) {\n                throw new Error('getImageData');\n            }\n            // @ts-ignore\n            canvas.width = image.width;\n            // @ts-ignore\n            canvas.height = image.height;\n            // @ts-ignore\n            context.drawImage(image, 0, 0);\n            // @ts-ignore\n            return context.getImageData(0, 0, image.width, image.height);\n        default:\n            throw new Error('getImageData');\n    }\n}\n// PRIVATE\n// eslint-disable-next-line complexity\nfunction getImageTypeOrNull(image) {\n    if (typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n        return 'imagebitmap';\n    }\n    if (typeof Image !== 'undefined' && image instanceof Image) {\n        return 'image';\n    }\n    if (image && typeof image === 'object' && image.data && image.width && image.height) {\n        return 'data';\n    }\n    return null;\n}\n"],"names":[],"mappings":";;;;;;;AAAO,SAAS,QAAQ,KAAK;IACzB,OAAO,QAAQ,mBAAmB;AACtC;AACO,SAAS,YAAY,KAAK;IAC7B,OAAQ,aAAa;QACjB,KAAK;YACD,MAAM,KAAK;YACX;QACJ;IAEJ;AACJ;AACO,SAAS,aAAa,KAAK;IAC9B,MAAM,SAAS,mBAAmB;IAClC,IAAI,CAAC,QAAQ;QACT,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;AACX;AACO,SAAS,aAAa,KAAK;IAC9B,OAAO,aAAa;AACxB;AACO,SAAS,aAAa,KAAK;IAC9B,OAAQ,aAAa;QACjB,KAAK;YACD,OAAO;QACX,KAAK;QACL,KAAK;YACD,qDAAqD;YACrD,MAAM,SAAS,SAAS,aAAa,CAAC;YACtC,2BAA2B;YAC3B,MAAM,UAAU,OAAO,UAAU,CAAC;YAClC,IAAI,CAAC,SAAS;gBACV,MAAM,IAAI,MAAM;YACpB;YACA,aAAa;YACb,OAAO,KAAK,GAAG,MAAM,KAAK;YAC1B,aAAa;YACb,OAAO,MAAM,GAAG,MAAM,MAAM;YAC5B,aAAa;YACb,QAAQ,SAAS,CAAC,OAAO,GAAG;YAC5B,aAAa;YACb,OAAO,QAAQ,YAAY,CAAC,GAAG,GAAG,MAAM,KAAK,EAAE,MAAM,MAAM;QAC/D;YACI,MAAM,IAAI,MAAM;IACxB;AACJ;AACA,UAAU;AACV,sCAAsC;AACtC,SAAS,mBAAmB,KAAK;IAC7B,IAAI,OAAO,gBAAgB,eAAe,iBAAiB,aAAa;QACpE,OAAO;IACX;IACA,IAAI,OAAO,UAAU,eAAe,iBAAiB,OAAO;QACxD,OAAO;IACX;IACA,IAAI,SAAS,OAAO,UAAU,YAAY,MAAM,IAAI,IAAI,MAAM,KAAK,IAAI,MAAM,MAAM,EAAE;QACjF,OAAO;IACX;IACA,OAAO;AACX","ignoreList":[0]}},
    {"offset": {"line": 3663, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3669, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/images/dist/lib/category-api/image-type.js"],"sourcesContent":["import { isBrowser } from '@loaders.gl/loader-utils';\n// @ts-ignore TS2339: Property does not exist on type\nconst parseImageNode = globalThis.loaders?.parseImageNode;\nconst IMAGE_SUPPORTED = typeof Image !== 'undefined'; // NOTE: \"false\" positives if jsdom is installed\nconst IMAGE_BITMAP_SUPPORTED = typeof ImageBitmap !== 'undefined';\nconst NODE_IMAGE_SUPPORTED = Boolean(parseImageNode);\nconst DATA_SUPPORTED = isBrowser ? true : NODE_IMAGE_SUPPORTED;\n/**\n * Checks if a loaders.gl image type is supported\n * @param type image type string\n */\nexport function isImageTypeSupported(type) {\n    switch (type) {\n        case 'auto':\n            // Should only ever be false in Node.js, if polyfills have not been installed...\n            return IMAGE_BITMAP_SUPPORTED || IMAGE_SUPPORTED || DATA_SUPPORTED;\n        case 'imagebitmap':\n            return IMAGE_BITMAP_SUPPORTED;\n        case 'image':\n            return IMAGE_SUPPORTED;\n        case 'data':\n            return DATA_SUPPORTED;\n        default:\n            throw new Error(`@loaders.gl/images: image ${type} not supported in this environment`);\n    }\n}\n/**\n * Returns the \"most performant\" supported image type on this platform\n * @returns image type string\n */\nexport function getDefaultImageType() {\n    if (IMAGE_BITMAP_SUPPORTED) {\n        return 'imagebitmap';\n    }\n    if (IMAGE_SUPPORTED) {\n        return 'image';\n    }\n    if (DATA_SUPPORTED) {\n        return 'data';\n    }\n    // This should only happen in Node.js\n    throw new Error('Install \\'@loaders.gl/polyfills\\' to parse images under Node.js');\n}\n"],"names":[],"mappings":";;;;AAAA;;AACA,qDAAqD;AACrD,MAAM,iBAAiB,WAAW,OAAO,EAAE;AAC3C,MAAM,kBAAkB,OAAO,UAAU,aAAa,gDAAgD;AACtG,MAAM,yBAAyB,OAAO,gBAAgB;AACtD,MAAM,uBAAuB,QAAQ;AACrC,MAAM,iBAAiB,+LAAA,CAAA,YAAS,GAAG,OAAO;AAKnC,SAAS,qBAAqB,IAAI;IACrC,OAAQ;QACJ,KAAK;YACD,gFAAgF;YAChF,OAAO,0BAA0B,mBAAmB;QACxD,KAAK;YACD,OAAO;QACX,KAAK;YACD,OAAO;QACX,KAAK;YACD,OAAO;QACX;YACI,MAAM,IAAI,MAAM,CAAC,0BAA0B,EAAE,KAAK,kCAAkC,CAAC;IAC7F;AACJ;AAKO,SAAS;IACZ,IAAI,wBAAwB;QACxB,OAAO;IACX;IACA,IAAI,iBAAiB;QACjB,OAAO;IACX;IACA,IAAI,gBAAgB;QAChB,OAAO;IACX;IACA,qCAAqC;IACrC,MAAM,IAAI,MAAM;AACpB","ignoreList":[0]}},
    {"offset": {"line": 3709, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3715, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/images/dist/lib/parsers/parse-image.js"],"sourcesContent":["import { assert } from '@loaders.gl/loader-utils';\nimport { isImageTypeSupported, getDefaultImageType } from \"../category-api/image-type.js\";\nimport { getImageData } from \"../category-api/parsed-image-api.js\";\nimport { parseToImage } from \"./parse-to-image.js\";\nimport { parseToImageBitmap } from \"./parse-to-image-bitmap.js\";\nimport { parseToNodeImage } from \"./parse-to-node-image.js\";\n// Parse to platform defined image type (data on node, ImageBitmap or HTMLImage on browser)\n// eslint-disable-next-line complexity\nexport async function parseImage(arrayBuffer, options, context) {\n    options = options || {};\n    const imageOptions = options.image || {};\n    // The user can request a specific output format via `options.image.type`\n    const imageType = imageOptions.type || 'auto';\n    const { url } = context || {};\n    // Note: For options.image.type === `data`, we may still need to load as `image` or `imagebitmap`\n    const loadType = getLoadableImageType(imageType);\n    let image;\n    switch (loadType) {\n        case 'imagebitmap':\n            image = await parseToImageBitmap(arrayBuffer, options, url);\n            break;\n        case 'image':\n            image = await parseToImage(arrayBuffer, options, url);\n            break;\n        case 'data':\n            // Node.js loads imagedata directly\n            image = await parseToNodeImage(arrayBuffer, options);\n            break;\n        default:\n            assert(false);\n    }\n    // Browser: if options.image.type === 'data', we can now extract data from the loaded image\n    if (imageType === 'data') {\n        image = getImageData(image);\n    }\n    return image;\n}\n// Get a loadable image type from image type\nfunction getLoadableImageType(type) {\n    switch (type) {\n        case 'auto':\n        case 'data':\n            // Browser: For image data we need still need to load using an image format\n            // Node: the default image type is `data`.\n            return getDefaultImageType();\n        default:\n            // Throw an error if not supported\n            isImageTypeSupported(type);\n            return type;\n    }\n}\n"],"names":[],"mappings":";;;AAIA;AADA;AAEA;AALA;AAEA;AADA;;;;;;;AAOO,eAAe,WAAW,WAAW,EAAE,OAAO,EAAE,OAAO;IAC1D,UAAU,WAAW,CAAC;IACtB,MAAM,eAAe,QAAQ,KAAK,IAAI,CAAC;IACvC,yEAAyE;IACzE,MAAM,YAAY,aAAa,IAAI,IAAI;IACvC,MAAM,EAAE,GAAG,EAAE,GAAG,WAAW,CAAC;IAC5B,iGAAiG;IACjG,MAAM,WAAW,qBAAqB;IACtC,IAAI;IACJ,OAAQ;QACJ,KAAK;YACD,QAAQ,MAAM,CAAA,GAAA,wMAAA,CAAA,qBAAkB,AAAD,EAAE,aAAa,SAAS;YACvD;QACJ,KAAK;YACD,QAAQ,MAAM,CAAA,GAAA,8LAAA,CAAA,eAAY,AAAD,EAAE,aAAa,SAAS;YACjD;QACJ,KAAK;YACD,mCAAmC;YACnC,QAAQ,MAAM,CAAA,GAAA,sMAAA,CAAA,mBAAgB,AAAD,EAAE,aAAa;YAC5C;QACJ;YACI,CAAA,GAAA,8LAAA,CAAA,SAAM,AAAD,EAAE;IACf;IACA,2FAA2F;IAC3F,IAAI,cAAc,QAAQ;QACtB,QAAQ,CAAA,GAAA,wMAAA,CAAA,eAAY,AAAD,EAAE;IACzB;IACA,OAAO;AACX;AACA,4CAA4C;AAC5C,SAAS,qBAAqB,IAAI;IAC9B,OAAQ;QACJ,KAAK;QACL,KAAK;YACD,2EAA2E;YAC3E,0CAA0C;YAC1C,OAAO,CAAA,GAAA,+LAAA,CAAA,sBAAmB,AAAD;QAC7B;YACI,kCAAkC;YAClC,CAAA,GAAA,+LAAA,CAAA,uBAAoB,AAAD,EAAE;YACrB,OAAO;IACf;AACJ","ignoreList":[0]}},
    {"offset": {"line": 3773, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3779, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/node_modules/%40loaders.gl/images/dist/image-loader.js"],"sourcesContent":["// import type { ImageType } from '@loaders.gl/schema';\nimport { VERSION } from \"./lib/utils/version.js\";\nimport { parseImage } from \"./lib/parsers/parse-image.js\";\nimport { getBinaryImageMetadata } from \"./lib/category-api/binary-image-api.js\";\nconst EXTENSIONS = ['png', 'jpg', 'jpeg', 'gif', 'webp', 'bmp', 'ico', 'svg', 'avif'];\nconst MIME_TYPES = [\n    'image/png',\n    'image/jpeg',\n    'image/gif',\n    'image/webp',\n    'image/avif',\n    'image/bmp',\n    'image/vnd.microsoft.icon',\n    'image/svg+xml'\n];\nconst DEFAULT_IMAGE_LOADER_OPTIONS = {\n    image: {\n        type: 'auto',\n        decode: true // if format is HTML\n    }\n    // imagebitmap: {} - passes (platform dependent) parameters to ImageBitmap constructor\n};\n/**\n * Loads a platform-specific image type\n * Note: This type can be used as input data to WebGL texture creation\n */\nexport const ImageLoader = {\n    dataType: null,\n    batchType: null,\n    id: 'image',\n    module: 'images',\n    name: 'Images',\n    version: VERSION,\n    mimeTypes: MIME_TYPES,\n    extensions: EXTENSIONS,\n    parse: parseImage,\n    // TODO: byteOffset, byteLength;\n    tests: [(arrayBuffer) => Boolean(getBinaryImageMetadata(new DataView(arrayBuffer)))],\n    options: DEFAULT_IMAGE_LOADER_OPTIONS\n};\n"],"names":[],"mappings":"AAAA,uDAAuD;;;;AACvD;AACA;AACA;;;;AACA,MAAM,aAAa;IAAC;IAAO;IAAO;IAAQ;IAAO;IAAQ;IAAO;IAAO;IAAO;CAAO;AACrF,MAAM,aAAa;IACf;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH;AACD,MAAM,+BAA+B;IACjC,OAAO;QACH,MAAM;QACN,QAAQ,KAAK,oBAAoB;IACrC;AAEJ;AAKO,MAAM,cAAc;IACvB,UAAU;IACV,WAAW;IACX,IAAI;IACJ,QAAQ;IACR,MAAM;IACN,SAAS,+KAAA,CAAA,UAAO;IAChB,WAAW;IACX,YAAY;IACZ,OAAO,wLAAA,CAAA,aAAU;IACjB,gCAAgC;IAChC,OAAO;QAAC,CAAC,cAAgB,QAAQ,CAAA,GAAA,wMAAA,CAAA,yBAAsB,AAAD,EAAE,IAAI,SAAS;KAAe;IACpF,SAAS;AACb","ignoreList":[0]}},
    {"offset": {"line": 3832, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}