{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/src/app/components/charts/BarChart.tsx"],"sourcesContent":["import { BarChart as RechartsBarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\n\nconst data = [\n  { name: 'Ene', value: 400 },\n  { name: 'Feb', value: 300 },\n  { name: 'Mar', value: 600 },\n  { name: 'Abr', value: 200 },\n  { name: 'May', value: 500 },\n];\n\nexport function BarChart() {\n  return (\n    <RechartsBarChart width={300} height={200} data={data}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Bar dataKey=\"value\" fill=\"#1c1b1a\" />\n    </RechartsBarChart>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAEA,MAAM,OAAO;IACX;QAAE,MAAM;QAAO,OAAO;IAAI;IAC1B;QAAE,MAAM;QAAO,OAAO;IAAI;IAC1B;QAAE,MAAM;QAAO,OAAO;IAAI;IAC1B;QAAE,MAAM;QAAO,OAAO;IAAI;IAC1B;QAAE,MAAM;QAAO,OAAO;IAAI;CAC3B;AAEM,SAAS;IACd,qBACE,6LAAC,uJAAA,CAAA,WAAgB;QAAC,OAAO;QAAK,QAAQ;QAAK,MAAM;;0BAC/C,6LAAC,gKAAA,CAAA,gBAAa;gBAAC,iBAAgB;;;;;;0BAC/B,6LAAC,wJAAA,CAAA,QAAK;gBAAC,SAAQ;;;;;;0BACf,6LAAC,wJAAA,CAAA,QAAK;;;;;0BACN,6LAAC,0JAAA,CAAA,UAAO;;;;;0BACR,6LAAC,sJAAA,CAAA,MAAG;gBAAC,SAAQ;gBAAQ,MAAK;;;;;;;;;;;;AAGhC;KAVgB"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/src/app/components/charts/LineChart.tsx"],"sourcesContent":["import { LineChart as RechartsLineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip } from 'recharts';\n\nconst data = [\n  { name: 'Ene', value: 400 },\n  { name: 'Feb', value: 300 },\n  { name: 'Mar', value: 600 },\n  { name: 'Abr', value: 200 },\n  { name: 'May', value: 500 },\n];\n\nexport function LineChart() {\n  return (\n    <RechartsLineChart width={300} height={200} data={data}>\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"name\" />\n      <YAxis />\n      <Tooltip />\n      <Line type=\"monotone\" dataKey=\"value\" stroke=\"#434141\" />\n    </RechartsLineChart>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAEA,MAAM,OAAO;IACX;QAAE,MAAM;QAAO,OAAO;IAAI;IAC1B;QAAE,MAAM;QAAO,OAAO;IAAI;IAC1B;QAAE,MAAM;QAAO,OAAO;IAAI;IAC1B;QAAE,MAAM;QAAO,OAAO;IAAI;IAC1B;QAAE,MAAM;QAAO,OAAO;IAAI;CAC3B;AAEM,SAAS;IACd,qBACE,6LAAC,wJAAA,CAAA,YAAiB;QAAC,OAAO;QAAK,QAAQ;QAAK,MAAM;;0BAChD,6LAAC,gKAAA,CAAA,gBAAa;gBAAC,iBAAgB;;;;;;0BAC/B,6LAAC,wJAAA,CAAA,QAAK;gBAAC,SAAQ;;;;;;0BACf,6LAAC,wJAAA,CAAA,QAAK;;;;;0BACN,6LAAC,0JAAA,CAAA,UAAO;;;;;0BACR,6LAAC,uJAAA,CAAA,OAAI;gBAAC,MAAK;gBAAW,SAAQ;gBAAQ,QAAO;;;;;;;;;;;;AAGnD;KAVgB"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 190, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/src/app/components/charts/PieChart.tsx"],"sourcesContent":["import { PieChart as RechartsPieChart, Pie, Cell, Tooltip } from 'recharts';\n\nconst data = [\n  { name: 'A', value: 400 },\n  { name: 'B', value: 300 },\n  { name: 'C', value: 300 },\n];\n\nconst COLORS = ['#1c1b1a', '#282727', '#434141'];\n\nexport function PieChart() {\n  return (\n    <RechartsPieChart width={300} height={200}>\n      <Pie\n        data={data}\n        cx={150}\n        cy={100}\n        innerRadius={60}\n        outerRadius={80}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n      >\n        {data.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n        ))}\n      </Pie>\n      <Tooltip />\n    </RechartsPieChart>\n  );\n} "],"names":[],"mappings":";;;;AAAA;AAAA;AAAA;AAAA;;;AAEA,MAAM,OAAO;IACX;QAAE,MAAM;QAAK,OAAO;IAAI;IACxB;QAAE,MAAM;QAAK,OAAO;IAAI;IACxB;QAAE,MAAM;QAAK,OAAO;IAAI;CACzB;AAED,MAAM,SAAS;IAAC;IAAW;IAAW;CAAU;AAEzC,SAAS;IACd,qBACE,6LAAC,uJAAA,CAAA,WAAgB;QAAC,OAAO;QAAK,QAAQ;;0BACpC,6LAAC,kJAAA,CAAA,MAAG;gBACF,MAAM;gBACN,IAAI;gBACJ,IAAI;gBACJ,aAAa;gBACb,aAAa;gBACb,MAAK;gBACL,SAAQ;0BAEP,KAAK,GAAG,CAAC,CAAC,OAAO,sBAChB,6LAAC,uJAAA,CAAA,OAAI;wBAAuB,MAAM,MAAM,CAAC,QAAQ,OAAO,MAAM,CAAC;uBAApD,CAAC,KAAK,EAAE,OAAO;;;;;;;;;;0BAG9B,6LAAC,0JAAA,CAAA,UAAO;;;;;;;;;;;AAGd;KAnBgB"}},
    {"offset": {"line": 262, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/src/app/components/filters/Calendar.tsx"],"sourcesContent":["import React from 'react';\nimport ReactCalendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\n\ninterface CalendarProps {\n  selectedDate: string; // YYYY-MM-DD format\n  onChange: (date: string) => void;\n  disabledDates?: string[];\n}\n\nexport function Calendar({ selectedDate, onChange, disabledDates = [] }: CalendarProps) {\n  const handleDateChange = (date: Date) => {\n    // âœ… Convert to local date before setting state\n    const adjustedDate = new Date(date.getFullYear(), date.getMonth(), date.getDate()); // Forces local timezone\n    const formattedDate = adjustedDate.toISOString().split(\"T\")[0];\n\n    console.log(\"Calendar Selected Date (Corrected):\", formattedDate);\n    onChange(formattedDate);\n  };\n\n  const isTileDisabled = ({ date }: { date: Date }) => {\n    // âœ… Disable dates that are not in the availableDates array\n    const formattedDate = date.toISOString().split(\"T\")[0];\n    return !disabledDates.includes(formattedDate);\n  };\n\n  return (\n    <ReactCalendar\n      value={new Date(selectedDate + \"T00:00:00\")} // âœ… Ensures correct timezone\n      onChange={(date) => handleDateChange(date as Date)}\n      tileDisabled={isTileDisabled} // Disable unavailable dates\n      className=\"w-full\"\n    />\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;;AASO,SAAS,SAAS,EAAE,YAAY,EAAE,QAAQ,EAAE,gBAAgB,EAAE,EAAiB;IACpF,MAAM,mBAAmB,CAAC;QACxB,+CAA+C;QAC/C,MAAM,eAAe,IAAI,KAAK,KAAK,WAAW,IAAI,KAAK,QAAQ,IAAI,KAAK,OAAO,KAAK,wBAAwB;QAC5G,MAAM,gBAAgB,aAAa,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QAE9D,QAAQ,GAAG,CAAC,uCAAuC;QACnD,SAAS;IACX;IAEA,MAAM,iBAAiB,CAAC,EAAE,IAAI,EAAkB;QAC9C,2DAA2D;QAC3D,MAAM,gBAAgB,KAAK,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QACtD,OAAO,CAAC,cAAc,QAAQ,CAAC;IACjC;IAEA,qBACE,6LAAC,4KAAA,CAAA,UAAa;QACZ,OAAO,IAAI,KAAK,eAAe;QAC/B,UAAU,CAAC,OAAS,iBAAiB;QACrC,cAAc;QACd,WAAU;;;;;;AAGhB;KAxBgB"}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/src/app/components/charts/HeatMap.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport DeckGL from '@deck.gl/react';\nimport { HeatmapLayer } from '@deck.gl/aggregation-layers';\nimport { BitmapLayer } from '@deck.gl/layers';\nimport { GoogleMapsOverlay } from '@deck.gl/google-maps';\n\nconst GOOGLE_MAPS_API_KEY = 'AIzaSyALw8hi8WHQy8AuqZXPD2lMkQai1ppnxyM'; // Replace with a valid key\nconst API_URL = \"http://localhost:5000/heatmap\"; // Flask backend\nconst BITMAP_API_URL = \"http://localhost:5000/bitmap\"; // Flask image API\n\ntype Observation = {\n  id: string;\n  id_person: string;\n  lat: number;\n  long: number;\n  timestamp: string;\n};\n\nexport default function HeatMap({ selectedDate, timeRange }: { selectedDate: string; timeRange: [number, number] }) {\n  const [data, setData] = useState<Observation[]>([]);\n  const [bitmapImage, setBitmapImage] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [center, setCenter] = useState({ lat: 25.6518, lng: -100.2870 });\n\n  // ðŸ”¹ Fetch Heatmap Data\n  useEffect(() => {\n    if (!selectedDate) return;\n\n    setLoading(true);\n    setError(null);\n\n    console.log(`Fetching heatmap data for date: ${selectedDate}, Time Range: ${timeRange[0]}-${timeRange[1]}`);\n\n    fetch(`${API_URL}?date=${selectedDate}&startHour=${timeRange[0]}&endHour=${timeRange[1]}`)\n      .then((res) => {\n        if (!res.ok) {\n          throw new Error(`HTTP error! Status: ${res.status}`);\n        }\n        return res.json();\n      })\n      .then((json) => {\n        if (!json || !json.features) {\n          throw new Error(\"Invalid response format from backend.\");\n        }\n\n        const processedData = json.features.map((d: any) => ({\n          id: d.properties.id,\n          id_person: d.properties.id_person,\n          lat: d.geometry.coordinates[1], // lat\n          long: d.geometry.coordinates[0], // long\n          timestamp: d.properties.timestamp\n        }));\n\n        setData(processedData);\n\n        if (processedData.length > 0) {\n          setCenter({ lat: processedData[0].lat, lng: processedData[0].long });\n        }\n      })\n      .catch((err) => {\n        console.error(\"Error fetching heatmap data:\", err);\n        setError(err.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [selectedDate, timeRange]); // âœ… Update heatmap when date or hour changes\n\n  // ðŸ”¹ Fetch Bitmap Image\n  useEffect(() => {\n    fetch(BITMAP_API_URL)\n      .then((res) => res.json())\n      .then((json) => {\n        if (json.image) {\n          setBitmapImage(json.image);\n        }\n      })\n      .catch((err) => console.error(\"Error fetching bitmap image:\", err));\n  }, []);\n\n  useEffect(() => {\n    if (!data.length && !bitmapImage) return;\n\n    const map = new google.maps.Map(document.getElementById(\"map-container\") as HTMLElement, {\n      center: center,\n      zoom: 18,\n      mapTypeId: 'satellite',\n      disableDefaultUI: true,\n    });\n\n    const bitmapLayer = new BitmapLayer({\n      id: 'bitmap-layer',\n      bounds: [\n        [-100.28813684548274, 25.650376387020653], // Bottom-left\n        [-100.28813684548274, 25.654316647171434], // Top-left\n        [-100.28389981756604, 25.654316647171434], // Top-right\n        [-100.28389981756604, 25.650376387020653]  // Bottom-right\n      ],\n      image: bitmapImage, // Base64 Image\n      opacity: 1,\n    });\n    const layers = [bitmapLayer];\n    \n    const heatmapLayer = new HeatmapLayer({\n      id: 'heatmap-layer',\n      data,\n      getPosition: (d) => [d.long, d.lat],\n      getWeight: (d) => 1,\n      aggregation: 'SUM',\n      radiusPixels: 40,\n    });\n\n    layers.push(heatmapLayer);\n\n\n\n    const overlay = new GoogleMapsOverlay({ layers });\n    overlay.setMap(map);\n  }, [data, center, bitmapImage]); // âœ… Updates when data or image changes\n\n  return (\n    <div className=\"relative w-full h-[500px] rounded-lg overflow-hidden\">\n      {loading && <p className=\"text-center\">Loading heatmap...</p>}\n      {error && <p className=\"text-center text-red-500\">Error: {error}</p>}\n      <div id=\"map-container\" className=\"absolute inset-0\" />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAGA;AADA;AAEA;;;AANA;;;;;AAQA,MAAM,sBAAsB,2CAA2C,2BAA2B;AAClG,MAAM,UAAU,iCAAiC,gBAAgB;AACjE,MAAM,iBAAiB,gCAAgC,kBAAkB;AAU1D,SAAS,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAyD;;IAChH,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB,EAAE;IAClD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAC9D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;QAAE,KAAK;QAAS,KAAK,CAAC;IAAS;IAEpE,wBAAwB;IACxB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,IAAI,CAAC,cAAc;YAEnB,WAAW;YACX,SAAS;YAET,QAAQ,GAAG,CAAC,CAAC,gCAAgC,EAAE,aAAa,cAAc,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,EAAE,SAAS,CAAC,EAAE,EAAE;YAE1G,MAAM,GAAG,QAAQ,MAAM,EAAE,aAAa,WAAW,EAAE,SAAS,CAAC,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,EAAE,EAAE,EACtF,IAAI;qCAAC,CAAC;oBACL,IAAI,CAAC,IAAI,EAAE,EAAE;wBACX,MAAM,IAAI,MAAM,CAAC,oBAAoB,EAAE,IAAI,MAAM,EAAE;oBACrD;oBACA,OAAO,IAAI,IAAI;gBACjB;oCACC,IAAI;qCAAC,CAAC;oBACL,IAAI,CAAC,QAAQ,CAAC,KAAK,QAAQ,EAAE;wBAC3B,MAAM,IAAI,MAAM;oBAClB;oBAEA,MAAM,gBAAgB,KAAK,QAAQ,CAAC,GAAG;2DAAC,CAAC,IAAW,CAAC;gCACnD,IAAI,EAAE,UAAU,CAAC,EAAE;gCACnB,WAAW,EAAE,UAAU,CAAC,SAAS;gCACjC,KAAK,EAAE,QAAQ,CAAC,WAAW,CAAC,EAAE;gCAC9B,MAAM,EAAE,QAAQ,CAAC,WAAW,CAAC,EAAE;gCAC/B,WAAW,EAAE,UAAU,CAAC,SAAS;4BACnC,CAAC;;oBAED,QAAQ;oBAER,IAAI,cAAc,MAAM,GAAG,GAAG;wBAC5B,UAAU;4BAAE,KAAK,aAAa,CAAC,EAAE,CAAC,GAAG;4BAAE,KAAK,aAAa,CAAC,EAAE,CAAC,IAAI;wBAAC;oBACpE;gBACF;oCACC,KAAK;qCAAC,CAAC;oBACN,QAAQ,KAAK,CAAC,gCAAgC;oBAC9C,SAAS,IAAI,OAAO;gBACtB;oCACC,OAAO;qCAAC;oBACP,WAAW;gBACb;;QACJ;4BAAG;QAAC;QAAc;KAAU,GAAG,6CAA6C;IAE5E,wBAAwB;IACxB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,MAAM,gBACH,IAAI;qCAAC,CAAC,MAAQ,IAAI,IAAI;oCACtB,IAAI;qCAAC,CAAC;oBACL,IAAI,KAAK,KAAK,EAAE;wBACd,eAAe,KAAK,KAAK;oBAC3B;gBACF;oCACC,KAAK;qCAAC,CAAC,MAAQ,QAAQ,KAAK,CAAC,gCAAgC;;QAClE;4BAAG,EAAE;IAEL,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;6BAAE;YACR,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,aAAa;YAElC,MAAM,MAAM,IAAI,OAAO,IAAI,CAAC,GAAG,CAAC,SAAS,cAAc,CAAC,kBAAiC;gBACvF,QAAQ;gBACR,MAAM;gBACN,WAAW;gBACX,kBAAkB;YACpB;YAEA,MAAM,cAAc,IAAI,iOAAA,CAAA,cAAW,CAAC;gBAClC,IAAI;gBACJ,QAAQ;oBACN;wBAAC,CAAC;wBAAoB;qBAAmB;oBACzC;wBAAC,CAAC;wBAAoB;qBAAmB;oBACzC;wBAAC,CAAC;wBAAoB;qBAAmB;oBACzC;wBAAC,CAAC;wBAAoB;qBAAmB,CAAE,eAAe;iBAC3D;gBACD,OAAO;gBACP,SAAS;YACX;YACA,MAAM,SAAS;gBAAC;aAAY;YAE5B,MAAM,eAAe,IAAI,mPAAA,CAAA,eAAY,CAAC;gBACpC,IAAI;gBACJ;gBACA,WAAW;yCAAE,CAAC,IAAM;4BAAC,EAAE,IAAI;4BAAE,EAAE,GAAG;yBAAC;;gBACnC,SAAS;yCAAE,CAAC,IAAM;;gBAClB,aAAa;gBACb,cAAc;YAChB;YAEA,OAAO,IAAI,CAAC;YAIZ,MAAM,UAAU,IAAI,sOAAA,CAAA,oBAAiB,CAAC;gBAAE;YAAO;YAC/C,QAAQ,MAAM,CAAC;QACjB;4BAAG;QAAC;QAAM;QAAQ;KAAY,GAAG,uCAAuC;IAExE,qBACE,6LAAC;QAAI,WAAU;;YACZ,yBAAW,6LAAC;gBAAE,WAAU;0BAAc;;;;;;YACtC,uBAAS,6LAAC;gBAAE,WAAU;;oBAA2B;oBAAQ;;;;;;;0BAC1D,6LAAC;gBAAI,IAAG;gBAAgB,WAAU;;;;;;;;;;;;AAGxC;GA9GwB;KAAA"}},
    {"offset": {"line": 512, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 518, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/src/app/components/filters/RangeSlider.tsx"],"sourcesContent":["import React from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\ninterface RangeSliderProps {\n  value: [number, number];\n  onChange: (value: [number, number]) => void;\n}\n\nexport default function RangeSlider({ value, onChange }: RangeSliderProps) {\n  return (\n    <div className=\"p-4\">\n      <Slider\n        range\n        min={0}\n        max={23}\n        step={1}\n        value={value}\n        onChange={(newValue) => onChange(newValue as [number, number])}\n      />\n      <div className=\"flex justify-between text-sm mt-2\">\n        <span>Desde: {String(value[0]).padStart(2, '0')}:00</span>\n        <span>Hasta: {String(value[1]).padStart(2, '0')}:00</span>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;;;;AAQe,SAAS,YAAY,EAAE,KAAK,EAAE,QAAQ,EAAoB;IACvE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,8JAAA,CAAA,UAAM;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,MAAM;gBACN,OAAO;gBACP,UAAU,CAAC,WAAa,SAAS;;;;;;0BAEnC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;;4BAAK;4BAAQ,OAAO,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,GAAG;4BAAK;;;;;;;kCAChD,6LAAC;;4BAAK;4BAAQ,OAAO,KAAK,CAAC,EAAE,EAAE,QAAQ,CAAC,GAAG;4BAAK;;;;;;;;;;;;;;;;;;;AAIxD;KAjBwB"}},
    {"offset": {"line": 587, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 593, "column": 0}, "map": {"version":3,"sources":["file:///Users/l03542515/Desktop/visioncityv1/src/frontend/src/app/dashboard/setting/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { BarChart } from '@/app/components/charts/BarChart';\nimport { LineChart } from '@/app/components/charts/LineChart';\nimport { PieChart } from '@/app/components/charts/PieChart';\nimport { Calendar } from '@/app/components/filters/Calendar';\nimport HeatMap from '@/app/components/charts/HeatMap';\nimport RangeSlider from '@/app/components/filters/RangeSlider'; // New component\n\nconst API_URL = \"http://localhost:5000/available-dates\"; // Flask API\n\nexport default function DashboardPage() {\n  const getTodayDate = () => {\n    const today = new Date();\n    return today.toISOString().split(\"T\")[0]; // Always format as YYYY-MM-DD\n  };\n\n  const [selectedDate, setSelectedDate] = useState<string>(getTodayDate());\n  const [availableDates, setAvailableDates] = useState<string[]>([]);\n  const [timeRange, setTimeRange] = useState<[number, number]>([12, 16]); // âœ… Default 12:00 - 16:00\n\n  useEffect(() => {\n    fetch(API_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        if (data.available_dates.length > 0) {\n          const firstAvailableDate = data.available_dates.includes(getTodayDate())\n            ? getTodayDate()\n            : data.available_dates[0];\n\n          setAvailableDates(data.available_dates);\n          setSelectedDate(firstAvailableDate);\n        }\n      })\n      .catch((err) => console.error(\"Error fetching available dates:\", err));\n  }, []);\n\n  const handleDateChange = (date: string) => {\n    if (availableDates.includes(date)) {\n      setSelectedDate(date);\n    }\n  };\n\n  return (\n    <div className=\"p-6 space-y-6\">\n      <h1 className=\"text-2xl font-bold mb-6\">Dashboard</h1>\n\n      <div className=\"bg-white p-4 rounded-lg shadow\">\n        <h2 className=\"text-lg font-semibold mb-4\">Analytics</h2>\n        <div className=\"flex flex-wrap justify-between gap-4\">\n          <div className=\"flex-1 min-w-[250px]\"><BarChart /></div>\n          <div className=\"flex-1 min-w-[250px]\"><LineChart /></div>\n          <div className=\"flex-1 min-w-[250px]\"><PieChart /></div>\n        </div>\n      </div>\n\n\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mt-6\">\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <h2 className=\"text-lg font-semibold mb-4\">Filter</h2>\n          <Calendar selectedDate={selectedDate} onChange={handleDateChange} disabledDates={availableDates} />\n          <RangeSlider value={timeRange} onChange={setTimeRange} />\n        </div>\n\n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <h2 className=\"text-lg font-semibold mb-4\">Map</h2>\n          <HeatMap selectedDate={selectedDate} timeRange={timeRange} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qQAAgE,gBAAgB;;;AARhF;;;;;;;;AAUA,MAAM,UAAU,yCAAyC,YAAY;AAEtD,SAAS;;IACtB,MAAM,eAAe;QACnB,MAAM,QAAQ,IAAI;QAClB,OAAO,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,8BAA8B;IAC1E;IAEA,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAU;IACzD,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACjE,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAoB;QAAC;QAAI;KAAG,GAAG,0BAA0B;IAElG,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;mCAAE;YACR,MAAM,SACH,IAAI;2CAAC,CAAC,MAAQ,IAAI,IAAI;0CACtB,IAAI;2CAAC,CAAC;oBACL,IAAI,KAAK,eAAe,CAAC,MAAM,GAAG,GAAG;wBACnC,MAAM,qBAAqB,KAAK,eAAe,CAAC,QAAQ,CAAC,kBACrD,iBACA,KAAK,eAAe,CAAC,EAAE;wBAE3B,kBAAkB,KAAK,eAAe;wBACtC,gBAAgB;oBAClB;gBACF;0CACC,KAAK;2CAAC,CAAC,MAAQ,QAAQ,KAAK,CAAC,mCAAmC;;QACrE;kCAAG,EAAE;IAEL,MAAM,mBAAmB,CAAC;QACxB,IAAI,eAAe,QAAQ,CAAC,OAAO;YACjC,gBAAgB;QAClB;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAA0B;;;;;;0BAExC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA6B;;;;;;kCAC3C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CAAuB,cAAA,6LAAC,kJAAA,CAAA,WAAQ;;;;;;;;;;0CAC/C,6LAAC;gCAAI,WAAU;0CAAuB,cAAA,6LAAC,mJAAA,CAAA,YAAS;;;;;;;;;;0CAChD,6LAAC;gCAAI,WAAU;0CAAuB,cAAA,6LAAC,kJAAA,CAAA,WAAQ;;;;;;;;;;;;;;;;;;;;;;0BAKnD,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,6LAAC,mJAAA,CAAA,WAAQ;gCAAC,cAAc;gCAAc,UAAU;gCAAkB,eAAe;;;;;;0CACjF,6LAAC,sJAAA,CAAA,UAAW;gCAAC,OAAO;gCAAW,UAAU;;;;;;;;;;;;kCAG3C,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAG,WAAU;0CAA6B;;;;;;0CAC3C,6LAAC,iJAAA,CAAA,UAAO;gCAAC,cAAc;gCAAc,WAAW;;;;;;;;;;;;;;;;;;;;;;;;AAK1D;GA5DwB;KAAA"}},
    {"offset": {"line": 804, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}